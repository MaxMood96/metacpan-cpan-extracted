NAME
    Media::Info - Return information on media file/URL

VERSION
    This document describes version 0.134 of Media::Info (from Perl
    distribution Media-Info), released on 2024-12-21.

SYNOPSIS
     use Media::Info qw(get_media_info);
     my $res = get_media_info(media => '/path/to/celine.mp4');

    Sample result:

     [
       200,
       "OK",
       {
         audio_bitrate => 128000,
         audio_format  => 85,
         audio_rate    => 44100,
         duration      => 2081.25,
         num_channels  => 2,
         num_chapters  => 0,
       },
       {
         "func.raw_output" => "ID_AUDIO_ID=0\n...",
       },
     ]

DESCRIPTION
    This module provides a common interface for Media::Info::* modules,
    which you can use to get information about a media file (like video,
    music, etc) using specific backends. Currently the available backends
    include Media::Info::Mplayer, Media::Info::Ffmpeg,
    Media::Info::Mediainfo.

FUNCTIONS
  get_media_info
    Usage:

     get_media_info(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Return information on media file/URL.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   backend => *str*

        Choose specific backend.

    *   media* => *str*

        Media file/URL.

        Note that not every backend can retrieve URL. At the time of this
        writing, only the Mplayer backend can.

        Many fields will depend on the backend used. Common fields returned
        include:

        *   "backend": the "Media::Info::*" backend module used, e.g.
            "Ffmpeg".

        *   "type_from_name": either "image", "audio", "video", or
            "unknown". This is determined from filename (extension).

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Media-Info>.

SOURCE
    Source repository is at <https://github.com/perlancar/perl-Media-Info>.

SEE ALSO
    Video::Info - "Media::Info" is first written because I couldn't install
    Video::Info. That module doesn't seem maintained (last release is in
    2003 at the time of this writing), plus I want a per-backend namespace
    organization instead of per-format one, and a simple functional
    interface instead of OO interface.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTOR
    Steven Haryanto <stevenharyanto@gmail.com>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2024 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Media-Info>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

