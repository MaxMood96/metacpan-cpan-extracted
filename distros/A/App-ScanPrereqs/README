NAME
    App::ScanPrereqs - Scan files/directories for prerequisites

VERSION
    This document describes version 0.006 of App::ScanPrereqs (from Perl
    distribution App-ScanPrereqs), released on 2024-12-21.

SYNOPSIS
     # Use via lint-prereqs CLI script

FUNCTIONS
  scan_prereqs
    Usage:

     scan_prereqs(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Scan files/directories for prerequisites.

    Examples:

    *   By default scan current directory:

         scan_prereqs();

    This is an alternative CLI to scan_prereqs, with the following features:

    *   merged output

    scan_prereqs by default reports prereqs per source file, which may or
    may not be what you want. This CLI outputs a single list of
    prerequisites found from all input.

    Aside from that, you can use "--json" to get a JSON output.

    *   option to pick backend

    Aside from Perl::PrereqScanner you can also use
    Perl::PrereqScanner::Lite and Perl::PrereqScanner::NotQuiteLite.

    *   filter only core or non-core prerequisites.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   files => *array[pathname]* (default: ["."])

        (No description)

    *   perlver => *str*

        Perl version to use when determining core/non-core.

        The default is the current perl version.

    *   scanner => *str* (default: "regular")

        Which scanner to use.

        "regular" means Perl::PrereqScanner which is PPI-based and is the
        slowest but has the most complete support for Perl syntax.

        "lite" means Perl::PrereqScanner::Lite uses an XS-based lexer and is
        the fastest but might miss some Perl syntax (i.e. miss some prereqs)
        or crash if given some weird code.

        "nqlite" means Perl::PrereqScanner::NotQuiteLite which is faster
        than "regular" but not as fast as "lite".

        Read respective scanner's documentation for more details about the
        pro's and con's for each scanner.

    *   show_core => *bool* (default: 1)

        Whether or not to show core prerequisites.

    *   show_noncore => *bool* (default: 1)

        Whether or not to show non-core prerequisites.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-ScanPrereqs>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-ScanPrereqs>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2024 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-ScanPrereqs>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

