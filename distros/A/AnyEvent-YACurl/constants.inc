#if LIBCURL_HAS(CURLALTSVC_H1)
    hv_stores(the_hv, "CURLALTSVC_H1", newSViv(CURLALTSVC_H1));
#endif
#if LIBCURL_HAS(CURLALTSVC_H2)
    hv_stores(the_hv, "CURLALTSVC_H2", newSViv(CURLALTSVC_H2));
#endif
#if LIBCURL_HAS(CURLALTSVC_H3)
    hv_stores(the_hv, "CURLALTSVC_H3", newSViv(CURLALTSVC_H3));
#endif
#if LIBCURL_HAS(CURLALTSVC_READONLYFILE)
    hv_stores(the_hv, "CURLALTSVC_READONLYFILE", newSViv(CURLALTSVC_READONLYFILE));
#endif
#if LIBCURL_HAS(CURLAUTH_ANY)
    hv_stores(the_hv, "CURLAUTH_ANY", newSViv(CURLAUTH_ANY));
#endif
#if LIBCURL_HAS(CURLAUTH_ANYSAFE)
    hv_stores(the_hv, "CURLAUTH_ANYSAFE", newSViv(CURLAUTH_ANYSAFE));
#endif
#if LIBCURL_HAS(CURLAUTH_AWS_SIGV4)
    hv_stores(the_hv, "CURLAUTH_AWS_SIGV4", newSViv(CURLAUTH_AWS_SIGV4));
#endif
#if LIBCURL_HAS(CURLAUTH_BASIC)
    hv_stores(the_hv, "CURLAUTH_BASIC", newSViv(CURLAUTH_BASIC));
#endif
#if LIBCURL_HAS(CURLAUTH_BEARER)
    hv_stores(the_hv, "CURLAUTH_BEARER", newSViv(CURLAUTH_BEARER));
#endif
#if LIBCURL_HAS(CURLAUTH_DIGEST)
    hv_stores(the_hv, "CURLAUTH_DIGEST", newSViv(CURLAUTH_DIGEST));
#endif
#if LIBCURL_HAS(CURLAUTH_DIGEST_IE)
    hv_stores(the_hv, "CURLAUTH_DIGEST_IE", newSViv(CURLAUTH_DIGEST_IE));
#endif
#if LIBCURL_HAS(CURLAUTH_GSSAPI)
    hv_stores(the_hv, "CURLAUTH_GSSAPI", newSViv(CURLAUTH_GSSAPI));
#endif
#if LIBCURL_HAS(CURLAUTH_GSSNEGOTIATE)
    hv_stores(the_hv, "CURLAUTH_GSSNEGOTIATE", newSViv(CURLAUTH_GSSNEGOTIATE));
#endif
#if LIBCURL_HAS(CURLAUTH_NEGOTIATE)
    hv_stores(the_hv, "CURLAUTH_NEGOTIATE", newSViv(CURLAUTH_NEGOTIATE));
#endif
#if LIBCURL_HAS(CURLAUTH_NONE)
    hv_stores(the_hv, "CURLAUTH_NONE", newSViv(CURLAUTH_NONE));
#endif
#if LIBCURL_HAS(CURLAUTH_NTLM)
    hv_stores(the_hv, "CURLAUTH_NTLM", newSViv(CURLAUTH_NTLM));
#endif
#if LIBCURL_HAS(CURLAUTH_NTLM_WB)
    hv_stores(the_hv, "CURLAUTH_NTLM_WB", newSViv(CURLAUTH_NTLM_WB));
#endif
#if LIBCURL_HAS(CURLAUTH_ONLY)
    hv_stores(the_hv, "CURLAUTH_ONLY", newSViv(CURLAUTH_ONLY));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_CALLBACK)
    hv_stores(the_hv, "CURLCLOSEPOLICY_CALLBACK", newSViv(CURLCLOSEPOLICY_CALLBACK));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_LEAST_RECENTLY_USED)
    hv_stores(the_hv, "CURLCLOSEPOLICY_LEAST_RECENTLY_USED", newSViv(CURLCLOSEPOLICY_LEAST_RECENTLY_USED));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_LEAST_TRAFFIC)
    hv_stores(the_hv, "CURLCLOSEPOLICY_LEAST_TRAFFIC", newSViv(CURLCLOSEPOLICY_LEAST_TRAFFIC));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_NONE)
    hv_stores(the_hv, "CURLCLOSEPOLICY_NONE", newSViv(CURLCLOSEPOLICY_NONE));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_OLDEST)
    hv_stores(the_hv, "CURLCLOSEPOLICY_OLDEST", newSViv(CURLCLOSEPOLICY_OLDEST));
#endif
#if LIBCURL_HAS(CURLCLOSEPOLICY_SLOWEST)
    hv_stores(the_hv, "CURLCLOSEPOLICY_SLOWEST", newSViv(CURLCLOSEPOLICY_SLOWEST));
#endif
#if LIBCURL_HAS(CURLE_ABORTED_BY_CALLBACK)
    hv_stores(the_hv, "CURLE_ABORTED_BY_CALLBACK", newSViv(CURLE_ABORTED_BY_CALLBACK));
#endif
#if LIBCURL_HAS(CURLE_AGAIN)
    hv_stores(the_hv, "CURLE_AGAIN", newSViv(CURLE_AGAIN));
#endif
#if LIBCURL_HAS(CURLE_ALREADY_COMPLETE)
    hv_stores(the_hv, "CURLE_ALREADY_COMPLETE", newSViv(CURLE_ALREADY_COMPLETE));
#endif
#if LIBCURL_HAS(CURLE_AUTH_ERROR)
    hv_stores(the_hv, "CURLE_AUTH_ERROR", newSViv(CURLE_AUTH_ERROR));
#endif
#if LIBCURL_HAS(CURLE_BAD_CALLING_ORDER)
    hv_stores(the_hv, "CURLE_BAD_CALLING_ORDER", newSViv(CURLE_BAD_CALLING_ORDER));
#endif
#if LIBCURL_HAS(CURLE_BAD_CONTENT_ENCODING)
    hv_stores(the_hv, "CURLE_BAD_CONTENT_ENCODING", newSViv(CURLE_BAD_CONTENT_ENCODING));
#endif
#if LIBCURL_HAS(CURLE_BAD_DOWNLOAD_RESUME)
    hv_stores(the_hv, "CURLE_BAD_DOWNLOAD_RESUME", newSViv(CURLE_BAD_DOWNLOAD_RESUME));
#endif
#if LIBCURL_HAS(CURLE_BAD_FUNCTION_ARGUMENT)
    hv_stores(the_hv, "CURLE_BAD_FUNCTION_ARGUMENT", newSViv(CURLE_BAD_FUNCTION_ARGUMENT));
#endif
#if LIBCURL_HAS(CURLE_BAD_PASSWORD_ENTERED)
    hv_stores(the_hv, "CURLE_BAD_PASSWORD_ENTERED", newSViv(CURLE_BAD_PASSWORD_ENTERED));
#endif
#if LIBCURL_HAS(CURLE_CHUNK_FAILED)
    hv_stores(the_hv, "CURLE_CHUNK_FAILED", newSViv(CURLE_CHUNK_FAILED));
#endif
#if LIBCURL_HAS(CURLE_CONV_FAILED)
    hv_stores(the_hv, "CURLE_CONV_FAILED", newSViv(CURLE_CONV_FAILED));
#endif
#if LIBCURL_HAS(CURLE_CONV_REQD)
    hv_stores(the_hv, "CURLE_CONV_REQD", newSViv(CURLE_CONV_REQD));
#endif
#if LIBCURL_HAS(CURLE_COULDNT_CONNECT)
    hv_stores(the_hv, "CURLE_COULDNT_CONNECT", newSViv(CURLE_COULDNT_CONNECT));
#endif
#if LIBCURL_HAS(CURLE_COULDNT_RESOLVE_HOST)
    hv_stores(the_hv, "CURLE_COULDNT_RESOLVE_HOST", newSViv(CURLE_COULDNT_RESOLVE_HOST));
#endif
#if LIBCURL_HAS(CURLE_COULDNT_RESOLVE_PROXY)
    hv_stores(the_hv, "CURLE_COULDNT_RESOLVE_PROXY", newSViv(CURLE_COULDNT_RESOLVE_PROXY));
#endif
#if LIBCURL_HAS(CURLE_ECH_REQUIRED)
    hv_stores(the_hv, "CURLE_ECH_REQUIRED", newSViv(CURLE_ECH_REQUIRED));
#endif
#if LIBCURL_HAS(CURLE_FAILED_INIT)
    hv_stores(the_hv, "CURLE_FAILED_INIT", newSViv(CURLE_FAILED_INIT));
#endif
#if LIBCURL_HAS(CURLE_FILESIZE_EXCEEDED)
    hv_stores(the_hv, "CURLE_FILESIZE_EXCEEDED", newSViv(CURLE_FILESIZE_EXCEEDED));
#endif
#if LIBCURL_HAS(CURLE_FILE_COULDNT_READ_FILE)
    hv_stores(the_hv, "CURLE_FILE_COULDNT_READ_FILE", newSViv(CURLE_FILE_COULDNT_READ_FILE));
#endif
#if LIBCURL_HAS(CURLE_FTP_ACCEPT_FAILED)
    hv_stores(the_hv, "CURLE_FTP_ACCEPT_FAILED", newSViv(CURLE_FTP_ACCEPT_FAILED));
#endif
#if LIBCURL_HAS(CURLE_FTP_ACCEPT_TIMEOUT)
    hv_stores(the_hv, "CURLE_FTP_ACCEPT_TIMEOUT", newSViv(CURLE_FTP_ACCEPT_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLE_FTP_ACCESS_DENIED)
    hv_stores(the_hv, "CURLE_FTP_ACCESS_DENIED", newSViv(CURLE_FTP_ACCESS_DENIED));
#endif
#if LIBCURL_HAS(CURLE_FTP_BAD_DOWNLOAD_RESUME)
    hv_stores(the_hv, "CURLE_FTP_BAD_DOWNLOAD_RESUME", newSViv(CURLE_FTP_BAD_DOWNLOAD_RESUME));
#endif
#if LIBCURL_HAS(CURLE_FTP_BAD_FILE_LIST)
    hv_stores(the_hv, "CURLE_FTP_BAD_FILE_LIST", newSViv(CURLE_FTP_BAD_FILE_LIST));
#endif
#if LIBCURL_HAS(CURLE_FTP_CANT_GET_HOST)
    hv_stores(the_hv, "CURLE_FTP_CANT_GET_HOST", newSViv(CURLE_FTP_CANT_GET_HOST));
#endif
#if LIBCURL_HAS(CURLE_FTP_CANT_RECONNECT)
    hv_stores(the_hv, "CURLE_FTP_CANT_RECONNECT", newSViv(CURLE_FTP_CANT_RECONNECT));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_GET_SIZE)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_GET_SIZE", newSViv(CURLE_FTP_COULDNT_GET_SIZE));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_RETR_FILE)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_RETR_FILE", newSViv(CURLE_FTP_COULDNT_RETR_FILE));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_SET_ASCII)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_SET_ASCII", newSViv(CURLE_FTP_COULDNT_SET_ASCII));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_SET_BINARY)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_SET_BINARY", newSViv(CURLE_FTP_COULDNT_SET_BINARY));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_SET_TYPE)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_SET_TYPE", newSViv(CURLE_FTP_COULDNT_SET_TYPE));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_STOR_FILE)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_STOR_FILE", newSViv(CURLE_FTP_COULDNT_STOR_FILE));
#endif
#if LIBCURL_HAS(CURLE_FTP_COULDNT_USE_REST)
    hv_stores(the_hv, "CURLE_FTP_COULDNT_USE_REST", newSViv(CURLE_FTP_COULDNT_USE_REST));
#endif
#if LIBCURL_HAS(CURLE_FTP_PARTIAL_FILE)
    hv_stores(the_hv, "CURLE_FTP_PARTIAL_FILE", newSViv(CURLE_FTP_PARTIAL_FILE));
#endif
#if LIBCURL_HAS(CURLE_FTP_PORT_FAILED)
    hv_stores(the_hv, "CURLE_FTP_PORT_FAILED", newSViv(CURLE_FTP_PORT_FAILED));
#endif
#if LIBCURL_HAS(CURLE_FTP_PRET_FAILED)
    hv_stores(the_hv, "CURLE_FTP_PRET_FAILED", newSViv(CURLE_FTP_PRET_FAILED));
#endif
#if LIBCURL_HAS(CURLE_FTP_QUOTE_ERROR)
    hv_stores(the_hv, "CURLE_FTP_QUOTE_ERROR", newSViv(CURLE_FTP_QUOTE_ERROR));
#endif
#if LIBCURL_HAS(CURLE_FTP_SSL_FAILED)
    hv_stores(the_hv, "CURLE_FTP_SSL_FAILED", newSViv(CURLE_FTP_SSL_FAILED));
#endif
#if LIBCURL_HAS(CURLE_FTP_USER_PASSWORD_INCORRECT)
    hv_stores(the_hv, "CURLE_FTP_USER_PASSWORD_INCORRECT", newSViv(CURLE_FTP_USER_PASSWORD_INCORRECT));
#endif
#if LIBCURL_HAS(CURLE_FTP_WEIRD_227_FORMAT)
    hv_stores(the_hv, "CURLE_FTP_WEIRD_227_FORMAT", newSViv(CURLE_FTP_WEIRD_227_FORMAT));
#endif
#if LIBCURL_HAS(CURLE_FTP_WEIRD_PASS_REPLY)
    hv_stores(the_hv, "CURLE_FTP_WEIRD_PASS_REPLY", newSViv(CURLE_FTP_WEIRD_PASS_REPLY));
#endif
#if LIBCURL_HAS(CURLE_FTP_WEIRD_PASV_REPLY)
    hv_stores(the_hv, "CURLE_FTP_WEIRD_PASV_REPLY", newSViv(CURLE_FTP_WEIRD_PASV_REPLY));
#endif
#if LIBCURL_HAS(CURLE_FTP_WEIRD_SERVER_REPLY)
    hv_stores(the_hv, "CURLE_FTP_WEIRD_SERVER_REPLY", newSViv(CURLE_FTP_WEIRD_SERVER_REPLY));
#endif
#if LIBCURL_HAS(CURLE_FTP_WEIRD_USER_REPLY)
    hv_stores(the_hv, "CURLE_FTP_WEIRD_USER_REPLY", newSViv(CURLE_FTP_WEIRD_USER_REPLY));
#endif
#if LIBCURL_HAS(CURLE_FTP_WRITE_ERROR)
    hv_stores(the_hv, "CURLE_FTP_WRITE_ERROR", newSViv(CURLE_FTP_WRITE_ERROR));
#endif
#if LIBCURL_HAS(CURLE_FUNCTION_NOT_FOUND)
    hv_stores(the_hv, "CURLE_FUNCTION_NOT_FOUND", newSViv(CURLE_FUNCTION_NOT_FOUND));
#endif
#if LIBCURL_HAS(CURLE_GOT_NOTHING)
    hv_stores(the_hv, "CURLE_GOT_NOTHING", newSViv(CURLE_GOT_NOTHING));
#endif
#if LIBCURL_HAS(CURLE_HTTP2)
    hv_stores(the_hv, "CURLE_HTTP2", newSViv(CURLE_HTTP2));
#endif
#if LIBCURL_HAS(CURLE_HTTP2_STREAM)
    hv_stores(the_hv, "CURLE_HTTP2_STREAM", newSViv(CURLE_HTTP2_STREAM));
#endif
#if LIBCURL_HAS(CURLE_HTTP3)
    hv_stores(the_hv, "CURLE_HTTP3", newSViv(CURLE_HTTP3));
#endif
#if LIBCURL_HAS(CURLE_HTTP_NOT_FOUND)
    hv_stores(the_hv, "CURLE_HTTP_NOT_FOUND", newSViv(CURLE_HTTP_NOT_FOUND));
#endif
#if LIBCURL_HAS(CURLE_HTTP_PORT_FAILED)
    hv_stores(the_hv, "CURLE_HTTP_PORT_FAILED", newSViv(CURLE_HTTP_PORT_FAILED));
#endif
#if LIBCURL_HAS(CURLE_HTTP_POST_ERROR)
    hv_stores(the_hv, "CURLE_HTTP_POST_ERROR", newSViv(CURLE_HTTP_POST_ERROR));
#endif
#if LIBCURL_HAS(CURLE_HTTP_RANGE_ERROR)
    hv_stores(the_hv, "CURLE_HTTP_RANGE_ERROR", newSViv(CURLE_HTTP_RANGE_ERROR));
#endif
#if LIBCURL_HAS(CURLE_HTTP_RETURNED_ERROR)
    hv_stores(the_hv, "CURLE_HTTP_RETURNED_ERROR", newSViv(CURLE_HTTP_RETURNED_ERROR));
#endif
#if LIBCURL_HAS(CURLE_INTERFACE_FAILED)
    hv_stores(the_hv, "CURLE_INTERFACE_FAILED", newSViv(CURLE_INTERFACE_FAILED));
#endif
#if LIBCURL_HAS(CURLE_LDAP_CANNOT_BIND)
    hv_stores(the_hv, "CURLE_LDAP_CANNOT_BIND", newSViv(CURLE_LDAP_CANNOT_BIND));
#endif
#if LIBCURL_HAS(CURLE_LDAP_INVALID_URL)
    hv_stores(the_hv, "CURLE_LDAP_INVALID_URL", newSViv(CURLE_LDAP_INVALID_URL));
#endif
#if LIBCURL_HAS(CURLE_LDAP_SEARCH_FAILED)
    hv_stores(the_hv, "CURLE_LDAP_SEARCH_FAILED", newSViv(CURLE_LDAP_SEARCH_FAILED));
#endif
#if LIBCURL_HAS(CURLE_LIBRARY_NOT_FOUND)
    hv_stores(the_hv, "CURLE_LIBRARY_NOT_FOUND", newSViv(CURLE_LIBRARY_NOT_FOUND));
#endif
#if LIBCURL_HAS(CURLE_LOGIN_DENIED)
    hv_stores(the_hv, "CURLE_LOGIN_DENIED", newSViv(CURLE_LOGIN_DENIED));
#endif
#if LIBCURL_HAS(CURLE_MALFORMAT_USER)
    hv_stores(the_hv, "CURLE_MALFORMAT_USER", newSViv(CURLE_MALFORMAT_USER));
#endif
#if LIBCURL_HAS(CURLE_NOT_BUILT_IN)
    hv_stores(the_hv, "CURLE_NOT_BUILT_IN", newSViv(CURLE_NOT_BUILT_IN));
#endif
#if LIBCURL_HAS(CURLE_NO_CONNECTION_AVAILABLE)
    hv_stores(the_hv, "CURLE_NO_CONNECTION_AVAILABLE", newSViv(CURLE_NO_CONNECTION_AVAILABLE));
#endif
#if LIBCURL_HAS(CURLE_OK)
    hv_stores(the_hv, "CURLE_OK", newSViv(CURLE_OK));
#endif
#if LIBCURL_HAS(CURLE_OPERATION_TIMEDOUT)
    hv_stores(the_hv, "CURLE_OPERATION_TIMEDOUT", newSViv(CURLE_OPERATION_TIMEDOUT));
#endif
#if LIBCURL_HAS(CURLE_OPERATION_TIMEOUTED)
    hv_stores(the_hv, "CURLE_OPERATION_TIMEOUTED", newSViv(CURLE_OPERATION_TIMEOUTED));
#endif
#if LIBCURL_HAS(CURLE_OUT_OF_MEMORY)
    hv_stores(the_hv, "CURLE_OUT_OF_MEMORY", newSViv(CURLE_OUT_OF_MEMORY));
#endif
#if LIBCURL_HAS(CURLE_PARTIAL_FILE)
    hv_stores(the_hv, "CURLE_PARTIAL_FILE", newSViv(CURLE_PARTIAL_FILE));
#endif
#if LIBCURL_HAS(CURLE_PEER_FAILED_VERIFICATION)
    hv_stores(the_hv, "CURLE_PEER_FAILED_VERIFICATION", newSViv(CURLE_PEER_FAILED_VERIFICATION));
#endif
#if LIBCURL_HAS(CURLE_PROXY)
    hv_stores(the_hv, "CURLE_PROXY", newSViv(CURLE_PROXY));
#endif
#if LIBCURL_HAS(CURLE_QUIC_CONNECT_ERROR)
    hv_stores(the_hv, "CURLE_QUIC_CONNECT_ERROR", newSViv(CURLE_QUIC_CONNECT_ERROR));
#endif
#if LIBCURL_HAS(CURLE_QUOTE_ERROR)
    hv_stores(the_hv, "CURLE_QUOTE_ERROR", newSViv(CURLE_QUOTE_ERROR));
#endif
#if LIBCURL_HAS(CURLE_RANGE_ERROR)
    hv_stores(the_hv, "CURLE_RANGE_ERROR", newSViv(CURLE_RANGE_ERROR));
#endif
#if LIBCURL_HAS(CURLE_READ_ERROR)
    hv_stores(the_hv, "CURLE_READ_ERROR", newSViv(CURLE_READ_ERROR));
#endif
#if LIBCURL_HAS(CURLE_RECURSIVE_API_CALL)
    hv_stores(the_hv, "CURLE_RECURSIVE_API_CALL", newSViv(CURLE_RECURSIVE_API_CALL));
#endif
#if LIBCURL_HAS(CURLE_RECV_ERROR)
    hv_stores(the_hv, "CURLE_RECV_ERROR", newSViv(CURLE_RECV_ERROR));
#endif
#if LIBCURL_HAS(CURLE_REMOTE_ACCESS_DENIED)
    hv_stores(the_hv, "CURLE_REMOTE_ACCESS_DENIED", newSViv(CURLE_REMOTE_ACCESS_DENIED));
#endif
#if LIBCURL_HAS(CURLE_REMOTE_DISK_FULL)
    hv_stores(the_hv, "CURLE_REMOTE_DISK_FULL", newSViv(CURLE_REMOTE_DISK_FULL));
#endif
#if LIBCURL_HAS(CURLE_REMOTE_FILE_EXISTS)
    hv_stores(the_hv, "CURLE_REMOTE_FILE_EXISTS", newSViv(CURLE_REMOTE_FILE_EXISTS));
#endif
#if LIBCURL_HAS(CURLE_REMOTE_FILE_NOT_FOUND)
    hv_stores(the_hv, "CURLE_REMOTE_FILE_NOT_FOUND", newSViv(CURLE_REMOTE_FILE_NOT_FOUND));
#endif
#if LIBCURL_HAS(CURLE_RTSP_CSEQ_ERROR)
    hv_stores(the_hv, "CURLE_RTSP_CSEQ_ERROR", newSViv(CURLE_RTSP_CSEQ_ERROR));
#endif
#if LIBCURL_HAS(CURLE_RTSP_SESSION_ERROR)
    hv_stores(the_hv, "CURLE_RTSP_SESSION_ERROR", newSViv(CURLE_RTSP_SESSION_ERROR));
#endif
#if LIBCURL_HAS(CURLE_SEND_ERROR)
    hv_stores(the_hv, "CURLE_SEND_ERROR", newSViv(CURLE_SEND_ERROR));
#endif
#if LIBCURL_HAS(CURLE_SEND_FAIL_REWIND)
    hv_stores(the_hv, "CURLE_SEND_FAIL_REWIND", newSViv(CURLE_SEND_FAIL_REWIND));
#endif
#if LIBCURL_HAS(CURLE_SETOPT_OPTION_SYNTAX)
    hv_stores(the_hv, "CURLE_SETOPT_OPTION_SYNTAX", newSViv(CURLE_SETOPT_OPTION_SYNTAX));
#endif
#if LIBCURL_HAS(CURLE_SHARE_IN_USE)
    hv_stores(the_hv, "CURLE_SHARE_IN_USE", newSViv(CURLE_SHARE_IN_USE));
#endif
#if LIBCURL_HAS(CURLE_SSH)
    hv_stores(the_hv, "CURLE_SSH", newSViv(CURLE_SSH));
#endif
#if LIBCURL_HAS(CURLE_SSL_CACERT)
    hv_stores(the_hv, "CURLE_SSL_CACERT", newSViv(CURLE_SSL_CACERT));
#endif
#if LIBCURL_HAS(CURLE_SSL_CACERT_BADFILE)
    hv_stores(the_hv, "CURLE_SSL_CACERT_BADFILE", newSViv(CURLE_SSL_CACERT_BADFILE));
#endif
#if LIBCURL_HAS(CURLE_SSL_CERTPROBLEM)
    hv_stores(the_hv, "CURLE_SSL_CERTPROBLEM", newSViv(CURLE_SSL_CERTPROBLEM));
#endif
#if LIBCURL_HAS(CURLE_SSL_CIPHER)
    hv_stores(the_hv, "CURLE_SSL_CIPHER", newSViv(CURLE_SSL_CIPHER));
#endif
#if LIBCURL_HAS(CURLE_SSL_CLIENTCERT)
    hv_stores(the_hv, "CURLE_SSL_CLIENTCERT", newSViv(CURLE_SSL_CLIENTCERT));
#endif
#if LIBCURL_HAS(CURLE_SSL_CONNECT_ERROR)
    hv_stores(the_hv, "CURLE_SSL_CONNECT_ERROR", newSViv(CURLE_SSL_CONNECT_ERROR));
#endif
#if LIBCURL_HAS(CURLE_SSL_CRL_BADFILE)
    hv_stores(the_hv, "CURLE_SSL_CRL_BADFILE", newSViv(CURLE_SSL_CRL_BADFILE));
#endif
#if LIBCURL_HAS(CURLE_SSL_ENGINE_INITFAILED)
    hv_stores(the_hv, "CURLE_SSL_ENGINE_INITFAILED", newSViv(CURLE_SSL_ENGINE_INITFAILED));
#endif
#if LIBCURL_HAS(CURLE_SSL_ENGINE_NOTFOUND)
    hv_stores(the_hv, "CURLE_SSL_ENGINE_NOTFOUND", newSViv(CURLE_SSL_ENGINE_NOTFOUND));
#endif
#if LIBCURL_HAS(CURLE_SSL_ENGINE_SETFAILED)
    hv_stores(the_hv, "CURLE_SSL_ENGINE_SETFAILED", newSViv(CURLE_SSL_ENGINE_SETFAILED));
#endif
#if LIBCURL_HAS(CURLE_SSL_INVALIDCERTSTATUS)
    hv_stores(the_hv, "CURLE_SSL_INVALIDCERTSTATUS", newSViv(CURLE_SSL_INVALIDCERTSTATUS));
#endif
#if LIBCURL_HAS(CURLE_SSL_ISSUER_ERROR)
    hv_stores(the_hv, "CURLE_SSL_ISSUER_ERROR", newSViv(CURLE_SSL_ISSUER_ERROR));
#endif
#if LIBCURL_HAS(CURLE_SSL_PEER_CERTIFICATE)
    hv_stores(the_hv, "CURLE_SSL_PEER_CERTIFICATE", newSViv(CURLE_SSL_PEER_CERTIFICATE));
#endif
#if LIBCURL_HAS(CURLE_SSL_PINNEDPUBKEYNOTMATCH)
    hv_stores(the_hv, "CURLE_SSL_PINNEDPUBKEYNOTMATCH", newSViv(CURLE_SSL_PINNEDPUBKEYNOTMATCH));
#endif
#if LIBCURL_HAS(CURLE_SSL_SHUTDOWN_FAILED)
    hv_stores(the_hv, "CURLE_SSL_SHUTDOWN_FAILED", newSViv(CURLE_SSL_SHUTDOWN_FAILED));
#endif
#if LIBCURL_HAS(CURLE_TELNET_OPTION_SYNTAX)
    hv_stores(the_hv, "CURLE_TELNET_OPTION_SYNTAX", newSViv(CURLE_TELNET_OPTION_SYNTAX));
#endif
#if LIBCURL_HAS(CURLE_TFTP_DISKFULL)
    hv_stores(the_hv, "CURLE_TFTP_DISKFULL", newSViv(CURLE_TFTP_DISKFULL));
#endif
#if LIBCURL_HAS(CURLE_TFTP_EXISTS)
    hv_stores(the_hv, "CURLE_TFTP_EXISTS", newSViv(CURLE_TFTP_EXISTS));
#endif
#if LIBCURL_HAS(CURLE_TFTP_ILLEGAL)
    hv_stores(the_hv, "CURLE_TFTP_ILLEGAL", newSViv(CURLE_TFTP_ILLEGAL));
#endif
#if LIBCURL_HAS(CURLE_TFTP_NOSUCHUSER)
    hv_stores(the_hv, "CURLE_TFTP_NOSUCHUSER", newSViv(CURLE_TFTP_NOSUCHUSER));
#endif
#if LIBCURL_HAS(CURLE_TFTP_NOTFOUND)
    hv_stores(the_hv, "CURLE_TFTP_NOTFOUND", newSViv(CURLE_TFTP_NOTFOUND));
#endif
#if LIBCURL_HAS(CURLE_TFTP_PERM)
    hv_stores(the_hv, "CURLE_TFTP_PERM", newSViv(CURLE_TFTP_PERM));
#endif
#if LIBCURL_HAS(CURLE_TFTP_UNKNOWNID)
    hv_stores(the_hv, "CURLE_TFTP_UNKNOWNID", newSViv(CURLE_TFTP_UNKNOWNID));
#endif
#if LIBCURL_HAS(CURLE_TOO_LARGE)
    hv_stores(the_hv, "CURLE_TOO_LARGE", newSViv(CURLE_TOO_LARGE));
#endif
#if LIBCURL_HAS(CURLE_TOO_MANY_REDIRECTS)
    hv_stores(the_hv, "CURLE_TOO_MANY_REDIRECTS", newSViv(CURLE_TOO_MANY_REDIRECTS));
#endif
#if LIBCURL_HAS(CURLE_UNKNOWN_OPTION)
    hv_stores(the_hv, "CURLE_UNKNOWN_OPTION", newSViv(CURLE_UNKNOWN_OPTION));
#endif
#if LIBCURL_HAS(CURLE_UNKNOWN_TELNET_OPTION)
    hv_stores(the_hv, "CURLE_UNKNOWN_TELNET_OPTION", newSViv(CURLE_UNKNOWN_TELNET_OPTION));
#endif
#if LIBCURL_HAS(CURLE_UNRECOVERABLE_POLL)
    hv_stores(the_hv, "CURLE_UNRECOVERABLE_POLL", newSViv(CURLE_UNRECOVERABLE_POLL));
#endif
#if LIBCURL_HAS(CURLE_UNSUPPORTED_PROTOCOL)
    hv_stores(the_hv, "CURLE_UNSUPPORTED_PROTOCOL", newSViv(CURLE_UNSUPPORTED_PROTOCOL));
#endif
#if LIBCURL_HAS(CURLE_UPLOAD_FAILED)
    hv_stores(the_hv, "CURLE_UPLOAD_FAILED", newSViv(CURLE_UPLOAD_FAILED));
#endif
#if LIBCURL_HAS(CURLE_URL_MALFORMAT)
    hv_stores(the_hv, "CURLE_URL_MALFORMAT", newSViv(CURLE_URL_MALFORMAT));
#endif
#if LIBCURL_HAS(CURLE_URL_MALFORMAT_USER)
    hv_stores(the_hv, "CURLE_URL_MALFORMAT_USER", newSViv(CURLE_URL_MALFORMAT_USER));
#endif
#if LIBCURL_HAS(CURLE_USE_SSL_FAILED)
    hv_stores(the_hv, "CURLE_USE_SSL_FAILED", newSViv(CURLE_USE_SSL_FAILED));
#endif
#if LIBCURL_HAS(CURLE_WEIRD_SERVER_REPLY)
    hv_stores(the_hv, "CURLE_WEIRD_SERVER_REPLY", newSViv(CURLE_WEIRD_SERVER_REPLY));
#endif
#if LIBCURL_HAS(CURLE_WRITE_ERROR)
    hv_stores(the_hv, "CURLE_WRITE_ERROR", newSViv(CURLE_WRITE_ERROR));
#endif
#if LIBCURL_HAS(CURLFILETYPE_DEVICE_BLOCK)
    hv_stores(the_hv, "CURLFILETYPE_DEVICE_BLOCK", newSViv(CURLFILETYPE_DEVICE_BLOCK));
#endif
#if LIBCURL_HAS(CURLFILETYPE_DEVICE_CHAR)
    hv_stores(the_hv, "CURLFILETYPE_DEVICE_CHAR", newSViv(CURLFILETYPE_DEVICE_CHAR));
#endif
#if LIBCURL_HAS(CURLFILETYPE_DIRECTORY)
    hv_stores(the_hv, "CURLFILETYPE_DIRECTORY", newSViv(CURLFILETYPE_DIRECTORY));
#endif
#if LIBCURL_HAS(CURLFILETYPE_DOOR)
    hv_stores(the_hv, "CURLFILETYPE_DOOR", newSViv(CURLFILETYPE_DOOR));
#endif
#if LIBCURL_HAS(CURLFILETYPE_FILE)
    hv_stores(the_hv, "CURLFILETYPE_FILE", newSViv(CURLFILETYPE_FILE));
#endif
#if LIBCURL_HAS(CURLFILETYPE_NAMEDPIPE)
    hv_stores(the_hv, "CURLFILETYPE_NAMEDPIPE", newSViv(CURLFILETYPE_NAMEDPIPE));
#endif
#if LIBCURL_HAS(CURLFILETYPE_SOCKET)
    hv_stores(the_hv, "CURLFILETYPE_SOCKET", newSViv(CURLFILETYPE_SOCKET));
#endif
#if LIBCURL_HAS(CURLFILETYPE_SYMLINK)
    hv_stores(the_hv, "CURLFILETYPE_SYMLINK", newSViv(CURLFILETYPE_SYMLINK));
#endif
#if LIBCURL_HAS(CURLFILETYPE_UNKNOWN)
    hv_stores(the_hv, "CURLFILETYPE_UNKNOWN", newSViv(CURLFILETYPE_UNKNOWN));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_FILENAME)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_FILENAME", newSViv(CURLFINFOFLAG_KNOWN_FILENAME));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_FILETYPE)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_FILETYPE", newSViv(CURLFINFOFLAG_KNOWN_FILETYPE));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_GID)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_GID", newSViv(CURLFINFOFLAG_KNOWN_GID));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_HLINKCOUNT)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_HLINKCOUNT", newSViv(CURLFINFOFLAG_KNOWN_HLINKCOUNT));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_PERM)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_PERM", newSViv(CURLFINFOFLAG_KNOWN_PERM));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_SIZE)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_SIZE", newSViv(CURLFINFOFLAG_KNOWN_SIZE));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_TIME)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_TIME", newSViv(CURLFINFOFLAG_KNOWN_TIME));
#endif
#if LIBCURL_HAS(CURLFINFOFLAG_KNOWN_UID)
    hv_stores(the_hv, "CURLFINFOFLAG_KNOWN_UID", newSViv(CURLFINFOFLAG_KNOWN_UID));
#endif
#if LIBCURL_HAS(CURLFOLLOW_ALL)
    hv_stores(the_hv, "CURLFOLLOW_ALL", newSViv(CURLFOLLOW_ALL));
#endif
#if LIBCURL_HAS(CURLFOLLOW_FIRSTONLY)
    hv_stores(the_hv, "CURLFOLLOW_FIRSTONLY", newSViv(CURLFOLLOW_FIRSTONLY));
#endif
#if LIBCURL_HAS(CURLFOLLOW_OBEYCODE)
    hv_stores(the_hv, "CURLFOLLOW_OBEYCODE", newSViv(CURLFOLLOW_OBEYCODE));
#endif
#if LIBCURL_HAS(CURLFORM_ARRAY)
    hv_stores(the_hv, "CURLFORM_ARRAY", newSViv(CURLFORM_ARRAY));
#endif
#if LIBCURL_HAS(CURLFORM_ARRAY_END)
    hv_stores(the_hv, "CURLFORM_ARRAY_END", newSViv(CURLFORM_ARRAY_END));
#endif
#if LIBCURL_HAS(CURLFORM_ARRAY_START)
    hv_stores(the_hv, "CURLFORM_ARRAY_START", newSViv(CURLFORM_ARRAY_START));
#endif
#if LIBCURL_HAS(CURLFORM_BUFFER)
    hv_stores(the_hv, "CURLFORM_BUFFER", newSViv(CURLFORM_BUFFER));
#endif
#if LIBCURL_HAS(CURLFORM_BUFFERLENGTH)
    hv_stores(the_hv, "CURLFORM_BUFFERLENGTH", newSViv(CURLFORM_BUFFERLENGTH));
#endif
#if LIBCURL_HAS(CURLFORM_BUFFERPTR)
    hv_stores(the_hv, "CURLFORM_BUFFERPTR", newSViv(CURLFORM_BUFFERPTR));
#endif
#if LIBCURL_HAS(CURLFORM_CONTENTHEADER)
    hv_stores(the_hv, "CURLFORM_CONTENTHEADER", newSViv(CURLFORM_CONTENTHEADER));
#endif
#if LIBCURL_HAS(CURLFORM_CONTENTLEN)
    hv_stores(the_hv, "CURLFORM_CONTENTLEN", newSViv(CURLFORM_CONTENTLEN));
#endif
#if LIBCURL_HAS(CURLFORM_CONTENTSLENGTH)
    hv_stores(the_hv, "CURLFORM_CONTENTSLENGTH", newSViv(CURLFORM_CONTENTSLENGTH));
#endif
#if LIBCURL_HAS(CURLFORM_CONTENTTYPE)
    hv_stores(the_hv, "CURLFORM_CONTENTTYPE", newSViv(CURLFORM_CONTENTTYPE));
#endif
#if LIBCURL_HAS(CURLFORM_COPYCONTENTS)
    hv_stores(the_hv, "CURLFORM_COPYCONTENTS", newSViv(CURLFORM_COPYCONTENTS));
#endif
#if LIBCURL_HAS(CURLFORM_COPYNAME)
    hv_stores(the_hv, "CURLFORM_COPYNAME", newSViv(CURLFORM_COPYNAME));
#endif
#if LIBCURL_HAS(CURLFORM_END)
    hv_stores(the_hv, "CURLFORM_END", newSViv(CURLFORM_END));
#endif
#if LIBCURL_HAS(CURLFORM_FILE)
    hv_stores(the_hv, "CURLFORM_FILE", newSViv(CURLFORM_FILE));
#endif
#if LIBCURL_HAS(CURLFORM_FILECONTENT)
    hv_stores(the_hv, "CURLFORM_FILECONTENT", newSViv(CURLFORM_FILECONTENT));
#endif
#if LIBCURL_HAS(CURLFORM_FILENAME)
    hv_stores(the_hv, "CURLFORM_FILENAME", newSViv(CURLFORM_FILENAME));
#endif
#if LIBCURL_HAS(CURLFORM_NAMELENGTH)
    hv_stores(the_hv, "CURLFORM_NAMELENGTH", newSViv(CURLFORM_NAMELENGTH));
#endif
#if LIBCURL_HAS(CURLFORM_NOTHING)
    hv_stores(the_hv, "CURLFORM_NOTHING", newSViv(CURLFORM_NOTHING));
#endif
#if LIBCURL_HAS(CURLFORM_PTRCONTENTS)
    hv_stores(the_hv, "CURLFORM_PTRCONTENTS", newSViv(CURLFORM_PTRCONTENTS));
#endif
#if LIBCURL_HAS(CURLFORM_PTRNAME)
    hv_stores(the_hv, "CURLFORM_PTRNAME", newSViv(CURLFORM_PTRNAME));
#endif
#if LIBCURL_HAS(CURLFORM_STREAM)
    hv_stores(the_hv, "CURLFORM_STREAM", newSViv(CURLFORM_STREAM));
#endif
#if LIBCURL_HAS(CURLFTPAUTH_DEFAULT)
    hv_stores(the_hv, "CURLFTPAUTH_DEFAULT", newSViv(CURLFTPAUTH_DEFAULT));
#endif
#if LIBCURL_HAS(CURLFTPAUTH_SSL)
    hv_stores(the_hv, "CURLFTPAUTH_SSL", newSViv(CURLFTPAUTH_SSL));
#endif
#if LIBCURL_HAS(CURLFTPAUTH_TLS)
    hv_stores(the_hv, "CURLFTPAUTH_TLS", newSViv(CURLFTPAUTH_TLS));
#endif
#if LIBCURL_HAS(CURLFTPMETHOD_DEFAULT)
    hv_stores(the_hv, "CURLFTPMETHOD_DEFAULT", newSViv(CURLFTPMETHOD_DEFAULT));
#endif
#if LIBCURL_HAS(CURLFTPMETHOD_MULTICWD)
    hv_stores(the_hv, "CURLFTPMETHOD_MULTICWD", newSViv(CURLFTPMETHOD_MULTICWD));
#endif
#if LIBCURL_HAS(CURLFTPMETHOD_NOCWD)
    hv_stores(the_hv, "CURLFTPMETHOD_NOCWD", newSViv(CURLFTPMETHOD_NOCWD));
#endif
#if LIBCURL_HAS(CURLFTPMETHOD_SINGLECWD)
    hv_stores(the_hv, "CURLFTPMETHOD_SINGLECWD", newSViv(CURLFTPMETHOD_SINGLECWD));
#endif
#if LIBCURL_HAS(CURLFTPSSL_ALL)
    hv_stores(the_hv, "CURLFTPSSL_ALL", newSViv(CURLFTPSSL_ALL));
#endif
#if LIBCURL_HAS(CURLFTPSSL_CCC_ACTIVE)
    hv_stores(the_hv, "CURLFTPSSL_CCC_ACTIVE", newSViv(CURLFTPSSL_CCC_ACTIVE));
#endif
#if LIBCURL_HAS(CURLFTPSSL_CCC_NONE)
    hv_stores(the_hv, "CURLFTPSSL_CCC_NONE", newSViv(CURLFTPSSL_CCC_NONE));
#endif
#if LIBCURL_HAS(CURLFTPSSL_CCC_PASSIVE)
    hv_stores(the_hv, "CURLFTPSSL_CCC_PASSIVE", newSViv(CURLFTPSSL_CCC_PASSIVE));
#endif
#if LIBCURL_HAS(CURLFTPSSL_CONTROL)
    hv_stores(the_hv, "CURLFTPSSL_CONTROL", newSViv(CURLFTPSSL_CONTROL));
#endif
#if LIBCURL_HAS(CURLFTPSSL_NONE)
    hv_stores(the_hv, "CURLFTPSSL_NONE", newSViv(CURLFTPSSL_NONE));
#endif
#if LIBCURL_HAS(CURLFTPSSL_TRY)
    hv_stores(the_hv, "CURLFTPSSL_TRY", newSViv(CURLFTPSSL_TRY));
#endif
#if LIBCURL_HAS(CURLFTP_CREATE_DIR)
    hv_stores(the_hv, "CURLFTP_CREATE_DIR", newSViv(CURLFTP_CREATE_DIR));
#endif
#if LIBCURL_HAS(CURLFTP_CREATE_DIR_NONE)
    hv_stores(the_hv, "CURLFTP_CREATE_DIR_NONE", newSViv(CURLFTP_CREATE_DIR_NONE));
#endif
#if LIBCURL_HAS(CURLFTP_CREATE_DIR_RETRY)
    hv_stores(the_hv, "CURLFTP_CREATE_DIR_RETRY", newSViv(CURLFTP_CREATE_DIR_RETRY));
#endif
#if LIBCURL_HAS(CURLGSSAPI_DELEGATION_FLAG)
    hv_stores(the_hv, "CURLGSSAPI_DELEGATION_FLAG", newSViv(CURLGSSAPI_DELEGATION_FLAG));
#endif
#if LIBCURL_HAS(CURLGSSAPI_DELEGATION_NONE)
    hv_stores(the_hv, "CURLGSSAPI_DELEGATION_NONE", newSViv(CURLGSSAPI_DELEGATION_NONE));
#endif
#if LIBCURL_HAS(CURLGSSAPI_DELEGATION_POLICY_FLAG)
    hv_stores(the_hv, "CURLGSSAPI_DELEGATION_POLICY_FLAG", newSViv(CURLGSSAPI_DELEGATION_POLICY_FLAG));
#endif
#if LIBCURL_HAS(CURLHEADER_SEPARATE)
    hv_stores(the_hv, "CURLHEADER_SEPARATE", newSViv(CURLHEADER_SEPARATE));
#endif
#if LIBCURL_HAS(CURLHEADER_UNIFIED)
    hv_stores(the_hv, "CURLHEADER_UNIFIED", newSViv(CURLHEADER_UNIFIED));
#endif
#if LIBCURL_HAS(CURLHE_BADINDEX)
    hv_stores(the_hv, "CURLHE_BADINDEX", newSViv(CURLHE_BADINDEX));
#endif
#if LIBCURL_HAS(CURLHE_BAD_ARGUMENT)
    hv_stores(the_hv, "CURLHE_BAD_ARGUMENT", newSViv(CURLHE_BAD_ARGUMENT));
#endif
#if LIBCURL_HAS(CURLHE_MISSING)
    hv_stores(the_hv, "CURLHE_MISSING", newSViv(CURLHE_MISSING));
#endif
#if LIBCURL_HAS(CURLHE_NOHEADERS)
    hv_stores(the_hv, "CURLHE_NOHEADERS", newSViv(CURLHE_NOHEADERS));
#endif
#if LIBCURL_HAS(CURLHE_NOREQUEST)
    hv_stores(the_hv, "CURLHE_NOREQUEST", newSViv(CURLHE_NOREQUEST));
#endif
#if LIBCURL_HAS(CURLHE_NOT_BUILT_IN)
    hv_stores(the_hv, "CURLHE_NOT_BUILT_IN", newSViv(CURLHE_NOT_BUILT_IN));
#endif
#if LIBCURL_HAS(CURLHE_OK)
    hv_stores(the_hv, "CURLHE_OK", newSViv(CURLHE_OK));
#endif
#if LIBCURL_HAS(CURLHE_OUT_OF_MEMORY)
    hv_stores(the_hv, "CURLHE_OUT_OF_MEMORY", newSViv(CURLHE_OUT_OF_MEMORY));
#endif
#if LIBCURL_HAS(CURLHSTS_ENABLE)
    hv_stores(the_hv, "CURLHSTS_ENABLE", newSViv(CURLHSTS_ENABLE));
#endif
#if LIBCURL_HAS(CURLHSTS_READONLYFILE)
    hv_stores(the_hv, "CURLHSTS_READONLYFILE", newSViv(CURLHSTS_READONLYFILE));
#endif
#if LIBCURL_HAS(CURLH_1XX)
    hv_stores(the_hv, "CURLH_1XX", newSViv(CURLH_1XX));
#endif
#if LIBCURL_HAS(CURLH_CONNECT)
    hv_stores(the_hv, "CURLH_CONNECT", newSViv(CURLH_CONNECT));
#endif
#if LIBCURL_HAS(CURLH_HEADER)
    hv_stores(the_hv, "CURLH_HEADER", newSViv(CURLH_HEADER));
#endif
#if LIBCURL_HAS(CURLH_PSEUDO)
    hv_stores(the_hv, "CURLH_PSEUDO", newSViv(CURLH_PSEUDO));
#endif
#if LIBCURL_HAS(CURLH_TRAILER)
    hv_stores(the_hv, "CURLH_TRAILER", newSViv(CURLH_TRAILER));
#endif
#if LIBCURL_HAS(CURLINFO_ACTIVESOCKET)
    hv_stores(the_hv, "CURLINFO_ACTIVESOCKET", newSViv(CURLINFO_ACTIVESOCKET));
#endif
#if LIBCURL_HAS(CURLINFO_APPCONNECT_TIME)
    hv_stores(the_hv, "CURLINFO_APPCONNECT_TIME", newSViv(CURLINFO_APPCONNECT_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_APPCONNECT_TIME_T)
    hv_stores(the_hv, "CURLINFO_APPCONNECT_TIME_T", newSViv(CURLINFO_APPCONNECT_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_CAINFO)
    hv_stores(the_hv, "CURLINFO_CAINFO", newSViv(CURLINFO_CAINFO));
#endif
#if LIBCURL_HAS(CURLINFO_CAPATH)
    hv_stores(the_hv, "CURLINFO_CAPATH", newSViv(CURLINFO_CAPATH));
#endif
#if LIBCURL_HAS(CURLINFO_CERTINFO)
    hv_stores(the_hv, "CURLINFO_CERTINFO", newSViv(CURLINFO_CERTINFO));
#endif
#if LIBCURL_HAS(CURLINFO_CONDITION_UNMET)
    hv_stores(the_hv, "CURLINFO_CONDITION_UNMET", newSViv(CURLINFO_CONDITION_UNMET));
#endif
#if LIBCURL_HAS(CURLINFO_CONNECT_TIME)
    hv_stores(the_hv, "CURLINFO_CONNECT_TIME", newSViv(CURLINFO_CONNECT_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_CONNECT_TIME_T)
    hv_stores(the_hv, "CURLINFO_CONNECT_TIME_T", newSViv(CURLINFO_CONNECT_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_CONN_ID)
    hv_stores(the_hv, "CURLINFO_CONN_ID", newSViv(CURLINFO_CONN_ID));
#endif
#if LIBCURL_HAS(CURLINFO_CONTENT_LENGTH_DOWNLOAD)
    hv_stores(the_hv, "CURLINFO_CONTENT_LENGTH_DOWNLOAD", newSViv(CURLINFO_CONTENT_LENGTH_DOWNLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_CONTENT_LENGTH_DOWNLOAD_T)
    hv_stores(the_hv, "CURLINFO_CONTENT_LENGTH_DOWNLOAD_T", newSViv(CURLINFO_CONTENT_LENGTH_DOWNLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_CONTENT_LENGTH_UPLOAD)
    hv_stores(the_hv, "CURLINFO_CONTENT_LENGTH_UPLOAD", newSViv(CURLINFO_CONTENT_LENGTH_UPLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_CONTENT_LENGTH_UPLOAD_T)
    hv_stores(the_hv, "CURLINFO_CONTENT_LENGTH_UPLOAD_T", newSViv(CURLINFO_CONTENT_LENGTH_UPLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_CONTENT_TYPE)
    hv_stores(the_hv, "CURLINFO_CONTENT_TYPE", newSViv(CURLINFO_CONTENT_TYPE));
#endif
#if LIBCURL_HAS(CURLINFO_COOKIELIST)
    hv_stores(the_hv, "CURLINFO_COOKIELIST", newSViv(CURLINFO_COOKIELIST));
#endif
#if LIBCURL_HAS(CURLINFO_DATA_IN)
    hv_stores(the_hv, "CURLINFO_DATA_IN", newSViv(CURLINFO_DATA_IN));
#endif
#if LIBCURL_HAS(CURLINFO_DATA_OUT)
    hv_stores(the_hv, "CURLINFO_DATA_OUT", newSViv(CURLINFO_DATA_OUT));
#endif
#if LIBCURL_HAS(CURLINFO_DOUBLE)
    hv_stores(the_hv, "CURLINFO_DOUBLE", newSViv(CURLINFO_DOUBLE));
#endif
#if LIBCURL_HAS(CURLINFO_EARLYDATA_SENT_T)
    hv_stores(the_hv, "CURLINFO_EARLYDATA_SENT_T", newSViv(CURLINFO_EARLYDATA_SENT_T));
#endif
#if LIBCURL_HAS(CURLINFO_EFFECTIVE_METHOD)
    hv_stores(the_hv, "CURLINFO_EFFECTIVE_METHOD", newSViv(CURLINFO_EFFECTIVE_METHOD));
#endif
#if LIBCURL_HAS(CURLINFO_EFFECTIVE_URL)
    hv_stores(the_hv, "CURLINFO_EFFECTIVE_URL", newSViv(CURLINFO_EFFECTIVE_URL));
#endif
#if LIBCURL_HAS(CURLINFO_END)
    hv_stores(the_hv, "CURLINFO_END", newSViv(CURLINFO_END));
#endif
#if LIBCURL_HAS(CURLINFO_FILETIME)
    hv_stores(the_hv, "CURLINFO_FILETIME", newSViv(CURLINFO_FILETIME));
#endif
#if LIBCURL_HAS(CURLINFO_FILETIME_T)
    hv_stores(the_hv, "CURLINFO_FILETIME_T", newSViv(CURLINFO_FILETIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_FTP_ENTRY_PATH)
    hv_stores(the_hv, "CURLINFO_FTP_ENTRY_PATH", newSViv(CURLINFO_FTP_ENTRY_PATH));
#endif
#if LIBCURL_HAS(CURLINFO_HEADER_IN)
    hv_stores(the_hv, "CURLINFO_HEADER_IN", newSViv(CURLINFO_HEADER_IN));
#endif
#if LIBCURL_HAS(CURLINFO_HEADER_OUT)
    hv_stores(the_hv, "CURLINFO_HEADER_OUT", newSViv(CURLINFO_HEADER_OUT));
#endif
#if LIBCURL_HAS(CURLINFO_HEADER_SIZE)
    hv_stores(the_hv, "CURLINFO_HEADER_SIZE", newSViv(CURLINFO_HEADER_SIZE));
#endif
#if LIBCURL_HAS(CURLINFO_HTTPAUTH_AVAIL)
    hv_stores(the_hv, "CURLINFO_HTTPAUTH_AVAIL", newSViv(CURLINFO_HTTPAUTH_AVAIL));
#endif
#if LIBCURL_HAS(CURLINFO_HTTPAUTH_USED)
    hv_stores(the_hv, "CURLINFO_HTTPAUTH_USED", newSViv(CURLINFO_HTTPAUTH_USED));
#endif
#if LIBCURL_HAS(CURLINFO_HTTP_CODE)
    hv_stores(the_hv, "CURLINFO_HTTP_CODE", newSViv(CURLINFO_HTTP_CODE));
#endif
#if LIBCURL_HAS(CURLINFO_HTTP_CONNECTCODE)
    hv_stores(the_hv, "CURLINFO_HTTP_CONNECTCODE", newSViv(CURLINFO_HTTP_CONNECTCODE));
#endif
#if LIBCURL_HAS(CURLINFO_HTTP_VERSION)
    hv_stores(the_hv, "CURLINFO_HTTP_VERSION", newSViv(CURLINFO_HTTP_VERSION));
#endif
#if LIBCURL_HAS(CURLINFO_LASTONE)
    hv_stores(the_hv, "CURLINFO_LASTONE", newSViv(CURLINFO_LASTONE));
#endif
#if LIBCURL_HAS(CURLINFO_LASTSOCKET)
    hv_stores(the_hv, "CURLINFO_LASTSOCKET", newSViv(CURLINFO_LASTSOCKET));
#endif
#if LIBCURL_HAS(CURLINFO_LOCAL_IP)
    hv_stores(the_hv, "CURLINFO_LOCAL_IP", newSViv(CURLINFO_LOCAL_IP));
#endif
#if LIBCURL_HAS(CURLINFO_LOCAL_PORT)
    hv_stores(the_hv, "CURLINFO_LOCAL_PORT", newSViv(CURLINFO_LOCAL_PORT));
#endif
#if LIBCURL_HAS(CURLINFO_LONG)
    hv_stores(the_hv, "CURLINFO_LONG", newSViv(CURLINFO_LONG));
#endif
#if LIBCURL_HAS(CURLINFO_MASK)
    hv_stores(the_hv, "CURLINFO_MASK", newSViv(CURLINFO_MASK));
#endif
#if LIBCURL_HAS(CURLINFO_NAMELOOKUP_TIME)
    hv_stores(the_hv, "CURLINFO_NAMELOOKUP_TIME", newSViv(CURLINFO_NAMELOOKUP_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_NAMELOOKUP_TIME_T)
    hv_stores(the_hv, "CURLINFO_NAMELOOKUP_TIME_T", newSViv(CURLINFO_NAMELOOKUP_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_NONE)
    hv_stores(the_hv, "CURLINFO_NONE", newSViv(CURLINFO_NONE));
#endif
#if LIBCURL_HAS(CURLINFO_NUM_CONNECTS)
    hv_stores(the_hv, "CURLINFO_NUM_CONNECTS", newSViv(CURLINFO_NUM_CONNECTS));
#endif
#if LIBCURL_HAS(CURLINFO_OFF_T)
    hv_stores(the_hv, "CURLINFO_OFF_T", newSViv(CURLINFO_OFF_T));
#endif
#if LIBCURL_HAS(CURLINFO_OS_ERRNO)
    hv_stores(the_hv, "CURLINFO_OS_ERRNO", newSViv(CURLINFO_OS_ERRNO));
#endif
#if LIBCURL_HAS(CURLINFO_POSTTRANSFER_TIME_T)
    hv_stores(the_hv, "CURLINFO_POSTTRANSFER_TIME_T", newSViv(CURLINFO_POSTTRANSFER_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_PRETRANSFER_TIME)
    hv_stores(the_hv, "CURLINFO_PRETRANSFER_TIME", newSViv(CURLINFO_PRETRANSFER_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_PRETRANSFER_TIME_T)
    hv_stores(the_hv, "CURLINFO_PRETRANSFER_TIME_T", newSViv(CURLINFO_PRETRANSFER_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_PRIMARY_IP)
    hv_stores(the_hv, "CURLINFO_PRIMARY_IP", newSViv(CURLINFO_PRIMARY_IP));
#endif
#if LIBCURL_HAS(CURLINFO_PRIMARY_PORT)
    hv_stores(the_hv, "CURLINFO_PRIMARY_PORT", newSViv(CURLINFO_PRIMARY_PORT));
#endif
#if LIBCURL_HAS(CURLINFO_PRIVATE)
    hv_stores(the_hv, "CURLINFO_PRIVATE", newSViv(CURLINFO_PRIVATE));
#endif
#if LIBCURL_HAS(CURLINFO_PROTOCOL)
    hv_stores(the_hv, "CURLINFO_PROTOCOL", newSViv(CURLINFO_PROTOCOL));
#endif
#if LIBCURL_HAS(CURLINFO_PROXYAUTH_AVAIL)
    hv_stores(the_hv, "CURLINFO_PROXYAUTH_AVAIL", newSViv(CURLINFO_PROXYAUTH_AVAIL));
#endif
#if LIBCURL_HAS(CURLINFO_PROXYAUTH_USED)
    hv_stores(the_hv, "CURLINFO_PROXYAUTH_USED", newSViv(CURLINFO_PROXYAUTH_USED));
#endif
#if LIBCURL_HAS(CURLINFO_PROXY_ERROR)
    hv_stores(the_hv, "CURLINFO_PROXY_ERROR", newSViv(CURLINFO_PROXY_ERROR));
#endif
#if LIBCURL_HAS(CURLINFO_PROXY_SSL_VERIFYRESULT)
    hv_stores(the_hv, "CURLINFO_PROXY_SSL_VERIFYRESULT", newSViv(CURLINFO_PROXY_SSL_VERIFYRESULT));
#endif
#if LIBCURL_HAS(CURLINFO_PTR)
    hv_stores(the_hv, "CURLINFO_PTR", newSViv(CURLINFO_PTR));
#endif
#if LIBCURL_HAS(CURLINFO_QUEUE_TIME_T)
    hv_stores(the_hv, "CURLINFO_QUEUE_TIME_T", newSViv(CURLINFO_QUEUE_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_REDIRECT_COUNT)
    hv_stores(the_hv, "CURLINFO_REDIRECT_COUNT", newSViv(CURLINFO_REDIRECT_COUNT));
#endif
#if LIBCURL_HAS(CURLINFO_REDIRECT_TIME)
    hv_stores(the_hv, "CURLINFO_REDIRECT_TIME", newSViv(CURLINFO_REDIRECT_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_REDIRECT_TIME_T)
    hv_stores(the_hv, "CURLINFO_REDIRECT_TIME_T", newSViv(CURLINFO_REDIRECT_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_REDIRECT_URL)
    hv_stores(the_hv, "CURLINFO_REDIRECT_URL", newSViv(CURLINFO_REDIRECT_URL));
#endif
#if LIBCURL_HAS(CURLINFO_REFERER)
    hv_stores(the_hv, "CURLINFO_REFERER", newSViv(CURLINFO_REFERER));
#endif
#if LIBCURL_HAS(CURLINFO_REQUEST_SIZE)
    hv_stores(the_hv, "CURLINFO_REQUEST_SIZE", newSViv(CURLINFO_REQUEST_SIZE));
#endif
#if LIBCURL_HAS(CURLINFO_RESPONSE_CODE)
    hv_stores(the_hv, "CURLINFO_RESPONSE_CODE", newSViv(CURLINFO_RESPONSE_CODE));
#endif
#if LIBCURL_HAS(CURLINFO_RETRY_AFTER)
    hv_stores(the_hv, "CURLINFO_RETRY_AFTER", newSViv(CURLINFO_RETRY_AFTER));
#endif
#if LIBCURL_HAS(CURLINFO_RTSP_CLIENT_CSEQ)
    hv_stores(the_hv, "CURLINFO_RTSP_CLIENT_CSEQ", newSViv(CURLINFO_RTSP_CLIENT_CSEQ));
#endif
#if LIBCURL_HAS(CURLINFO_RTSP_CSEQ_RECV)
    hv_stores(the_hv, "CURLINFO_RTSP_CSEQ_RECV", newSViv(CURLINFO_RTSP_CSEQ_RECV));
#endif
#if LIBCURL_HAS(CURLINFO_RTSP_SERVER_CSEQ)
    hv_stores(the_hv, "CURLINFO_RTSP_SERVER_CSEQ", newSViv(CURLINFO_RTSP_SERVER_CSEQ));
#endif
#if LIBCURL_HAS(CURLINFO_RTSP_SESSION_ID)
    hv_stores(the_hv, "CURLINFO_RTSP_SESSION_ID", newSViv(CURLINFO_RTSP_SESSION_ID));
#endif
#if LIBCURL_HAS(CURLINFO_SCHEME)
    hv_stores(the_hv, "CURLINFO_SCHEME", newSViv(CURLINFO_SCHEME));
#endif
#if LIBCURL_HAS(CURLINFO_SIZE_DOWNLOAD)
    hv_stores(the_hv, "CURLINFO_SIZE_DOWNLOAD", newSViv(CURLINFO_SIZE_DOWNLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_SIZE_DOWNLOAD_T)
    hv_stores(the_hv, "CURLINFO_SIZE_DOWNLOAD_T", newSViv(CURLINFO_SIZE_DOWNLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_SIZE_UPLOAD)
    hv_stores(the_hv, "CURLINFO_SIZE_UPLOAD", newSViv(CURLINFO_SIZE_UPLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_SIZE_UPLOAD_T)
    hv_stores(the_hv, "CURLINFO_SIZE_UPLOAD_T", newSViv(CURLINFO_SIZE_UPLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_SLIST)
    hv_stores(the_hv, "CURLINFO_SLIST", newSViv(CURLINFO_SLIST));
#endif
#if LIBCURL_HAS(CURLINFO_SOCKET)
    hv_stores(the_hv, "CURLINFO_SOCKET", newSViv(CURLINFO_SOCKET));
#endif
#if LIBCURL_HAS(CURLINFO_SPEED_DOWNLOAD)
    hv_stores(the_hv, "CURLINFO_SPEED_DOWNLOAD", newSViv(CURLINFO_SPEED_DOWNLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_SPEED_DOWNLOAD_T)
    hv_stores(the_hv, "CURLINFO_SPEED_DOWNLOAD_T", newSViv(CURLINFO_SPEED_DOWNLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_SPEED_UPLOAD)
    hv_stores(the_hv, "CURLINFO_SPEED_UPLOAD", newSViv(CURLINFO_SPEED_UPLOAD));
#endif
#if LIBCURL_HAS(CURLINFO_SPEED_UPLOAD_T)
    hv_stores(the_hv, "CURLINFO_SPEED_UPLOAD_T", newSViv(CURLINFO_SPEED_UPLOAD_T));
#endif
#if LIBCURL_HAS(CURLINFO_SSL_DATA_IN)
    hv_stores(the_hv, "CURLINFO_SSL_DATA_IN", newSViv(CURLINFO_SSL_DATA_IN));
#endif
#if LIBCURL_HAS(CURLINFO_SSL_DATA_OUT)
    hv_stores(the_hv, "CURLINFO_SSL_DATA_OUT", newSViv(CURLINFO_SSL_DATA_OUT));
#endif
#if LIBCURL_HAS(CURLINFO_SSL_ENGINES)
    hv_stores(the_hv, "CURLINFO_SSL_ENGINES", newSViv(CURLINFO_SSL_ENGINES));
#endif
#if LIBCURL_HAS(CURLINFO_SSL_VERIFYRESULT)
    hv_stores(the_hv, "CURLINFO_SSL_VERIFYRESULT", newSViv(CURLINFO_SSL_VERIFYRESULT));
#endif
#if LIBCURL_HAS(CURLINFO_STARTTRANSFER_TIME)
    hv_stores(the_hv, "CURLINFO_STARTTRANSFER_TIME", newSViv(CURLINFO_STARTTRANSFER_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_STARTTRANSFER_TIME_T)
    hv_stores(the_hv, "CURLINFO_STARTTRANSFER_TIME_T", newSViv(CURLINFO_STARTTRANSFER_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_STRING)
    hv_stores(the_hv, "CURLINFO_STRING", newSViv(CURLINFO_STRING));
#endif
#if LIBCURL_HAS(CURLINFO_TEXT)
    hv_stores(the_hv, "CURLINFO_TEXT", newSViv(CURLINFO_TEXT));
#endif
#if LIBCURL_HAS(CURLINFO_TLS_SESSION)
    hv_stores(the_hv, "CURLINFO_TLS_SESSION", newSViv(CURLINFO_TLS_SESSION));
#endif
#if LIBCURL_HAS(CURLINFO_TLS_SSL_PTR)
    hv_stores(the_hv, "CURLINFO_TLS_SSL_PTR", newSViv(CURLINFO_TLS_SSL_PTR));
#endif
#if LIBCURL_HAS(CURLINFO_TOTAL_TIME)
    hv_stores(the_hv, "CURLINFO_TOTAL_TIME", newSViv(CURLINFO_TOTAL_TIME));
#endif
#if LIBCURL_HAS(CURLINFO_TOTAL_TIME_T)
    hv_stores(the_hv, "CURLINFO_TOTAL_TIME_T", newSViv(CURLINFO_TOTAL_TIME_T));
#endif
#if LIBCURL_HAS(CURLINFO_TYPEMASK)
    hv_stores(the_hv, "CURLINFO_TYPEMASK", newSViv(CURLINFO_TYPEMASK));
#endif
#if LIBCURL_HAS(CURLINFO_USED_PROXY)
    hv_stores(the_hv, "CURLINFO_USED_PROXY", newSViv(CURLINFO_USED_PROXY));
#endif
#if LIBCURL_HAS(CURLINFO_XFER_ID)
    hv_stores(the_hv, "CURLINFO_XFER_ID", newSViv(CURLINFO_XFER_ID));
#endif
#if LIBCURL_HAS(CURLIOCMD_NOP)
    hv_stores(the_hv, "CURLIOCMD_NOP", newSViv(CURLIOCMD_NOP));
#endif
#if LIBCURL_HAS(CURLIOCMD_RESTARTREAD)
    hv_stores(the_hv, "CURLIOCMD_RESTARTREAD", newSViv(CURLIOCMD_RESTARTREAD));
#endif
#if LIBCURL_HAS(CURLIOE_FAILRESTART)
    hv_stores(the_hv, "CURLIOE_FAILRESTART", newSViv(CURLIOE_FAILRESTART));
#endif
#if LIBCURL_HAS(CURLIOE_OK)
    hv_stores(the_hv, "CURLIOE_OK", newSViv(CURLIOE_OK));
#endif
#if LIBCURL_HAS(CURLIOE_UNKNOWNCMD)
    hv_stores(the_hv, "CURLIOE_UNKNOWNCMD", newSViv(CURLIOE_UNKNOWNCMD));
#endif
#if LIBCURL_HAS(CURLKHMATCH_MISMATCH)
    hv_stores(the_hv, "CURLKHMATCH_MISMATCH", newSViv(CURLKHMATCH_MISMATCH));
#endif
#if LIBCURL_HAS(CURLKHMATCH_MISSING)
    hv_stores(the_hv, "CURLKHMATCH_MISSING", newSViv(CURLKHMATCH_MISSING));
#endif
#if LIBCURL_HAS(CURLKHMATCH_OK)
    hv_stores(the_hv, "CURLKHMATCH_OK", newSViv(CURLKHMATCH_OK));
#endif
#if LIBCURL_HAS(CURLKHSTAT_DEFER)
    hv_stores(the_hv, "CURLKHSTAT_DEFER", newSViv(CURLKHSTAT_DEFER));
#endif
#if LIBCURL_HAS(CURLKHSTAT_FINE)
    hv_stores(the_hv, "CURLKHSTAT_FINE", newSViv(CURLKHSTAT_FINE));
#endif
#if LIBCURL_HAS(CURLKHSTAT_FINE_ADD_TO_FILE)
    hv_stores(the_hv, "CURLKHSTAT_FINE_ADD_TO_FILE", newSViv(CURLKHSTAT_FINE_ADD_TO_FILE));
#endif
#if LIBCURL_HAS(CURLKHSTAT_FINE_REPLACE)
    hv_stores(the_hv, "CURLKHSTAT_FINE_REPLACE", newSViv(CURLKHSTAT_FINE_REPLACE));
#endif
#if LIBCURL_HAS(CURLKHSTAT_REJECT)
    hv_stores(the_hv, "CURLKHSTAT_REJECT", newSViv(CURLKHSTAT_REJECT));
#endif
#if LIBCURL_HAS(CURLKHTYPE_DSS)
    hv_stores(the_hv, "CURLKHTYPE_DSS", newSViv(CURLKHTYPE_DSS));
#endif
#if LIBCURL_HAS(CURLKHTYPE_ECDSA)
    hv_stores(the_hv, "CURLKHTYPE_ECDSA", newSViv(CURLKHTYPE_ECDSA));
#endif
#if LIBCURL_HAS(CURLKHTYPE_ED25519)
    hv_stores(the_hv, "CURLKHTYPE_ED25519", newSViv(CURLKHTYPE_ED25519));
#endif
#if LIBCURL_HAS(CURLKHTYPE_RSA)
    hv_stores(the_hv, "CURLKHTYPE_RSA", newSViv(CURLKHTYPE_RSA));
#endif
#if LIBCURL_HAS(CURLKHTYPE_RSA1)
    hv_stores(the_hv, "CURLKHTYPE_RSA1", newSViv(CURLKHTYPE_RSA1));
#endif
#if LIBCURL_HAS(CURLKHTYPE_UNKNOWN)
    hv_stores(the_hv, "CURLKHTYPE_UNKNOWN", newSViv(CURLKHTYPE_UNKNOWN));
#endif
#if LIBCURL_HAS(CURLMIMEOPT_FORMESCAPE)
    hv_stores(the_hv, "CURLMIMEOPT_FORMESCAPE", newSViv(CURLMIMEOPT_FORMESCAPE));
#endif
#if LIBCURL_HAS(CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE)
    hv_stores(the_hv, "CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE", newSViv(CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE));
#endif
#if LIBCURL_HAS(CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE)
    hv_stores(the_hv, "CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE", newSViv(CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE));
#endif
#if LIBCURL_HAS(CURLMOPT_MAXCONNECTS)
    hv_stores(the_hv, "CURLMOPT_MAXCONNECTS", newSViv(CURLMOPT_MAXCONNECTS));
#endif
#if LIBCURL_HAS(CURLMOPT_MAX_CONCURRENT_STREAMS)
    hv_stores(the_hv, "CURLMOPT_MAX_CONCURRENT_STREAMS", newSViv(CURLMOPT_MAX_CONCURRENT_STREAMS));
#endif
#if LIBCURL_HAS(CURLMOPT_MAX_HOST_CONNECTIONS)
    hv_stores(the_hv, "CURLMOPT_MAX_HOST_CONNECTIONS", newSViv(CURLMOPT_MAX_HOST_CONNECTIONS));
#endif
#if LIBCURL_HAS(CURLMOPT_MAX_PIPELINE_LENGTH)
    hv_stores(the_hv, "CURLMOPT_MAX_PIPELINE_LENGTH", newSViv(CURLMOPT_MAX_PIPELINE_LENGTH));
#endif
#if LIBCURL_HAS(CURLMOPT_MAX_TOTAL_CONNECTIONS)
    hv_stores(the_hv, "CURLMOPT_MAX_TOTAL_CONNECTIONS", newSViv(CURLMOPT_MAX_TOTAL_CONNECTIONS));
#endif
#if LIBCURL_HAS(CURLMOPT_PIPELINING)
    hv_stores(the_hv, "CURLMOPT_PIPELINING", newSViv(CURLMOPT_PIPELINING));
#endif
#if LIBCURL_HAS(CURLMOPT_PIPELINING_SERVER_BL)
    hv_stores(the_hv, "CURLMOPT_PIPELINING_SERVER_BL", newSViv(CURLMOPT_PIPELINING_SERVER_BL));
#endif
#if LIBCURL_HAS(CURLMOPT_PIPELINING_SITE_BL)
    hv_stores(the_hv, "CURLMOPT_PIPELINING_SITE_BL", newSViv(CURLMOPT_PIPELINING_SITE_BL));
#endif
#if LIBCURL_HAS(CURLMOPT_PUSHDATA)
    hv_stores(the_hv, "CURLMOPT_PUSHDATA", newSViv(CURLMOPT_PUSHDATA));
#endif
#if LIBCURL_HAS(CURLMOPT_PUSHFUNCTION)
    hv_stores(the_hv, "CURLMOPT_PUSHFUNCTION", newSViv(CURLMOPT_PUSHFUNCTION));
#endif
#if LIBCURL_HAS(CURLMOPT_SOCKETDATA)
    hv_stores(the_hv, "CURLMOPT_SOCKETDATA", newSViv(CURLMOPT_SOCKETDATA));
#endif
#if LIBCURL_HAS(CURLMOPT_SOCKETFUNCTION)
    hv_stores(the_hv, "CURLMOPT_SOCKETFUNCTION", newSViv(CURLMOPT_SOCKETFUNCTION));
#endif
#if LIBCURL_HAS(CURLMOPT_TIMERDATA)
    hv_stores(the_hv, "CURLMOPT_TIMERDATA", newSViv(CURLMOPT_TIMERDATA));
#endif
#if LIBCURL_HAS(CURLMOPT_TIMERFUNCTION)
    hv_stores(the_hv, "CURLMOPT_TIMERFUNCTION", newSViv(CURLMOPT_TIMERFUNCTION));
#endif
#if LIBCURL_HAS(CURLMSG_DONE)
    hv_stores(the_hv, "CURLMSG_DONE", newSViv(CURLMSG_DONE));
#endif
#if LIBCURL_HAS(CURLMSG_NONE)
    hv_stores(the_hv, "CURLMSG_NONE", newSViv(CURLMSG_NONE));
#endif
#if LIBCURL_HAS(CURLM_ABORTED_BY_CALLBACK)
    hv_stores(the_hv, "CURLM_ABORTED_BY_CALLBACK", newSViv(CURLM_ABORTED_BY_CALLBACK));
#endif
#if LIBCURL_HAS(CURLM_ADDED_ALREADY)
    hv_stores(the_hv, "CURLM_ADDED_ALREADY", newSViv(CURLM_ADDED_ALREADY));
#endif
#if LIBCURL_HAS(CURLM_BAD_EASY_HANDLE)
    hv_stores(the_hv, "CURLM_BAD_EASY_HANDLE", newSViv(CURLM_BAD_EASY_HANDLE));
#endif
#if LIBCURL_HAS(CURLM_BAD_FUNCTION_ARGUMENT)
    hv_stores(the_hv, "CURLM_BAD_FUNCTION_ARGUMENT", newSViv(CURLM_BAD_FUNCTION_ARGUMENT));
#endif
#if LIBCURL_HAS(CURLM_BAD_HANDLE)
    hv_stores(the_hv, "CURLM_BAD_HANDLE", newSViv(CURLM_BAD_HANDLE));
#endif
#if LIBCURL_HAS(CURLM_BAD_SOCKET)
    hv_stores(the_hv, "CURLM_BAD_SOCKET", newSViv(CURLM_BAD_SOCKET));
#endif
#if LIBCURL_HAS(CURLM_CALL_MULTI_PERFORM)
    hv_stores(the_hv, "CURLM_CALL_MULTI_PERFORM", newSViv(CURLM_CALL_MULTI_PERFORM));
#endif
#if LIBCURL_HAS(CURLM_CALL_MULTI_SOCKET)
    hv_stores(the_hv, "CURLM_CALL_MULTI_SOCKET", newSViv(CURLM_CALL_MULTI_SOCKET));
#endif
#if LIBCURL_HAS(CURLM_INTERNAL_ERROR)
    hv_stores(the_hv, "CURLM_INTERNAL_ERROR", newSViv(CURLM_INTERNAL_ERROR));
#endif
#if LIBCURL_HAS(CURLM_OK)
    hv_stores(the_hv, "CURLM_OK", newSViv(CURLM_OK));
#endif
#if LIBCURL_HAS(CURLM_OUT_OF_MEMORY)
    hv_stores(the_hv, "CURLM_OUT_OF_MEMORY", newSViv(CURLM_OUT_OF_MEMORY));
#endif
#if LIBCURL_HAS(CURLM_RECURSIVE_API_CALL)
    hv_stores(the_hv, "CURLM_RECURSIVE_API_CALL", newSViv(CURLM_RECURSIVE_API_CALL));
#endif
#if LIBCURL_HAS(CURLM_UNKNOWN_OPTION)
    hv_stores(the_hv, "CURLM_UNKNOWN_OPTION", newSViv(CURLM_UNKNOWN_OPTION));
#endif
#if LIBCURL_HAS(CURLM_UNRECOVERABLE_POLL)
    hv_stores(the_hv, "CURLM_UNRECOVERABLE_POLL", newSViv(CURLM_UNRECOVERABLE_POLL));
#endif
#if LIBCURL_HAS(CURLM_WAKEUP_FAILURE)
    hv_stores(the_hv, "CURLM_WAKEUP_FAILURE", newSViv(CURLM_WAKEUP_FAILURE));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_BLOB)
    hv_stores(the_hv, "CURLOPTTYPE_BLOB", newSViv(CURLOPTTYPE_BLOB));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_CBPOINT)
    hv_stores(the_hv, "CURLOPTTYPE_CBPOINT", newSViv(CURLOPTTYPE_CBPOINT));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_FUNCTIONPOINT)
    hv_stores(the_hv, "CURLOPTTYPE_FUNCTIONPOINT", newSViv(CURLOPTTYPE_FUNCTIONPOINT));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_LONG)
    hv_stores(the_hv, "CURLOPTTYPE_LONG", newSViv(CURLOPTTYPE_LONG));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_OBJECTPOINT)
    hv_stores(the_hv, "CURLOPTTYPE_OBJECTPOINT", newSViv(CURLOPTTYPE_OBJECTPOINT));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_OFF_T)
    hv_stores(the_hv, "CURLOPTTYPE_OFF_T", newSViv(CURLOPTTYPE_OFF_T));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_SLISTPOINT)
    hv_stores(the_hv, "CURLOPTTYPE_SLISTPOINT", newSViv(CURLOPTTYPE_SLISTPOINT));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_STRINGPOINT)
    hv_stores(the_hv, "CURLOPTTYPE_STRINGPOINT", newSViv(CURLOPTTYPE_STRINGPOINT));
#endif
#if LIBCURL_HAS(CURLOPTTYPE_VALUES)
    hv_stores(the_hv, "CURLOPTTYPE_VALUES", newSViv(CURLOPTTYPE_VALUES));
#endif
#if LIBCURL_HAS(CURLOPT_ABSTRACT_UNIX_SOCKET)
    hv_stores(the_hv, "CURLOPT_ABSTRACT_UNIX_SOCKET", newSViv(CURLOPT_ABSTRACT_UNIX_SOCKET));
#endif
#if LIBCURL_HAS(CURLOPT_ACCEPTTIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_ACCEPTTIMEOUT_MS", newSViv(CURLOPT_ACCEPTTIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_ACCEPT_ENCODING)
    hv_stores(the_hv, "CURLOPT_ACCEPT_ENCODING", newSViv(CURLOPT_ACCEPT_ENCODING));
#endif
#if LIBCURL_HAS(CURLOPT_ADDRESS_SCOPE)
    hv_stores(the_hv, "CURLOPT_ADDRESS_SCOPE", newSViv(CURLOPT_ADDRESS_SCOPE));
#endif
#if LIBCURL_HAS(CURLOPT_ALTSVC)
    hv_stores(the_hv, "CURLOPT_ALTSVC", newSViv(CURLOPT_ALTSVC));
#endif
#if LIBCURL_HAS(CURLOPT_ALTSVC_CTRL)
    hv_stores(the_hv, "CURLOPT_ALTSVC_CTRL", newSViv(CURLOPT_ALTSVC_CTRL));
#endif
#if LIBCURL_HAS(CURLOPT_APPEND)
    hv_stores(the_hv, "CURLOPT_APPEND", newSViv(CURLOPT_APPEND));
#endif
#if LIBCURL_HAS(CURLOPT_AUTOREFERER)
    hv_stores(the_hv, "CURLOPT_AUTOREFERER", newSViv(CURLOPT_AUTOREFERER));
#endif
#if LIBCURL_HAS(CURLOPT_AWS_SIGV4)
    hv_stores(the_hv, "CURLOPT_AWS_SIGV4", newSViv(CURLOPT_AWS_SIGV4));
#endif
#if LIBCURL_HAS(CURLOPT_BUFFERSIZE)
    hv_stores(the_hv, "CURLOPT_BUFFERSIZE", newSViv(CURLOPT_BUFFERSIZE));
#endif
#if LIBCURL_HAS(CURLOPT_CAINFO)
    hv_stores(the_hv, "CURLOPT_CAINFO", newSViv(CURLOPT_CAINFO));
#endif
#if LIBCURL_HAS(CURLOPT_CAINFO_BLOB)
    hv_stores(the_hv, "CURLOPT_CAINFO_BLOB", newSViv(CURLOPT_CAINFO_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_CAPATH)
    hv_stores(the_hv, "CURLOPT_CAPATH", newSViv(CURLOPT_CAPATH));
#endif
#if LIBCURL_HAS(CURLOPT_CA_CACHE_TIMEOUT)
    hv_stores(the_hv, "CURLOPT_CA_CACHE_TIMEOUT", newSViv(CURLOPT_CA_CACHE_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_CERTINFO)
    hv_stores(the_hv, "CURLOPT_CERTINFO", newSViv(CURLOPT_CERTINFO));
#endif
#if LIBCURL_HAS(CURLOPT_CHUNK_BGN_FUNCTION)
    hv_stores(the_hv, "CURLOPT_CHUNK_BGN_FUNCTION", newSViv(CURLOPT_CHUNK_BGN_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CHUNK_DATA)
    hv_stores(the_hv, "CURLOPT_CHUNK_DATA", newSViv(CURLOPT_CHUNK_DATA));
#endif
#if LIBCURL_HAS(CURLOPT_CHUNK_END_FUNCTION)
    hv_stores(the_hv, "CURLOPT_CHUNK_END_FUNCTION", newSViv(CURLOPT_CHUNK_END_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CLOSEFUNCTION)
    hv_stores(the_hv, "CURLOPT_CLOSEFUNCTION", newSViv(CURLOPT_CLOSEFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CLOSEPOLICY)
    hv_stores(the_hv, "CURLOPT_CLOSEPOLICY", newSViv(CURLOPT_CLOSEPOLICY));
#endif
#if LIBCURL_HAS(CURLOPT_CLOSESOCKETDATA)
    hv_stores(the_hv, "CURLOPT_CLOSESOCKETDATA", newSViv(CURLOPT_CLOSESOCKETDATA));
#endif
#if LIBCURL_HAS(CURLOPT_CLOSESOCKETFUNCTION)
    hv_stores(the_hv, "CURLOPT_CLOSESOCKETFUNCTION", newSViv(CURLOPT_CLOSESOCKETFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CONNECTTIMEOUT)
    hv_stores(the_hv, "CURLOPT_CONNECTTIMEOUT", newSViv(CURLOPT_CONNECTTIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_CONNECTTIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_CONNECTTIMEOUT_MS", newSViv(CURLOPT_CONNECTTIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_CONNECT_ONLY)
    hv_stores(the_hv, "CURLOPT_CONNECT_ONLY", newSViv(CURLOPT_CONNECT_ONLY));
#endif
#if LIBCURL_HAS(CURLOPT_CONNECT_TO)
    hv_stores(the_hv, "CURLOPT_CONNECT_TO", newSViv(CURLOPT_CONNECT_TO));
#endif
#if LIBCURL_HAS(CURLOPT_CONV_FROM_NETWORK_FUNCTION)
    hv_stores(the_hv, "CURLOPT_CONV_FROM_NETWORK_FUNCTION", newSViv(CURLOPT_CONV_FROM_NETWORK_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CONV_FROM_UTF8_FUNCTION)
    hv_stores(the_hv, "CURLOPT_CONV_FROM_UTF8_FUNCTION", newSViv(CURLOPT_CONV_FROM_UTF8_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_CONV_TO_NETWORK_FUNCTION)
    hv_stores(the_hv, "CURLOPT_CONV_TO_NETWORK_FUNCTION", newSViv(CURLOPT_CONV_TO_NETWORK_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_COOKIE)
    hv_stores(the_hv, "CURLOPT_COOKIE", newSViv(CURLOPT_COOKIE));
#endif
#if LIBCURL_HAS(CURLOPT_COOKIEFILE)
    hv_stores(the_hv, "CURLOPT_COOKIEFILE", newSViv(CURLOPT_COOKIEFILE));
#endif
#if LIBCURL_HAS(CURLOPT_COOKIEJAR)
    hv_stores(the_hv, "CURLOPT_COOKIEJAR", newSViv(CURLOPT_COOKIEJAR));
#endif
#if LIBCURL_HAS(CURLOPT_COOKIELIST)
    hv_stores(the_hv, "CURLOPT_COOKIELIST", newSViv(CURLOPT_COOKIELIST));
#endif
#if LIBCURL_HAS(CURLOPT_COOKIESESSION)
    hv_stores(the_hv, "CURLOPT_COOKIESESSION", newSViv(CURLOPT_COOKIESESSION));
#endif
#if LIBCURL_HAS(CURLOPT_COPYPOSTFIELDS)
    hv_stores(the_hv, "CURLOPT_COPYPOSTFIELDS", newSViv(CURLOPT_COPYPOSTFIELDS));
#endif
#if LIBCURL_HAS(CURLOPT_CRLF)
    hv_stores(the_hv, "CURLOPT_CRLF", newSViv(CURLOPT_CRLF));
#endif
#if LIBCURL_HAS(CURLOPT_CRLFILE)
    hv_stores(the_hv, "CURLOPT_CRLFILE", newSViv(CURLOPT_CRLFILE));
#endif
#if LIBCURL_HAS(CURLOPT_CURLU)
    hv_stores(the_hv, "CURLOPT_CURLU", newSViv(CURLOPT_CURLU));
#endif
#if LIBCURL_HAS(CURLOPT_CUSTOMREQUEST)
    hv_stores(the_hv, "CURLOPT_CUSTOMREQUEST", newSViv(CURLOPT_CUSTOMREQUEST));
#endif
#if LIBCURL_HAS(CURLOPT_DEBUGDATA)
    hv_stores(the_hv, "CURLOPT_DEBUGDATA", newSViv(CURLOPT_DEBUGDATA));
#endif
#if LIBCURL_HAS(CURLOPT_DEBUGFUNCTION)
    hv_stores(the_hv, "CURLOPT_DEBUGFUNCTION", newSViv(CURLOPT_DEBUGFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_DEFAULT_PROTOCOL)
    hv_stores(the_hv, "CURLOPT_DEFAULT_PROTOCOL", newSViv(CURLOPT_DEFAULT_PROTOCOL));
#endif
#if LIBCURL_HAS(CURLOPT_DIRLISTONLY)
    hv_stores(the_hv, "CURLOPT_DIRLISTONLY", newSViv(CURLOPT_DIRLISTONLY));
#endif
#if LIBCURL_HAS(CURLOPT_DISALLOW_USERNAME_IN_URL)
    hv_stores(the_hv, "CURLOPT_DISALLOW_USERNAME_IN_URL", newSViv(CURLOPT_DISALLOW_USERNAME_IN_URL));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_CACHE_TIMEOUT)
    hv_stores(the_hv, "CURLOPT_DNS_CACHE_TIMEOUT", newSViv(CURLOPT_DNS_CACHE_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_INTERFACE)
    hv_stores(the_hv, "CURLOPT_DNS_INTERFACE", newSViv(CURLOPT_DNS_INTERFACE));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_LOCAL_IP4)
    hv_stores(the_hv, "CURLOPT_DNS_LOCAL_IP4", newSViv(CURLOPT_DNS_LOCAL_IP4));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_LOCAL_IP6)
    hv_stores(the_hv, "CURLOPT_DNS_LOCAL_IP6", newSViv(CURLOPT_DNS_LOCAL_IP6));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_SERVERS)
    hv_stores(the_hv, "CURLOPT_DNS_SERVERS", newSViv(CURLOPT_DNS_SERVERS));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_SHUFFLE_ADDRESSES)
    hv_stores(the_hv, "CURLOPT_DNS_SHUFFLE_ADDRESSES", newSViv(CURLOPT_DNS_SHUFFLE_ADDRESSES));
#endif
#if LIBCURL_HAS(CURLOPT_DNS_USE_GLOBAL_CACHE)
    hv_stores(the_hv, "CURLOPT_DNS_USE_GLOBAL_CACHE", newSViv(CURLOPT_DNS_USE_GLOBAL_CACHE));
#endif
#if LIBCURL_HAS(CURLOPT_DOH_SSL_VERIFYHOST)
    hv_stores(the_hv, "CURLOPT_DOH_SSL_VERIFYHOST", newSViv(CURLOPT_DOH_SSL_VERIFYHOST));
#endif
#if LIBCURL_HAS(CURLOPT_DOH_SSL_VERIFYPEER)
    hv_stores(the_hv, "CURLOPT_DOH_SSL_VERIFYPEER", newSViv(CURLOPT_DOH_SSL_VERIFYPEER));
#endif
#if LIBCURL_HAS(CURLOPT_DOH_SSL_VERIFYSTATUS)
    hv_stores(the_hv, "CURLOPT_DOH_SSL_VERIFYSTATUS", newSViv(CURLOPT_DOH_SSL_VERIFYSTATUS));
#endif
#if LIBCURL_HAS(CURLOPT_DOH_URL)
    hv_stores(the_hv, "CURLOPT_DOH_URL", newSViv(CURLOPT_DOH_URL));
#endif
#if LIBCURL_HAS(CURLOPT_ECH)
    hv_stores(the_hv, "CURLOPT_ECH", newSViv(CURLOPT_ECH));
#endif
#if LIBCURL_HAS(CURLOPT_EGDSOCKET)
    hv_stores(the_hv, "CURLOPT_EGDSOCKET", newSViv(CURLOPT_EGDSOCKET));
#endif
#if LIBCURL_HAS(CURLOPT_ENCODING)
    hv_stores(the_hv, "CURLOPT_ENCODING", newSViv(CURLOPT_ENCODING));
#endif
#if LIBCURL_HAS(CURLOPT_ERRORBUFFER)
    hv_stores(the_hv, "CURLOPT_ERRORBUFFER", newSViv(CURLOPT_ERRORBUFFER));
#endif
#if LIBCURL_HAS(CURLOPT_EXPECT_100_TIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_EXPECT_100_TIMEOUT_MS", newSViv(CURLOPT_EXPECT_100_TIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_FAILONERROR)
    hv_stores(the_hv, "CURLOPT_FAILONERROR", newSViv(CURLOPT_FAILONERROR));
#endif
#if LIBCURL_HAS(CURLOPT_FILE)
    hv_stores(the_hv, "CURLOPT_FILE", newSViv(CURLOPT_FILE));
#endif
#if LIBCURL_HAS(CURLOPT_FILETIME)
    hv_stores(the_hv, "CURLOPT_FILETIME", newSViv(CURLOPT_FILETIME));
#endif
#if LIBCURL_HAS(CURLOPT_FNMATCH_DATA)
    hv_stores(the_hv, "CURLOPT_FNMATCH_DATA", newSViv(CURLOPT_FNMATCH_DATA));
#endif
#if LIBCURL_HAS(CURLOPT_FNMATCH_FUNCTION)
    hv_stores(the_hv, "CURLOPT_FNMATCH_FUNCTION", newSViv(CURLOPT_FNMATCH_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_FOLLOWLOCATION)
    hv_stores(the_hv, "CURLOPT_FOLLOWLOCATION", newSViv(CURLOPT_FOLLOWLOCATION));
#endif
#if LIBCURL_HAS(CURLOPT_FORBID_REUSE)
    hv_stores(the_hv, "CURLOPT_FORBID_REUSE", newSViv(CURLOPT_FORBID_REUSE));
#endif
#if LIBCURL_HAS(CURLOPT_FRESH_CONNECT)
    hv_stores(the_hv, "CURLOPT_FRESH_CONNECT", newSViv(CURLOPT_FRESH_CONNECT));
#endif
#if LIBCURL_HAS(CURLOPT_FTPAPPEND)
    hv_stores(the_hv, "CURLOPT_FTPAPPEND", newSViv(CURLOPT_FTPAPPEND));
#endif
#if LIBCURL_HAS(CURLOPT_FTPASCII)
    hv_stores(the_hv, "CURLOPT_FTPASCII", newSViv(CURLOPT_FTPASCII));
#endif
#if LIBCURL_HAS(CURLOPT_FTPLISTONLY)
    hv_stores(the_hv, "CURLOPT_FTPLISTONLY", newSViv(CURLOPT_FTPLISTONLY));
#endif
#if LIBCURL_HAS(CURLOPT_FTPPORT)
    hv_stores(the_hv, "CURLOPT_FTPPORT", newSViv(CURLOPT_FTPPORT));
#endif
#if LIBCURL_HAS(CURLOPT_FTPSSLAUTH)
    hv_stores(the_hv, "CURLOPT_FTPSSLAUTH", newSViv(CURLOPT_FTPSSLAUTH));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_ACCOUNT)
    hv_stores(the_hv, "CURLOPT_FTP_ACCOUNT", newSViv(CURLOPT_FTP_ACCOUNT));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_ALTERNATIVE_TO_USER)
    hv_stores(the_hv, "CURLOPT_FTP_ALTERNATIVE_TO_USER", newSViv(CURLOPT_FTP_ALTERNATIVE_TO_USER));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_CREATE_MISSING_DIRS)
    hv_stores(the_hv, "CURLOPT_FTP_CREATE_MISSING_DIRS", newSViv(CURLOPT_FTP_CREATE_MISSING_DIRS));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_FILEMETHOD)
    hv_stores(the_hv, "CURLOPT_FTP_FILEMETHOD", newSViv(CURLOPT_FTP_FILEMETHOD));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_RESPONSE_TIMEOUT)
    hv_stores(the_hv, "CURLOPT_FTP_RESPONSE_TIMEOUT", newSViv(CURLOPT_FTP_RESPONSE_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_SKIP_PASV_IP)
    hv_stores(the_hv, "CURLOPT_FTP_SKIP_PASV_IP", newSViv(CURLOPT_FTP_SKIP_PASV_IP));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_SSL)
    hv_stores(the_hv, "CURLOPT_FTP_SSL", newSViv(CURLOPT_FTP_SSL));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_SSL_CCC)
    hv_stores(the_hv, "CURLOPT_FTP_SSL_CCC", newSViv(CURLOPT_FTP_SSL_CCC));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_USE_EPRT)
    hv_stores(the_hv, "CURLOPT_FTP_USE_EPRT", newSViv(CURLOPT_FTP_USE_EPRT));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_USE_EPSV)
    hv_stores(the_hv, "CURLOPT_FTP_USE_EPSV", newSViv(CURLOPT_FTP_USE_EPSV));
#endif
#if LIBCURL_HAS(CURLOPT_FTP_USE_PRET)
    hv_stores(the_hv, "CURLOPT_FTP_USE_PRET", newSViv(CURLOPT_FTP_USE_PRET));
#endif
#if LIBCURL_HAS(CURLOPT_GSSAPI_DELEGATION)
    hv_stores(the_hv, "CURLOPT_GSSAPI_DELEGATION", newSViv(CURLOPT_GSSAPI_DELEGATION));
#endif
#if LIBCURL_HAS(CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS", newSViv(CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_HAPROXYPROTOCOL)
    hv_stores(the_hv, "CURLOPT_HAPROXYPROTOCOL", newSViv(CURLOPT_HAPROXYPROTOCOL));
#endif
#if LIBCURL_HAS(CURLOPT_HAPROXY_CLIENT_IP)
    hv_stores(the_hv, "CURLOPT_HAPROXY_CLIENT_IP", newSViv(CURLOPT_HAPROXY_CLIENT_IP));
#endif
#if LIBCURL_HAS(CURLOPT_HEADER)
    hv_stores(the_hv, "CURLOPT_HEADER", newSViv(CURLOPT_HEADER));
#endif
#if LIBCURL_HAS(CURLOPT_HEADERDATA)
    hv_stores(the_hv, "CURLOPT_HEADERDATA", newSViv(CURLOPT_HEADERDATA));
#endif
#if LIBCURL_HAS(CURLOPT_HEADERFUNCTION)
    hv_stores(the_hv, "CURLOPT_HEADERFUNCTION", newSViv(CURLOPT_HEADERFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_HEADEROPT)
    hv_stores(the_hv, "CURLOPT_HEADEROPT", newSViv(CURLOPT_HEADEROPT));
#endif
#if LIBCURL_HAS(CURLOPT_HSTS)
    hv_stores(the_hv, "CURLOPT_HSTS", newSViv(CURLOPT_HSTS));
#endif
#if LIBCURL_HAS(CURLOPT_HSTSREADDATA)
    hv_stores(the_hv, "CURLOPT_HSTSREADDATA", newSViv(CURLOPT_HSTSREADDATA));
#endif
#if LIBCURL_HAS(CURLOPT_HSTSREADFUNCTION)
    hv_stores(the_hv, "CURLOPT_HSTSREADFUNCTION", newSViv(CURLOPT_HSTSREADFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_HSTSWRITEDATA)
    hv_stores(the_hv, "CURLOPT_HSTSWRITEDATA", newSViv(CURLOPT_HSTSWRITEDATA));
#endif
#if LIBCURL_HAS(CURLOPT_HSTSWRITEFUNCTION)
    hv_stores(the_hv, "CURLOPT_HSTSWRITEFUNCTION", newSViv(CURLOPT_HSTSWRITEFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_HSTS_CTRL)
    hv_stores(the_hv, "CURLOPT_HSTS_CTRL", newSViv(CURLOPT_HSTS_CTRL));
#endif
#if LIBCURL_HAS(CURLOPT_HTTP09_ALLOWED)
    hv_stores(the_hv, "CURLOPT_HTTP09_ALLOWED", newSViv(CURLOPT_HTTP09_ALLOWED));
#endif
#if LIBCURL_HAS(CURLOPT_HTTP200ALIASES)
    hv_stores(the_hv, "CURLOPT_HTTP200ALIASES", newSViv(CURLOPT_HTTP200ALIASES));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPAUTH)
    hv_stores(the_hv, "CURLOPT_HTTPAUTH", newSViv(CURLOPT_HTTPAUTH));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPGET)
    hv_stores(the_hv, "CURLOPT_HTTPGET", newSViv(CURLOPT_HTTPGET));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPHEADER)
    hv_stores(the_hv, "CURLOPT_HTTPHEADER", newSViv(CURLOPT_HTTPHEADER));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPPOST)
    hv_stores(the_hv, "CURLOPT_HTTPPOST", newSViv(CURLOPT_HTTPPOST));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPPROXYTUNNEL)
    hv_stores(the_hv, "CURLOPT_HTTPPROXYTUNNEL", newSViv(CURLOPT_HTTPPROXYTUNNEL));
#endif
#if LIBCURL_HAS(CURLOPT_HTTPREQUEST)
    hv_stores(the_hv, "CURLOPT_HTTPREQUEST", newSViv(CURLOPT_HTTPREQUEST));
#endif
#if LIBCURL_HAS(CURLOPT_HTTP_CONTENT_DECODING)
    hv_stores(the_hv, "CURLOPT_HTTP_CONTENT_DECODING", newSViv(CURLOPT_HTTP_CONTENT_DECODING));
#endif
#if LIBCURL_HAS(CURLOPT_HTTP_TRANSFER_DECODING)
    hv_stores(the_hv, "CURLOPT_HTTP_TRANSFER_DECODING", newSViv(CURLOPT_HTTP_TRANSFER_DECODING));
#endif
#if LIBCURL_HAS(CURLOPT_HTTP_VERSION)
    hv_stores(the_hv, "CURLOPT_HTTP_VERSION", newSViv(CURLOPT_HTTP_VERSION));
#endif
#if LIBCURL_HAS(CURLOPT_IGNORE_CONTENT_LENGTH)
    hv_stores(the_hv, "CURLOPT_IGNORE_CONTENT_LENGTH", newSViv(CURLOPT_IGNORE_CONTENT_LENGTH));
#endif
#if LIBCURL_HAS(CURLOPT_INFILE)
    hv_stores(the_hv, "CURLOPT_INFILE", newSViv(CURLOPT_INFILE));
#endif
#if LIBCURL_HAS(CURLOPT_INFILESIZE)
    hv_stores(the_hv, "CURLOPT_INFILESIZE", newSViv(CURLOPT_INFILESIZE));
#endif
#if LIBCURL_HAS(CURLOPT_INFILESIZE_LARGE)
    hv_stores(the_hv, "CURLOPT_INFILESIZE_LARGE", newSViv(CURLOPT_INFILESIZE_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_INTERFACE)
    hv_stores(the_hv, "CURLOPT_INTERFACE", newSViv(CURLOPT_INTERFACE));
#endif
#if LIBCURL_HAS(CURLOPT_INTERLEAVEDATA)
    hv_stores(the_hv, "CURLOPT_INTERLEAVEDATA", newSViv(CURLOPT_INTERLEAVEDATA));
#endif
#if LIBCURL_HAS(CURLOPT_INTERLEAVEFUNCTION)
    hv_stores(the_hv, "CURLOPT_INTERLEAVEFUNCTION", newSViv(CURLOPT_INTERLEAVEFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_IOCTLDATA)
    hv_stores(the_hv, "CURLOPT_IOCTLDATA", newSViv(CURLOPT_IOCTLDATA));
#endif
#if LIBCURL_HAS(CURLOPT_IOCTLFUNCTION)
    hv_stores(the_hv, "CURLOPT_IOCTLFUNCTION", newSViv(CURLOPT_IOCTLFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_IPRESOLVE)
    hv_stores(the_hv, "CURLOPT_IPRESOLVE", newSViv(CURLOPT_IPRESOLVE));
#endif
#if LIBCURL_HAS(CURLOPT_ISSUERCERT)
    hv_stores(the_hv, "CURLOPT_ISSUERCERT", newSViv(CURLOPT_ISSUERCERT));
#endif
#if LIBCURL_HAS(CURLOPT_ISSUERCERT_BLOB)
    hv_stores(the_hv, "CURLOPT_ISSUERCERT_BLOB", newSViv(CURLOPT_ISSUERCERT_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_KEEP_SENDING_ON_ERROR)
    hv_stores(the_hv, "CURLOPT_KEEP_SENDING_ON_ERROR", newSViv(CURLOPT_KEEP_SENDING_ON_ERROR));
#endif
#if LIBCURL_HAS(CURLOPT_KEYPASSWD)
    hv_stores(the_hv, "CURLOPT_KEYPASSWD", newSViv(CURLOPT_KEYPASSWD));
#endif
#if LIBCURL_HAS(CURLOPT_KRB4LEVEL)
    hv_stores(the_hv, "CURLOPT_KRB4LEVEL", newSViv(CURLOPT_KRB4LEVEL));
#endif
#if LIBCURL_HAS(CURLOPT_KRBLEVEL)
    hv_stores(the_hv, "CURLOPT_KRBLEVEL", newSViv(CURLOPT_KRBLEVEL));
#endif
#if LIBCURL_HAS(CURLOPT_LOCALPORT)
    hv_stores(the_hv, "CURLOPT_LOCALPORT", newSViv(CURLOPT_LOCALPORT));
#endif
#if LIBCURL_HAS(CURLOPT_LOCALPORTRANGE)
    hv_stores(the_hv, "CURLOPT_LOCALPORTRANGE", newSViv(CURLOPT_LOCALPORTRANGE));
#endif
#if LIBCURL_HAS(CURLOPT_LOGIN_OPTIONS)
    hv_stores(the_hv, "CURLOPT_LOGIN_OPTIONS", newSViv(CURLOPT_LOGIN_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_LOW_SPEED_LIMIT)
    hv_stores(the_hv, "CURLOPT_LOW_SPEED_LIMIT", newSViv(CURLOPT_LOW_SPEED_LIMIT));
#endif
#if LIBCURL_HAS(CURLOPT_LOW_SPEED_TIME)
    hv_stores(the_hv, "CURLOPT_LOW_SPEED_TIME", newSViv(CURLOPT_LOW_SPEED_TIME));
#endif
#if LIBCURL_HAS(CURLOPT_MAIL_AUTH)
    hv_stores(the_hv, "CURLOPT_MAIL_AUTH", newSViv(CURLOPT_MAIL_AUTH));
#endif
#if LIBCURL_HAS(CURLOPT_MAIL_FROM)
    hv_stores(the_hv, "CURLOPT_MAIL_FROM", newSViv(CURLOPT_MAIL_FROM));
#endif
#if LIBCURL_HAS(CURLOPT_MAIL_RCPT)
    hv_stores(the_hv, "CURLOPT_MAIL_RCPT", newSViv(CURLOPT_MAIL_RCPT));
#endif
#if LIBCURL_HAS(CURLOPT_MAIL_RCPT_ALLLOWFAILS)
    hv_stores(the_hv, "CURLOPT_MAIL_RCPT_ALLLOWFAILS", newSViv(CURLOPT_MAIL_RCPT_ALLLOWFAILS));
#endif
#if LIBCURL_HAS(CURLOPT_MAIL_RCPT_ALLOWFAILS)
    hv_stores(the_hv, "CURLOPT_MAIL_RCPT_ALLOWFAILS", newSViv(CURLOPT_MAIL_RCPT_ALLOWFAILS));
#endif
#if LIBCURL_HAS(CURLOPT_MAXAGE_CONN)
    hv_stores(the_hv, "CURLOPT_MAXAGE_CONN", newSViv(CURLOPT_MAXAGE_CONN));
#endif
#if LIBCURL_HAS(CURLOPT_MAXCONNECTS)
    hv_stores(the_hv, "CURLOPT_MAXCONNECTS", newSViv(CURLOPT_MAXCONNECTS));
#endif
#if LIBCURL_HAS(CURLOPT_MAXFILESIZE)
    hv_stores(the_hv, "CURLOPT_MAXFILESIZE", newSViv(CURLOPT_MAXFILESIZE));
#endif
#if LIBCURL_HAS(CURLOPT_MAXFILESIZE_LARGE)
    hv_stores(the_hv, "CURLOPT_MAXFILESIZE_LARGE", newSViv(CURLOPT_MAXFILESIZE_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_MAXLIFETIME_CONN)
    hv_stores(the_hv, "CURLOPT_MAXLIFETIME_CONN", newSViv(CURLOPT_MAXLIFETIME_CONN));
#endif
#if LIBCURL_HAS(CURLOPT_MAXREDIRS)
    hv_stores(the_hv, "CURLOPT_MAXREDIRS", newSViv(CURLOPT_MAXREDIRS));
#endif
#if LIBCURL_HAS(CURLOPT_MAX_RECV_SPEED_LARGE)
    hv_stores(the_hv, "CURLOPT_MAX_RECV_SPEED_LARGE", newSViv(CURLOPT_MAX_RECV_SPEED_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_MAX_SEND_SPEED_LARGE)
    hv_stores(the_hv, "CURLOPT_MAX_SEND_SPEED_LARGE", newSViv(CURLOPT_MAX_SEND_SPEED_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_MIMEPOST)
    hv_stores(the_hv, "CURLOPT_MIMEPOST", newSViv(CURLOPT_MIMEPOST));
#endif
#if LIBCURL_HAS(CURLOPT_MIME_OPTIONS)
    hv_stores(the_hv, "CURLOPT_MIME_OPTIONS", newSViv(CURLOPT_MIME_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_MUTE)
    hv_stores(the_hv, "CURLOPT_MUTE", newSViv(CURLOPT_MUTE));
#endif
#if LIBCURL_HAS(CURLOPT_NETRC)
    hv_stores(the_hv, "CURLOPT_NETRC", newSViv(CURLOPT_NETRC));
#endif
#if LIBCURL_HAS(CURLOPT_NETRC_FILE)
    hv_stores(the_hv, "CURLOPT_NETRC_FILE", newSViv(CURLOPT_NETRC_FILE));
#endif
#if LIBCURL_HAS(CURLOPT_NEW_DIRECTORY_PERMS)
    hv_stores(the_hv, "CURLOPT_NEW_DIRECTORY_PERMS", newSViv(CURLOPT_NEW_DIRECTORY_PERMS));
#endif
#if LIBCURL_HAS(CURLOPT_NEW_FILE_PERMS)
    hv_stores(the_hv, "CURLOPT_NEW_FILE_PERMS", newSViv(CURLOPT_NEW_FILE_PERMS));
#endif
#if LIBCURL_HAS(CURLOPT_NOBODY)
    hv_stores(the_hv, "CURLOPT_NOBODY", newSViv(CURLOPT_NOBODY));
#endif
#if LIBCURL_HAS(CURLOPT_NOPROGRESS)
    hv_stores(the_hv, "CURLOPT_NOPROGRESS", newSViv(CURLOPT_NOPROGRESS));
#endif
#if LIBCURL_HAS(CURLOPT_NOPROXY)
    hv_stores(the_hv, "CURLOPT_NOPROXY", newSViv(CURLOPT_NOPROXY));
#endif
#if LIBCURL_HAS(CURLOPT_NOSIGNAL)
    hv_stores(the_hv, "CURLOPT_NOSIGNAL", newSViv(CURLOPT_NOSIGNAL));
#endif
#if LIBCURL_HAS(CURLOPT_NOTHING)
    hv_stores(the_hv, "CURLOPT_NOTHING", newSViv(CURLOPT_NOTHING));
#endif
#if LIBCURL_HAS(CURLOPT_OPENSOCKETDATA)
    hv_stores(the_hv, "CURLOPT_OPENSOCKETDATA", newSViv(CURLOPT_OPENSOCKETDATA));
#endif
#if LIBCURL_HAS(CURLOPT_OPENSOCKETFUNCTION)
    hv_stores(the_hv, "CURLOPT_OPENSOCKETFUNCTION", newSViv(CURLOPT_OPENSOCKETFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_PASSWDDATA)
    hv_stores(the_hv, "CURLOPT_PASSWDDATA", newSViv(CURLOPT_PASSWDDATA));
#endif
#if LIBCURL_HAS(CURLOPT_PASSWDFUNCTION)
    hv_stores(the_hv, "CURLOPT_PASSWDFUNCTION", newSViv(CURLOPT_PASSWDFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_PASSWORD)
    hv_stores(the_hv, "CURLOPT_PASSWORD", newSViv(CURLOPT_PASSWORD));
#endif
#if LIBCURL_HAS(CURLOPT_PASV_HOST)
    hv_stores(the_hv, "CURLOPT_PASV_HOST", newSViv(CURLOPT_PASV_HOST));
#endif
#if LIBCURL_HAS(CURLOPT_PATH_AS_IS)
    hv_stores(the_hv, "CURLOPT_PATH_AS_IS", newSViv(CURLOPT_PATH_AS_IS));
#endif
#if LIBCURL_HAS(CURLOPT_PINNEDPUBLICKEY)
    hv_stores(the_hv, "CURLOPT_PINNEDPUBLICKEY", newSViv(CURLOPT_PINNEDPUBLICKEY));
#endif
#if LIBCURL_HAS(CURLOPT_PIPEWAIT)
    hv_stores(the_hv, "CURLOPT_PIPEWAIT", newSViv(CURLOPT_PIPEWAIT));
#endif
#if LIBCURL_HAS(CURLOPT_PORT)
    hv_stores(the_hv, "CURLOPT_PORT", newSViv(CURLOPT_PORT));
#endif
#if LIBCURL_HAS(CURLOPT_POST)
    hv_stores(the_hv, "CURLOPT_POST", newSViv(CURLOPT_POST));
#endif
#if LIBCURL_HAS(CURLOPT_POST301)
    hv_stores(the_hv, "CURLOPT_POST301", newSViv(CURLOPT_POST301));
#endif
#if LIBCURL_HAS(CURLOPT_POSTFIELDS)
    hv_stores(the_hv, "CURLOPT_POSTFIELDS", newSViv(CURLOPT_POSTFIELDS));
#endif
#if LIBCURL_HAS(CURLOPT_POSTFIELDSIZE)
    hv_stores(the_hv, "CURLOPT_POSTFIELDSIZE", newSViv(CURLOPT_POSTFIELDSIZE));
#endif
#if LIBCURL_HAS(CURLOPT_POSTFIELDSIZE_LARGE)
    hv_stores(the_hv, "CURLOPT_POSTFIELDSIZE_LARGE", newSViv(CURLOPT_POSTFIELDSIZE_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_POSTQUOTE)
    hv_stores(the_hv, "CURLOPT_POSTQUOTE", newSViv(CURLOPT_POSTQUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_POSTREDIR)
    hv_stores(the_hv, "CURLOPT_POSTREDIR", newSViv(CURLOPT_POSTREDIR));
#endif
#if LIBCURL_HAS(CURLOPT_PREQUOTE)
    hv_stores(the_hv, "CURLOPT_PREQUOTE", newSViv(CURLOPT_PREQUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_PREREQDATA)
    hv_stores(the_hv, "CURLOPT_PREREQDATA", newSViv(CURLOPT_PREREQDATA));
#endif
#if LIBCURL_HAS(CURLOPT_PREREQFUNCTION)
    hv_stores(the_hv, "CURLOPT_PREREQFUNCTION", newSViv(CURLOPT_PREREQFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_PRE_PROXY)
    hv_stores(the_hv, "CURLOPT_PRE_PROXY", newSViv(CURLOPT_PRE_PROXY));
#endif
#if LIBCURL_HAS(CURLOPT_PRIVATE)
    hv_stores(the_hv, "CURLOPT_PRIVATE", newSViv(CURLOPT_PRIVATE));
#endif
#if LIBCURL_HAS(CURLOPT_PROGRESSDATA)
    hv_stores(the_hv, "CURLOPT_PROGRESSDATA", newSViv(CURLOPT_PROGRESSDATA));
#endif
#if LIBCURL_HAS(CURLOPT_PROGRESSFUNCTION)
    hv_stores(the_hv, "CURLOPT_PROGRESSFUNCTION", newSViv(CURLOPT_PROGRESSFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_PROTOCOLS)
    hv_stores(the_hv, "CURLOPT_PROTOCOLS", newSViv(CURLOPT_PROTOCOLS));
#endif
#if LIBCURL_HAS(CURLOPT_PROTOCOLS_STR)
    hv_stores(the_hv, "CURLOPT_PROTOCOLS_STR", newSViv(CURLOPT_PROTOCOLS_STR));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY)
    hv_stores(the_hv, "CURLOPT_PROXY", newSViv(CURLOPT_PROXY));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYAUTH)
    hv_stores(the_hv, "CURLOPT_PROXYAUTH", newSViv(CURLOPT_PROXYAUTH));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYHEADER)
    hv_stores(the_hv, "CURLOPT_PROXYHEADER", newSViv(CURLOPT_PROXYHEADER));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYPASSWORD)
    hv_stores(the_hv, "CURLOPT_PROXYPASSWORD", newSViv(CURLOPT_PROXYPASSWORD));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYPORT)
    hv_stores(the_hv, "CURLOPT_PROXYPORT", newSViv(CURLOPT_PROXYPORT));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYTYPE)
    hv_stores(the_hv, "CURLOPT_PROXYTYPE", newSViv(CURLOPT_PROXYTYPE));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYUSERNAME)
    hv_stores(the_hv, "CURLOPT_PROXYUSERNAME", newSViv(CURLOPT_PROXYUSERNAME));
#endif
#if LIBCURL_HAS(CURLOPT_PROXYUSERPWD)
    hv_stores(the_hv, "CURLOPT_PROXYUSERPWD", newSViv(CURLOPT_PROXYUSERPWD));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_CAINFO)
    hv_stores(the_hv, "CURLOPT_PROXY_CAINFO", newSViv(CURLOPT_PROXY_CAINFO));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_CAINFO_BLOB)
    hv_stores(the_hv, "CURLOPT_PROXY_CAINFO_BLOB", newSViv(CURLOPT_PROXY_CAINFO_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_CAPATH)
    hv_stores(the_hv, "CURLOPT_PROXY_CAPATH", newSViv(CURLOPT_PROXY_CAPATH));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_CRLFILE)
    hv_stores(the_hv, "CURLOPT_PROXY_CRLFILE", newSViv(CURLOPT_PROXY_CRLFILE));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_ISSUERCERT)
    hv_stores(the_hv, "CURLOPT_PROXY_ISSUERCERT", newSViv(CURLOPT_PROXY_ISSUERCERT));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_ISSUERCERT_BLOB)
    hv_stores(the_hv, "CURLOPT_PROXY_ISSUERCERT_BLOB", newSViv(CURLOPT_PROXY_ISSUERCERT_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_KEYPASSWD)
    hv_stores(the_hv, "CURLOPT_PROXY_KEYPASSWD", newSViv(CURLOPT_PROXY_KEYPASSWD));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_PINNEDPUBLICKEY)
    hv_stores(the_hv, "CURLOPT_PROXY_PINNEDPUBLICKEY", newSViv(CURLOPT_PROXY_PINNEDPUBLICKEY));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SERVICE_NAME)
    hv_stores(the_hv, "CURLOPT_PROXY_SERVICE_NAME", newSViv(CURLOPT_PROXY_SERVICE_NAME));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLCERT)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLCERT", newSViv(CURLOPT_PROXY_SSLCERT));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLCERTTYPE)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLCERTTYPE", newSViv(CURLOPT_PROXY_SSLCERTTYPE));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLCERT_BLOB)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLCERT_BLOB", newSViv(CURLOPT_PROXY_SSLCERT_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLKEY)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLKEY", newSViv(CURLOPT_PROXY_SSLKEY));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLKEYTYPE)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLKEYTYPE", newSViv(CURLOPT_PROXY_SSLKEYTYPE));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLKEY_BLOB)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLKEY_BLOB", newSViv(CURLOPT_PROXY_SSLKEY_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSLVERSION)
    hv_stores(the_hv, "CURLOPT_PROXY_SSLVERSION", newSViv(CURLOPT_PROXY_SSLVERSION));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSL_CIPHER_LIST)
    hv_stores(the_hv, "CURLOPT_PROXY_SSL_CIPHER_LIST", newSViv(CURLOPT_PROXY_SSL_CIPHER_LIST));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSL_OPTIONS)
    hv_stores(the_hv, "CURLOPT_PROXY_SSL_OPTIONS", newSViv(CURLOPT_PROXY_SSL_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSL_VERIFYHOST)
    hv_stores(the_hv, "CURLOPT_PROXY_SSL_VERIFYHOST", newSViv(CURLOPT_PROXY_SSL_VERIFYHOST));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_SSL_VERIFYPEER)
    hv_stores(the_hv, "CURLOPT_PROXY_SSL_VERIFYPEER", newSViv(CURLOPT_PROXY_SSL_VERIFYPEER));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_TLS13_CIPHERS)
    hv_stores(the_hv, "CURLOPT_PROXY_TLS13_CIPHERS", newSViv(CURLOPT_PROXY_TLS13_CIPHERS));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_TLSAUTH_PASSWORD)
    hv_stores(the_hv, "CURLOPT_PROXY_TLSAUTH_PASSWORD", newSViv(CURLOPT_PROXY_TLSAUTH_PASSWORD));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_TLSAUTH_TYPE)
    hv_stores(the_hv, "CURLOPT_PROXY_TLSAUTH_TYPE", newSViv(CURLOPT_PROXY_TLSAUTH_TYPE));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_TLSAUTH_USERNAME)
    hv_stores(the_hv, "CURLOPT_PROXY_TLSAUTH_USERNAME", newSViv(CURLOPT_PROXY_TLSAUTH_USERNAME));
#endif
#if LIBCURL_HAS(CURLOPT_PROXY_TRANSFER_MODE)
    hv_stores(the_hv, "CURLOPT_PROXY_TRANSFER_MODE", newSViv(CURLOPT_PROXY_TRANSFER_MODE));
#endif
#if LIBCURL_HAS(CURLOPT_PUT)
    hv_stores(the_hv, "CURLOPT_PUT", newSViv(CURLOPT_PUT));
#endif
#if LIBCURL_HAS(CURLOPT_QUICK_EXIT)
    hv_stores(the_hv, "CURLOPT_QUICK_EXIT", newSViv(CURLOPT_QUICK_EXIT));
#endif
#if LIBCURL_HAS(CURLOPT_QUOTE)
    hv_stores(the_hv, "CURLOPT_QUOTE", newSViv(CURLOPT_QUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_RANDOM_FILE)
    hv_stores(the_hv, "CURLOPT_RANDOM_FILE", newSViv(CURLOPT_RANDOM_FILE));
#endif
#if LIBCURL_HAS(CURLOPT_RANGE)
    hv_stores(the_hv, "CURLOPT_RANGE", newSViv(CURLOPT_RANGE));
#endif
#if LIBCURL_HAS(CURLOPT_READDATA)
    hv_stores(the_hv, "CURLOPT_READDATA", newSViv(CURLOPT_READDATA));
#endif
#if LIBCURL_HAS(CURLOPT_READFUNCTION)
    hv_stores(the_hv, "CURLOPT_READFUNCTION", newSViv(CURLOPT_READFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_REDIR_PROTOCOLS)
    hv_stores(the_hv, "CURLOPT_REDIR_PROTOCOLS", newSViv(CURLOPT_REDIR_PROTOCOLS));
#endif
#if LIBCURL_HAS(CURLOPT_REDIR_PROTOCOLS_STR)
    hv_stores(the_hv, "CURLOPT_REDIR_PROTOCOLS_STR", newSViv(CURLOPT_REDIR_PROTOCOLS_STR));
#endif
#if LIBCURL_HAS(CURLOPT_REFERER)
    hv_stores(the_hv, "CURLOPT_REFERER", newSViv(CURLOPT_REFERER));
#endif
#if LIBCURL_HAS(CURLOPT_REQUEST_TARGET)
    hv_stores(the_hv, "CURLOPT_REQUEST_TARGET", newSViv(CURLOPT_REQUEST_TARGET));
#endif
#if LIBCURL_HAS(CURLOPT_RESOLVE)
    hv_stores(the_hv, "CURLOPT_RESOLVE", newSViv(CURLOPT_RESOLVE));
#endif
#if LIBCURL_HAS(CURLOPT_RESOLVER_START_DATA)
    hv_stores(the_hv, "CURLOPT_RESOLVER_START_DATA", newSViv(CURLOPT_RESOLVER_START_DATA));
#endif
#if LIBCURL_HAS(CURLOPT_RESOLVER_START_FUNCTION)
    hv_stores(the_hv, "CURLOPT_RESOLVER_START_FUNCTION", newSViv(CURLOPT_RESOLVER_START_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_RESUME_FROM)
    hv_stores(the_hv, "CURLOPT_RESUME_FROM", newSViv(CURLOPT_RESUME_FROM));
#endif
#if LIBCURL_HAS(CURLOPT_RESUME_FROM_LARGE)
    hv_stores(the_hv, "CURLOPT_RESUME_FROM_LARGE", newSViv(CURLOPT_RESUME_FROM_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_RTSPHEADER)
    hv_stores(the_hv, "CURLOPT_RTSPHEADER", newSViv(CURLOPT_RTSPHEADER));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_CLIENT_CSEQ)
    hv_stores(the_hv, "CURLOPT_RTSP_CLIENT_CSEQ", newSViv(CURLOPT_RTSP_CLIENT_CSEQ));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_REQUEST)
    hv_stores(the_hv, "CURLOPT_RTSP_REQUEST", newSViv(CURLOPT_RTSP_REQUEST));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_SERVER_CSEQ)
    hv_stores(the_hv, "CURLOPT_RTSP_SERVER_CSEQ", newSViv(CURLOPT_RTSP_SERVER_CSEQ));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_SESSION_ID)
    hv_stores(the_hv, "CURLOPT_RTSP_SESSION_ID", newSViv(CURLOPT_RTSP_SESSION_ID));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_STREAM_URI)
    hv_stores(the_hv, "CURLOPT_RTSP_STREAM_URI", newSViv(CURLOPT_RTSP_STREAM_URI));
#endif
#if LIBCURL_HAS(CURLOPT_RTSP_TRANSPORT)
    hv_stores(the_hv, "CURLOPT_RTSP_TRANSPORT", newSViv(CURLOPT_RTSP_TRANSPORT));
#endif
#if LIBCURL_HAS(CURLOPT_SASL_AUTHZID)
    hv_stores(the_hv, "CURLOPT_SASL_AUTHZID", newSViv(CURLOPT_SASL_AUTHZID));
#endif
#if LIBCURL_HAS(CURLOPT_SASL_IR)
    hv_stores(the_hv, "CURLOPT_SASL_IR", newSViv(CURLOPT_SASL_IR));
#endif
#if LIBCURL_HAS(CURLOPT_SEEKDATA)
    hv_stores(the_hv, "CURLOPT_SEEKDATA", newSViv(CURLOPT_SEEKDATA));
#endif
#if LIBCURL_HAS(CURLOPT_SEEKFUNCTION)
    hv_stores(the_hv, "CURLOPT_SEEKFUNCTION", newSViv(CURLOPT_SEEKFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_SERVER_RESPONSE_TIMEOUT)
    hv_stores(the_hv, "CURLOPT_SERVER_RESPONSE_TIMEOUT", newSViv(CURLOPT_SERVER_RESPONSE_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_SERVER_RESPONSE_TIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_SERVER_RESPONSE_TIMEOUT_MS", newSViv(CURLOPT_SERVER_RESPONSE_TIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_SERVICE_NAME)
    hv_stores(the_hv, "CURLOPT_SERVICE_NAME", newSViv(CURLOPT_SERVICE_NAME));
#endif
#if LIBCURL_HAS(CURLOPT_SHARE)
    hv_stores(the_hv, "CURLOPT_SHARE", newSViv(CURLOPT_SHARE));
#endif
#if LIBCURL_HAS(CURLOPT_SOCKOPTDATA)
    hv_stores(the_hv, "CURLOPT_SOCKOPTDATA", newSViv(CURLOPT_SOCKOPTDATA));
#endif
#if LIBCURL_HAS(CURLOPT_SOCKOPTFUNCTION)
    hv_stores(the_hv, "CURLOPT_SOCKOPTFUNCTION", newSViv(CURLOPT_SOCKOPTFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_SOCKS5_AUTH)
    hv_stores(the_hv, "CURLOPT_SOCKS5_AUTH", newSViv(CURLOPT_SOCKS5_AUTH));
#endif
#if LIBCURL_HAS(CURLOPT_SOCKS5_GSSAPI_NEC)
    hv_stores(the_hv, "CURLOPT_SOCKS5_GSSAPI_NEC", newSViv(CURLOPT_SOCKS5_GSSAPI_NEC));
#endif
#if LIBCURL_HAS(CURLOPT_SOCKS5_GSSAPI_SERVICE)
    hv_stores(the_hv, "CURLOPT_SOCKS5_GSSAPI_SERVICE", newSViv(CURLOPT_SOCKS5_GSSAPI_SERVICE));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_HOST)
    hv_stores(the_hv, "CURLOPT_SOURCE_HOST", newSViv(CURLOPT_SOURCE_HOST));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_PATH)
    hv_stores(the_hv, "CURLOPT_SOURCE_PATH", newSViv(CURLOPT_SOURCE_PATH));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_PORT)
    hv_stores(the_hv, "CURLOPT_SOURCE_PORT", newSViv(CURLOPT_SOURCE_PORT));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_POSTQUOTE)
    hv_stores(the_hv, "CURLOPT_SOURCE_POSTQUOTE", newSViv(CURLOPT_SOURCE_POSTQUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_PREQUOTE)
    hv_stores(the_hv, "CURLOPT_SOURCE_PREQUOTE", newSViv(CURLOPT_SOURCE_PREQUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_QUOTE)
    hv_stores(the_hv, "CURLOPT_SOURCE_QUOTE", newSViv(CURLOPT_SOURCE_QUOTE));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_URL)
    hv_stores(the_hv, "CURLOPT_SOURCE_URL", newSViv(CURLOPT_SOURCE_URL));
#endif
#if LIBCURL_HAS(CURLOPT_SOURCE_USERPWD)
    hv_stores(the_hv, "CURLOPT_SOURCE_USERPWD", newSViv(CURLOPT_SOURCE_USERPWD));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_AUTH_TYPES)
    hv_stores(the_hv, "CURLOPT_SSH_AUTH_TYPES", newSViv(CURLOPT_SSH_AUTH_TYPES));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_COMPRESSION)
    hv_stores(the_hv, "CURLOPT_SSH_COMPRESSION", newSViv(CURLOPT_SSH_COMPRESSION));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_HOSTKEYDATA)
    hv_stores(the_hv, "CURLOPT_SSH_HOSTKEYDATA", newSViv(CURLOPT_SSH_HOSTKEYDATA));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_HOSTKEYFUNCTION)
    hv_stores(the_hv, "CURLOPT_SSH_HOSTKEYFUNCTION", newSViv(CURLOPT_SSH_HOSTKEYFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_HOST_PUBLIC_KEY_MD5)
    hv_stores(the_hv, "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5", newSViv(CURLOPT_SSH_HOST_PUBLIC_KEY_MD5));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256)
    hv_stores(the_hv, "CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256", newSViv(CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_KEYDATA)
    hv_stores(the_hv, "CURLOPT_SSH_KEYDATA", newSViv(CURLOPT_SSH_KEYDATA));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_KEYFUNCTION)
    hv_stores(the_hv, "CURLOPT_SSH_KEYFUNCTION", newSViv(CURLOPT_SSH_KEYFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_KNOWNHOSTS)
    hv_stores(the_hv, "CURLOPT_SSH_KNOWNHOSTS", newSViv(CURLOPT_SSH_KNOWNHOSTS));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_PRIVATE_KEYFILE)
    hv_stores(the_hv, "CURLOPT_SSH_PRIVATE_KEYFILE", newSViv(CURLOPT_SSH_PRIVATE_KEYFILE));
#endif
#if LIBCURL_HAS(CURLOPT_SSH_PUBLIC_KEYFILE)
    hv_stores(the_hv, "CURLOPT_SSH_PUBLIC_KEYFILE", newSViv(CURLOPT_SSH_PUBLIC_KEYFILE));
#endif
#if LIBCURL_HAS(CURLOPT_SSLCERT)
    hv_stores(the_hv, "CURLOPT_SSLCERT", newSViv(CURLOPT_SSLCERT));
#endif
#if LIBCURL_HAS(CURLOPT_SSLCERTPASSWD)
    hv_stores(the_hv, "CURLOPT_SSLCERTPASSWD", newSViv(CURLOPT_SSLCERTPASSWD));
#endif
#if LIBCURL_HAS(CURLOPT_SSLCERTTYPE)
    hv_stores(the_hv, "CURLOPT_SSLCERTTYPE", newSViv(CURLOPT_SSLCERTTYPE));
#endif
#if LIBCURL_HAS(CURLOPT_SSLCERT_BLOB)
    hv_stores(the_hv, "CURLOPT_SSLCERT_BLOB", newSViv(CURLOPT_SSLCERT_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_SSLENGINE)
    hv_stores(the_hv, "CURLOPT_SSLENGINE", newSViv(CURLOPT_SSLENGINE));
#endif
#if LIBCURL_HAS(CURLOPT_SSLENGINE_DEFAULT)
    hv_stores(the_hv, "CURLOPT_SSLENGINE_DEFAULT", newSViv(CURLOPT_SSLENGINE_DEFAULT));
#endif
#if LIBCURL_HAS(CURLOPT_SSLKEY)
    hv_stores(the_hv, "CURLOPT_SSLKEY", newSViv(CURLOPT_SSLKEY));
#endif
#if LIBCURL_HAS(CURLOPT_SSLKEYPASSWD)
    hv_stores(the_hv, "CURLOPT_SSLKEYPASSWD", newSViv(CURLOPT_SSLKEYPASSWD));
#endif
#if LIBCURL_HAS(CURLOPT_SSLKEYTYPE)
    hv_stores(the_hv, "CURLOPT_SSLKEYTYPE", newSViv(CURLOPT_SSLKEYTYPE));
#endif
#if LIBCURL_HAS(CURLOPT_SSLKEY_BLOB)
    hv_stores(the_hv, "CURLOPT_SSLKEY_BLOB", newSViv(CURLOPT_SSLKEY_BLOB));
#endif
#if LIBCURL_HAS(CURLOPT_SSLVERSION)
    hv_stores(the_hv, "CURLOPT_SSLVERSION", newSViv(CURLOPT_SSLVERSION));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_CIPHER_LIST)
    hv_stores(the_hv, "CURLOPT_SSL_CIPHER_LIST", newSViv(CURLOPT_SSL_CIPHER_LIST));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_CTX_DATA)
    hv_stores(the_hv, "CURLOPT_SSL_CTX_DATA", newSViv(CURLOPT_SSL_CTX_DATA));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_CTX_FUNCTION)
    hv_stores(the_hv, "CURLOPT_SSL_CTX_FUNCTION", newSViv(CURLOPT_SSL_CTX_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_EC_CURVES)
    hv_stores(the_hv, "CURLOPT_SSL_EC_CURVES", newSViv(CURLOPT_SSL_EC_CURVES));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_ENABLE_ALPN)
    hv_stores(the_hv, "CURLOPT_SSL_ENABLE_ALPN", newSViv(CURLOPT_SSL_ENABLE_ALPN));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_ENABLE_NPN)
    hv_stores(the_hv, "CURLOPT_SSL_ENABLE_NPN", newSViv(CURLOPT_SSL_ENABLE_NPN));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_FALSESTART)
    hv_stores(the_hv, "CURLOPT_SSL_FALSESTART", newSViv(CURLOPT_SSL_FALSESTART));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_OPTIONS)
    hv_stores(the_hv, "CURLOPT_SSL_OPTIONS", newSViv(CURLOPT_SSL_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_SESSIONID_CACHE)
    hv_stores(the_hv, "CURLOPT_SSL_SESSIONID_CACHE", newSViv(CURLOPT_SSL_SESSIONID_CACHE));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_SIGNATURE_ALGORITHMS)
    hv_stores(the_hv, "CURLOPT_SSL_SIGNATURE_ALGORITHMS", newSViv(CURLOPT_SSL_SIGNATURE_ALGORITHMS));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_VERIFYHOST)
    hv_stores(the_hv, "CURLOPT_SSL_VERIFYHOST", newSViv(CURLOPT_SSL_VERIFYHOST));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_VERIFYPEER)
    hv_stores(the_hv, "CURLOPT_SSL_VERIFYPEER", newSViv(CURLOPT_SSL_VERIFYPEER));
#endif
#if LIBCURL_HAS(CURLOPT_SSL_VERIFYSTATUS)
    hv_stores(the_hv, "CURLOPT_SSL_VERIFYSTATUS", newSViv(CURLOPT_SSL_VERIFYSTATUS));
#endif
#if LIBCURL_HAS(CURLOPT_STDERR)
    hv_stores(the_hv, "CURLOPT_STDERR", newSViv(CURLOPT_STDERR));
#endif
#if LIBCURL_HAS(CURLOPT_STREAM_DEPENDS)
    hv_stores(the_hv, "CURLOPT_STREAM_DEPENDS", newSViv(CURLOPT_STREAM_DEPENDS));
#endif
#if LIBCURL_HAS(CURLOPT_STREAM_DEPENDS_E)
    hv_stores(the_hv, "CURLOPT_STREAM_DEPENDS_E", newSViv(CURLOPT_STREAM_DEPENDS_E));
#endif
#if LIBCURL_HAS(CURLOPT_STREAM_WEIGHT)
    hv_stores(the_hv, "CURLOPT_STREAM_WEIGHT", newSViv(CURLOPT_STREAM_WEIGHT));
#endif
#if LIBCURL_HAS(CURLOPT_SUPPRESS_CONNECT_HEADERS)
    hv_stores(the_hv, "CURLOPT_SUPPRESS_CONNECT_HEADERS", newSViv(CURLOPT_SUPPRESS_CONNECT_HEADERS));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_FASTOPEN)
    hv_stores(the_hv, "CURLOPT_TCP_FASTOPEN", newSViv(CURLOPT_TCP_FASTOPEN));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_KEEPALIVE)
    hv_stores(the_hv, "CURLOPT_TCP_KEEPALIVE", newSViv(CURLOPT_TCP_KEEPALIVE));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_KEEPCNT)
    hv_stores(the_hv, "CURLOPT_TCP_KEEPCNT", newSViv(CURLOPT_TCP_KEEPCNT));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_KEEPIDLE)
    hv_stores(the_hv, "CURLOPT_TCP_KEEPIDLE", newSViv(CURLOPT_TCP_KEEPIDLE));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_KEEPINTVL)
    hv_stores(the_hv, "CURLOPT_TCP_KEEPINTVL", newSViv(CURLOPT_TCP_KEEPINTVL));
#endif
#if LIBCURL_HAS(CURLOPT_TCP_NODELAY)
    hv_stores(the_hv, "CURLOPT_TCP_NODELAY", newSViv(CURLOPT_TCP_NODELAY));
#endif
#if LIBCURL_HAS(CURLOPT_TELNETOPTIONS)
    hv_stores(the_hv, "CURLOPT_TELNETOPTIONS", newSViv(CURLOPT_TELNETOPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_TFTP_BLKSIZE)
    hv_stores(the_hv, "CURLOPT_TFTP_BLKSIZE", newSViv(CURLOPT_TFTP_BLKSIZE));
#endif
#if LIBCURL_HAS(CURLOPT_TFTP_NO_OPTIONS)
    hv_stores(the_hv, "CURLOPT_TFTP_NO_OPTIONS", newSViv(CURLOPT_TFTP_NO_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_TIMECONDITION)
    hv_stores(the_hv, "CURLOPT_TIMECONDITION", newSViv(CURLOPT_TIMECONDITION));
#endif
#if LIBCURL_HAS(CURLOPT_TIMEOUT)
    hv_stores(the_hv, "CURLOPT_TIMEOUT", newSViv(CURLOPT_TIMEOUT));
#endif
#if LIBCURL_HAS(CURLOPT_TIMEOUT_MS)
    hv_stores(the_hv, "CURLOPT_TIMEOUT_MS", newSViv(CURLOPT_TIMEOUT_MS));
#endif
#if LIBCURL_HAS(CURLOPT_TIMEVALUE)
    hv_stores(the_hv, "CURLOPT_TIMEVALUE", newSViv(CURLOPT_TIMEVALUE));
#endif
#if LIBCURL_HAS(CURLOPT_TIMEVALUE_LARGE)
    hv_stores(the_hv, "CURLOPT_TIMEVALUE_LARGE", newSViv(CURLOPT_TIMEVALUE_LARGE));
#endif
#if LIBCURL_HAS(CURLOPT_TLS13_CIPHERS)
    hv_stores(the_hv, "CURLOPT_TLS13_CIPHERS", newSViv(CURLOPT_TLS13_CIPHERS));
#endif
#if LIBCURL_HAS(CURLOPT_TLSAUTH_PASSWORD)
    hv_stores(the_hv, "CURLOPT_TLSAUTH_PASSWORD", newSViv(CURLOPT_TLSAUTH_PASSWORD));
#endif
#if LIBCURL_HAS(CURLOPT_TLSAUTH_TYPE)
    hv_stores(the_hv, "CURLOPT_TLSAUTH_TYPE", newSViv(CURLOPT_TLSAUTH_TYPE));
#endif
#if LIBCURL_HAS(CURLOPT_TLSAUTH_USERNAME)
    hv_stores(the_hv, "CURLOPT_TLSAUTH_USERNAME", newSViv(CURLOPT_TLSAUTH_USERNAME));
#endif
#if LIBCURL_HAS(CURLOPT_TRAILERDATA)
    hv_stores(the_hv, "CURLOPT_TRAILERDATA", newSViv(CURLOPT_TRAILERDATA));
#endif
#if LIBCURL_HAS(CURLOPT_TRAILERFUNCTION)
    hv_stores(the_hv, "CURLOPT_TRAILERFUNCTION", newSViv(CURLOPT_TRAILERFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_TRANSFERTEXT)
    hv_stores(the_hv, "CURLOPT_TRANSFERTEXT", newSViv(CURLOPT_TRANSFERTEXT));
#endif
#if LIBCURL_HAS(CURLOPT_TRANSFER_ENCODING)
    hv_stores(the_hv, "CURLOPT_TRANSFER_ENCODING", newSViv(CURLOPT_TRANSFER_ENCODING));
#endif
#if LIBCURL_HAS(CURLOPT_UNIX_SOCKET_PATH)
    hv_stores(the_hv, "CURLOPT_UNIX_SOCKET_PATH", newSViv(CURLOPT_UNIX_SOCKET_PATH));
#endif
#if LIBCURL_HAS(CURLOPT_UNRESTRICTED_AUTH)
    hv_stores(the_hv, "CURLOPT_UNRESTRICTED_AUTH", newSViv(CURLOPT_UNRESTRICTED_AUTH));
#endif
#if LIBCURL_HAS(CURLOPT_UPKEEP_INTERVAL_MS)
    hv_stores(the_hv, "CURLOPT_UPKEEP_INTERVAL_MS", newSViv(CURLOPT_UPKEEP_INTERVAL_MS));
#endif
#if LIBCURL_HAS(CURLOPT_UPLOAD)
    hv_stores(the_hv, "CURLOPT_UPLOAD", newSViv(CURLOPT_UPLOAD));
#endif
#if LIBCURL_HAS(CURLOPT_UPLOAD_BUFFERSIZE)
    hv_stores(the_hv, "CURLOPT_UPLOAD_BUFFERSIZE", newSViv(CURLOPT_UPLOAD_BUFFERSIZE));
#endif
#if LIBCURL_HAS(CURLOPT_UPLOAD_FLAGS)
    hv_stores(the_hv, "CURLOPT_UPLOAD_FLAGS", newSViv(CURLOPT_UPLOAD_FLAGS));
#endif
#if LIBCURL_HAS(CURLOPT_URL)
    hv_stores(the_hv, "CURLOPT_URL", newSViv(CURLOPT_URL));
#endif
#if LIBCURL_HAS(CURLOPT_USERAGENT)
    hv_stores(the_hv, "CURLOPT_USERAGENT", newSViv(CURLOPT_USERAGENT));
#endif
#if LIBCURL_HAS(CURLOPT_USERNAME)
    hv_stores(the_hv, "CURLOPT_USERNAME", newSViv(CURLOPT_USERNAME));
#endif
#if LIBCURL_HAS(CURLOPT_USERPWD)
    hv_stores(the_hv, "CURLOPT_USERPWD", newSViv(CURLOPT_USERPWD));
#endif
#if LIBCURL_HAS(CURLOPT_USE_SSL)
    hv_stores(the_hv, "CURLOPT_USE_SSL", newSViv(CURLOPT_USE_SSL));
#endif
#if LIBCURL_HAS(CURLOPT_VERBOSE)
    hv_stores(the_hv, "CURLOPT_VERBOSE", newSViv(CURLOPT_VERBOSE));
#endif
#if LIBCURL_HAS(CURLOPT_WILDCARDMATCH)
    hv_stores(the_hv, "CURLOPT_WILDCARDMATCH", newSViv(CURLOPT_WILDCARDMATCH));
#endif
#if LIBCURL_HAS(CURLOPT_WRITEDATA)
    hv_stores(the_hv, "CURLOPT_WRITEDATA", newSViv(CURLOPT_WRITEDATA));
#endif
#if LIBCURL_HAS(CURLOPT_WRITEFUNCTION)
    hv_stores(the_hv, "CURLOPT_WRITEFUNCTION", newSViv(CURLOPT_WRITEFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_WRITEHEADER)
    hv_stores(the_hv, "CURLOPT_WRITEHEADER", newSViv(CURLOPT_WRITEHEADER));
#endif
#if LIBCURL_HAS(CURLOPT_WRITEINFO)
    hv_stores(the_hv, "CURLOPT_WRITEINFO", newSViv(CURLOPT_WRITEINFO));
#endif
#if LIBCURL_HAS(CURLOPT_WS_OPTIONS)
    hv_stores(the_hv, "CURLOPT_WS_OPTIONS", newSViv(CURLOPT_WS_OPTIONS));
#endif
#if LIBCURL_HAS(CURLOPT_XFERINFODATA)
    hv_stores(the_hv, "CURLOPT_XFERINFODATA", newSViv(CURLOPT_XFERINFODATA));
#endif
#if LIBCURL_HAS(CURLOPT_XFERINFOFUNCTION)
    hv_stores(the_hv, "CURLOPT_XFERINFOFUNCTION", newSViv(CURLOPT_XFERINFOFUNCTION));
#endif
#if LIBCURL_HAS(CURLOPT_XOAUTH2_BEARER)
    hv_stores(the_hv, "CURLOPT_XOAUTH2_BEARER", newSViv(CURLOPT_XOAUTH2_BEARER));
#endif
#if LIBCURL_HAS(CURLOT_BLOB)
    hv_stores(the_hv, "CURLOT_BLOB", newSViv(CURLOT_BLOB));
#endif
#if LIBCURL_HAS(CURLOT_CBPTR)
    hv_stores(the_hv, "CURLOT_CBPTR", newSViv(CURLOT_CBPTR));
#endif
#if LIBCURL_HAS(CURLOT_FLAG_ALIAS)
    hv_stores(the_hv, "CURLOT_FLAG_ALIAS", newSViv(CURLOT_FLAG_ALIAS));
#endif
#if LIBCURL_HAS(CURLOT_FUNCTION)
    hv_stores(the_hv, "CURLOT_FUNCTION", newSViv(CURLOT_FUNCTION));
#endif
#if LIBCURL_HAS(CURLOT_LONG)
    hv_stores(the_hv, "CURLOT_LONG", newSViv(CURLOT_LONG));
#endif
#if LIBCURL_HAS(CURLOT_OBJECT)
    hv_stores(the_hv, "CURLOT_OBJECT", newSViv(CURLOT_OBJECT));
#endif
#if LIBCURL_HAS(CURLOT_OFF_T)
    hv_stores(the_hv, "CURLOT_OFF_T", newSViv(CURLOT_OFF_T));
#endif
#if LIBCURL_HAS(CURLOT_SLIST)
    hv_stores(the_hv, "CURLOT_SLIST", newSViv(CURLOT_SLIST));
#endif
#if LIBCURL_HAS(CURLOT_STRING)
    hv_stores(the_hv, "CURLOT_STRING", newSViv(CURLOT_STRING));
#endif
#if LIBCURL_HAS(CURLOT_VALUES)
    hv_stores(the_hv, "CURLOT_VALUES", newSViv(CURLOT_VALUES));
#endif
#if LIBCURL_HAS(CURLPAUSE_ALL)
    hv_stores(the_hv, "CURLPAUSE_ALL", newSViv(CURLPAUSE_ALL));
#endif
#if LIBCURL_HAS(CURLPAUSE_CONT)
    hv_stores(the_hv, "CURLPAUSE_CONT", newSViv(CURLPAUSE_CONT));
#endif
#if LIBCURL_HAS(CURLPAUSE_RECV)
    hv_stores(the_hv, "CURLPAUSE_RECV", newSViv(CURLPAUSE_RECV));
#endif
#if LIBCURL_HAS(CURLPAUSE_RECV_CONT)
    hv_stores(the_hv, "CURLPAUSE_RECV_CONT", newSViv(CURLPAUSE_RECV_CONT));
#endif
#if LIBCURL_HAS(CURLPAUSE_SEND)
    hv_stores(the_hv, "CURLPAUSE_SEND", newSViv(CURLPAUSE_SEND));
#endif
#if LIBCURL_HAS(CURLPAUSE_SEND_CONT)
    hv_stores(the_hv, "CURLPAUSE_SEND_CONT", newSViv(CURLPAUSE_SEND_CONT));
#endif
#if LIBCURL_HAS(CURLPIPE_HTTP1)
    hv_stores(the_hv, "CURLPIPE_HTTP1", newSViv(CURLPIPE_HTTP1));
#endif
#if LIBCURL_HAS(CURLPIPE_MULTIPLEX)
    hv_stores(the_hv, "CURLPIPE_MULTIPLEX", newSViv(CURLPIPE_MULTIPLEX));
#endif
#if LIBCURL_HAS(CURLPIPE_NOTHING)
    hv_stores(the_hv, "CURLPIPE_NOTHING", newSViv(CURLPIPE_NOTHING));
#endif
#if LIBCURL_HAS(CURLPROTO_ALL)
    hv_stores(the_hv, "CURLPROTO_ALL", newSViv(CURLPROTO_ALL));
#endif
#if LIBCURL_HAS(CURLPROTO_DICT)
    hv_stores(the_hv, "CURLPROTO_DICT", newSViv(CURLPROTO_DICT));
#endif
#if LIBCURL_HAS(CURLPROTO_FILE)
    hv_stores(the_hv, "CURLPROTO_FILE", newSViv(CURLPROTO_FILE));
#endif
#if LIBCURL_HAS(CURLPROTO_FTP)
    hv_stores(the_hv, "CURLPROTO_FTP", newSViv(CURLPROTO_FTP));
#endif
#if LIBCURL_HAS(CURLPROTO_FTPS)
    hv_stores(the_hv, "CURLPROTO_FTPS", newSViv(CURLPROTO_FTPS));
#endif
#if LIBCURL_HAS(CURLPROTO_GOPHER)
    hv_stores(the_hv, "CURLPROTO_GOPHER", newSViv(CURLPROTO_GOPHER));
#endif
#if LIBCURL_HAS(CURLPROTO_GOPHERS)
    hv_stores(the_hv, "CURLPROTO_GOPHERS", newSViv(CURLPROTO_GOPHERS));
#endif
#if LIBCURL_HAS(CURLPROTO_HTTP)
    hv_stores(the_hv, "CURLPROTO_HTTP", newSViv(CURLPROTO_HTTP));
#endif
#if LIBCURL_HAS(CURLPROTO_HTTPS)
    hv_stores(the_hv, "CURLPROTO_HTTPS", newSViv(CURLPROTO_HTTPS));
#endif
#if LIBCURL_HAS(CURLPROTO_IMAP)
    hv_stores(the_hv, "CURLPROTO_IMAP", newSViv(CURLPROTO_IMAP));
#endif
#if LIBCURL_HAS(CURLPROTO_IMAPS)
    hv_stores(the_hv, "CURLPROTO_IMAPS", newSViv(CURLPROTO_IMAPS));
#endif
#if LIBCURL_HAS(CURLPROTO_LDAP)
    hv_stores(the_hv, "CURLPROTO_LDAP", newSViv(CURLPROTO_LDAP));
#endif
#if LIBCURL_HAS(CURLPROTO_LDAPS)
    hv_stores(the_hv, "CURLPROTO_LDAPS", newSViv(CURLPROTO_LDAPS));
#endif
#if LIBCURL_HAS(CURLPROTO_MQTT)
    hv_stores(the_hv, "CURLPROTO_MQTT", newSViv(CURLPROTO_MQTT));
#endif
#if LIBCURL_HAS(CURLPROTO_POP3)
    hv_stores(the_hv, "CURLPROTO_POP3", newSViv(CURLPROTO_POP3));
#endif
#if LIBCURL_HAS(CURLPROTO_POP3S)
    hv_stores(the_hv, "CURLPROTO_POP3S", newSViv(CURLPROTO_POP3S));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMP)
    hv_stores(the_hv, "CURLPROTO_RTMP", newSViv(CURLPROTO_RTMP));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMPE)
    hv_stores(the_hv, "CURLPROTO_RTMPE", newSViv(CURLPROTO_RTMPE));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMPS)
    hv_stores(the_hv, "CURLPROTO_RTMPS", newSViv(CURLPROTO_RTMPS));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMPT)
    hv_stores(the_hv, "CURLPROTO_RTMPT", newSViv(CURLPROTO_RTMPT));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMPTE)
    hv_stores(the_hv, "CURLPROTO_RTMPTE", newSViv(CURLPROTO_RTMPTE));
#endif
#if LIBCURL_HAS(CURLPROTO_RTMPTS)
    hv_stores(the_hv, "CURLPROTO_RTMPTS", newSViv(CURLPROTO_RTMPTS));
#endif
#if LIBCURL_HAS(CURLPROTO_RTSP)
    hv_stores(the_hv, "CURLPROTO_RTSP", newSViv(CURLPROTO_RTSP));
#endif
#if LIBCURL_HAS(CURLPROTO_SCP)
    hv_stores(the_hv, "CURLPROTO_SCP", newSViv(CURLPROTO_SCP));
#endif
#if LIBCURL_HAS(CURLPROTO_SFTP)
    hv_stores(the_hv, "CURLPROTO_SFTP", newSViv(CURLPROTO_SFTP));
#endif
#if LIBCURL_HAS(CURLPROTO_SMB)
    hv_stores(the_hv, "CURLPROTO_SMB", newSViv(CURLPROTO_SMB));
#endif
#if LIBCURL_HAS(CURLPROTO_SMBS)
    hv_stores(the_hv, "CURLPROTO_SMBS", newSViv(CURLPROTO_SMBS));
#endif
#if LIBCURL_HAS(CURLPROTO_SMTP)
    hv_stores(the_hv, "CURLPROTO_SMTP", newSViv(CURLPROTO_SMTP));
#endif
#if LIBCURL_HAS(CURLPROTO_SMTPS)
    hv_stores(the_hv, "CURLPROTO_SMTPS", newSViv(CURLPROTO_SMTPS));
#endif
#if LIBCURL_HAS(CURLPROTO_TELNET)
    hv_stores(the_hv, "CURLPROTO_TELNET", newSViv(CURLPROTO_TELNET));
#endif
#if LIBCURL_HAS(CURLPROTO_TFTP)
    hv_stores(the_hv, "CURLPROTO_TFTP", newSViv(CURLPROTO_TFTP));
#endif
#if LIBCURL_HAS(CURLPROXY_HTTP)
    hv_stores(the_hv, "CURLPROXY_HTTP", newSViv(CURLPROXY_HTTP));
#endif
#if LIBCURL_HAS(CURLPROXY_HTTPS)
    hv_stores(the_hv, "CURLPROXY_HTTPS", newSViv(CURLPROXY_HTTPS));
#endif
#if LIBCURL_HAS(CURLPROXY_HTTPS2)
    hv_stores(the_hv, "CURLPROXY_HTTPS2", newSViv(CURLPROXY_HTTPS2));
#endif
#if LIBCURL_HAS(CURLPROXY_HTTP_1_0)
    hv_stores(the_hv, "CURLPROXY_HTTP_1_0", newSViv(CURLPROXY_HTTP_1_0));
#endif
#if LIBCURL_HAS(CURLPROXY_SOCKS4)
    hv_stores(the_hv, "CURLPROXY_SOCKS4", newSViv(CURLPROXY_SOCKS4));
#endif
#if LIBCURL_HAS(CURLPROXY_SOCKS4A)
    hv_stores(the_hv, "CURLPROXY_SOCKS4A", newSViv(CURLPROXY_SOCKS4A));
#endif
#if LIBCURL_HAS(CURLPROXY_SOCKS5)
    hv_stores(the_hv, "CURLPROXY_SOCKS5", newSViv(CURLPROXY_SOCKS5));
#endif
#if LIBCURL_HAS(CURLPROXY_SOCKS5_HOSTNAME)
    hv_stores(the_hv, "CURLPROXY_SOCKS5_HOSTNAME", newSViv(CURLPROXY_SOCKS5_HOSTNAME));
#endif
#if LIBCURL_HAS(CURLPX_BAD_ADDRESS_TYPE)
    hv_stores(the_hv, "CURLPX_BAD_ADDRESS_TYPE", newSViv(CURLPX_BAD_ADDRESS_TYPE));
#endif
#if LIBCURL_HAS(CURLPX_BAD_VERSION)
    hv_stores(the_hv, "CURLPX_BAD_VERSION", newSViv(CURLPX_BAD_VERSION));
#endif
#if LIBCURL_HAS(CURLPX_CLOSED)
    hv_stores(the_hv, "CURLPX_CLOSED", newSViv(CURLPX_CLOSED));
#endif
#if LIBCURL_HAS(CURLPX_GSSAPI)
    hv_stores(the_hv, "CURLPX_GSSAPI", newSViv(CURLPX_GSSAPI));
#endif
#if LIBCURL_HAS(CURLPX_GSSAPI_PERMSG)
    hv_stores(the_hv, "CURLPX_GSSAPI_PERMSG", newSViv(CURLPX_GSSAPI_PERMSG));
#endif
#if LIBCURL_HAS(CURLPX_GSSAPI_PROTECTION)
    hv_stores(the_hv, "CURLPX_GSSAPI_PROTECTION", newSViv(CURLPX_GSSAPI_PROTECTION));
#endif
#if LIBCURL_HAS(CURLPX_IDENTD)
    hv_stores(the_hv, "CURLPX_IDENTD", newSViv(CURLPX_IDENTD));
#endif
#if LIBCURL_HAS(CURLPX_IDENTD_DIFFER)
    hv_stores(the_hv, "CURLPX_IDENTD_DIFFER", newSViv(CURLPX_IDENTD_DIFFER));
#endif
#if LIBCURL_HAS(CURLPX_LONG_HOSTNAME)
    hv_stores(the_hv, "CURLPX_LONG_HOSTNAME", newSViv(CURLPX_LONG_HOSTNAME));
#endif
#if LIBCURL_HAS(CURLPX_LONG_PASSWD)
    hv_stores(the_hv, "CURLPX_LONG_PASSWD", newSViv(CURLPX_LONG_PASSWD));
#endif
#if LIBCURL_HAS(CURLPX_LONG_USER)
    hv_stores(the_hv, "CURLPX_LONG_USER", newSViv(CURLPX_LONG_USER));
#endif
#if LIBCURL_HAS(CURLPX_NO_AUTH)
    hv_stores(the_hv, "CURLPX_NO_AUTH", newSViv(CURLPX_NO_AUTH));
#endif
#if LIBCURL_HAS(CURLPX_OK)
    hv_stores(the_hv, "CURLPX_OK", newSViv(CURLPX_OK));
#endif
#if LIBCURL_HAS(CURLPX_RECV_ADDRESS)
    hv_stores(the_hv, "CURLPX_RECV_ADDRESS", newSViv(CURLPX_RECV_ADDRESS));
#endif
#if LIBCURL_HAS(CURLPX_RECV_AUTH)
    hv_stores(the_hv, "CURLPX_RECV_AUTH", newSViv(CURLPX_RECV_AUTH));
#endif
#if LIBCURL_HAS(CURLPX_RECV_CONNECT)
    hv_stores(the_hv, "CURLPX_RECV_CONNECT", newSViv(CURLPX_RECV_CONNECT));
#endif
#if LIBCURL_HAS(CURLPX_RECV_REQACK)
    hv_stores(the_hv, "CURLPX_RECV_REQACK", newSViv(CURLPX_RECV_REQACK));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED)
    hv_stores(the_hv, "CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED", newSViv(CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_COMMAND_NOT_SUPPORTED)
    hv_stores(the_hv, "CURLPX_REPLY_COMMAND_NOT_SUPPORTED", newSViv(CURLPX_REPLY_COMMAND_NOT_SUPPORTED));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_CONNECTION_REFUSED)
    hv_stores(the_hv, "CURLPX_REPLY_CONNECTION_REFUSED", newSViv(CURLPX_REPLY_CONNECTION_REFUSED));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_GENERAL_SERVER_FAILURE)
    hv_stores(the_hv, "CURLPX_REPLY_GENERAL_SERVER_FAILURE", newSViv(CURLPX_REPLY_GENERAL_SERVER_FAILURE));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_HOST_UNREACHABLE)
    hv_stores(the_hv, "CURLPX_REPLY_HOST_UNREACHABLE", newSViv(CURLPX_REPLY_HOST_UNREACHABLE));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_NETWORK_UNREACHABLE)
    hv_stores(the_hv, "CURLPX_REPLY_NETWORK_UNREACHABLE", newSViv(CURLPX_REPLY_NETWORK_UNREACHABLE));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_NOT_ALLOWED)
    hv_stores(the_hv, "CURLPX_REPLY_NOT_ALLOWED", newSViv(CURLPX_REPLY_NOT_ALLOWED));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_TTL_EXPIRED)
    hv_stores(the_hv, "CURLPX_REPLY_TTL_EXPIRED", newSViv(CURLPX_REPLY_TTL_EXPIRED));
#endif
#if LIBCURL_HAS(CURLPX_REPLY_UNASSIGNED)
    hv_stores(the_hv, "CURLPX_REPLY_UNASSIGNED", newSViv(CURLPX_REPLY_UNASSIGNED));
#endif
#if LIBCURL_HAS(CURLPX_REQUEST_FAILED)
    hv_stores(the_hv, "CURLPX_REQUEST_FAILED", newSViv(CURLPX_REQUEST_FAILED));
#endif
#if LIBCURL_HAS(CURLPX_RESOLVE_HOST)
    hv_stores(the_hv, "CURLPX_RESOLVE_HOST", newSViv(CURLPX_RESOLVE_HOST));
#endif
#if LIBCURL_HAS(CURLPX_SEND_AUTH)
    hv_stores(the_hv, "CURLPX_SEND_AUTH", newSViv(CURLPX_SEND_AUTH));
#endif
#if LIBCURL_HAS(CURLPX_SEND_CONNECT)
    hv_stores(the_hv, "CURLPX_SEND_CONNECT", newSViv(CURLPX_SEND_CONNECT));
#endif
#if LIBCURL_HAS(CURLPX_SEND_REQUEST)
    hv_stores(the_hv, "CURLPX_SEND_REQUEST", newSViv(CURLPX_SEND_REQUEST));
#endif
#if LIBCURL_HAS(CURLPX_UNKNOWN_FAIL)
    hv_stores(the_hv, "CURLPX_UNKNOWN_FAIL", newSViv(CURLPX_UNKNOWN_FAIL));
#endif
#if LIBCURL_HAS(CURLPX_UNKNOWN_MODE)
    hv_stores(the_hv, "CURLPX_UNKNOWN_MODE", newSViv(CURLPX_UNKNOWN_MODE));
#endif
#if LIBCURL_HAS(CURLPX_USER_REJECTED)
    hv_stores(the_hv, "CURLPX_USER_REJECTED", newSViv(CURLPX_USER_REJECTED));
#endif
#if LIBCURL_HAS(CURLSHE_BAD_OPTION)
    hv_stores(the_hv, "CURLSHE_BAD_OPTION", newSViv(CURLSHE_BAD_OPTION));
#endif
#if LIBCURL_HAS(CURLSHE_INVALID)
    hv_stores(the_hv, "CURLSHE_INVALID", newSViv(CURLSHE_INVALID));
#endif
#if LIBCURL_HAS(CURLSHE_IN_USE)
    hv_stores(the_hv, "CURLSHE_IN_USE", newSViv(CURLSHE_IN_USE));
#endif
#if LIBCURL_HAS(CURLSHE_NOMEM)
    hv_stores(the_hv, "CURLSHE_NOMEM", newSViv(CURLSHE_NOMEM));
#endif
#if LIBCURL_HAS(CURLSHE_NOT_BUILT_IN)
    hv_stores(the_hv, "CURLSHE_NOT_BUILT_IN", newSViv(CURLSHE_NOT_BUILT_IN));
#endif
#if LIBCURL_HAS(CURLSHE_OK)
    hv_stores(the_hv, "CURLSHE_OK", newSViv(CURLSHE_OK));
#endif
#if LIBCURL_HAS(CURLSHOPT_LOCKFUNC)
    hv_stores(the_hv, "CURLSHOPT_LOCKFUNC", newSViv(CURLSHOPT_LOCKFUNC));
#endif
#if LIBCURL_HAS(CURLSHOPT_NONE)
    hv_stores(the_hv, "CURLSHOPT_NONE", newSViv(CURLSHOPT_NONE));
#endif
#if LIBCURL_HAS(CURLSHOPT_SHARE)
    hv_stores(the_hv, "CURLSHOPT_SHARE", newSViv(CURLSHOPT_SHARE));
#endif
#if LIBCURL_HAS(CURLSHOPT_UNLOCKFUNC)
    hv_stores(the_hv, "CURLSHOPT_UNLOCKFUNC", newSViv(CURLSHOPT_UNLOCKFUNC));
#endif
#if LIBCURL_HAS(CURLSHOPT_UNSHARE)
    hv_stores(the_hv, "CURLSHOPT_UNSHARE", newSViv(CURLSHOPT_UNSHARE));
#endif
#if LIBCURL_HAS(CURLSHOPT_USERDATA)
    hv_stores(the_hv, "CURLSHOPT_USERDATA", newSViv(CURLSHOPT_USERDATA));
#endif
#if LIBCURL_HAS(CURLSOCKTYPE_ACCEPT)
    hv_stores(the_hv, "CURLSOCKTYPE_ACCEPT", newSViv(CURLSOCKTYPE_ACCEPT));
#endif
#if LIBCURL_HAS(CURLSOCKTYPE_IPCXN)
    hv_stores(the_hv, "CURLSOCKTYPE_IPCXN", newSViv(CURLSOCKTYPE_IPCXN));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_AGENT)
    hv_stores(the_hv, "CURLSSH_AUTH_AGENT", newSViv(CURLSSH_AUTH_AGENT));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_ANY)
    hv_stores(the_hv, "CURLSSH_AUTH_ANY", newSViv(CURLSSH_AUTH_ANY));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_DEFAULT)
    hv_stores(the_hv, "CURLSSH_AUTH_DEFAULT", newSViv(CURLSSH_AUTH_DEFAULT));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_GSSAPI)
    hv_stores(the_hv, "CURLSSH_AUTH_GSSAPI", newSViv(CURLSSH_AUTH_GSSAPI));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_HOST)
    hv_stores(the_hv, "CURLSSH_AUTH_HOST", newSViv(CURLSSH_AUTH_HOST));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_KEYBOARD)
    hv_stores(the_hv, "CURLSSH_AUTH_KEYBOARD", newSViv(CURLSSH_AUTH_KEYBOARD));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_NONE)
    hv_stores(the_hv, "CURLSSH_AUTH_NONE", newSViv(CURLSSH_AUTH_NONE));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_PASSWORD)
    hv_stores(the_hv, "CURLSSH_AUTH_PASSWORD", newSViv(CURLSSH_AUTH_PASSWORD));
#endif
#if LIBCURL_HAS(CURLSSH_AUTH_PUBLICKEY)
    hv_stores(the_hv, "CURLSSH_AUTH_PUBLICKEY", newSViv(CURLSSH_AUTH_PUBLICKEY));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_AWSLC)
    hv_stores(the_hv, "CURLSSLBACKEND_AWSLC", newSViv(CURLSSLBACKEND_AWSLC));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_AXTLS)
    hv_stores(the_hv, "CURLSSLBACKEND_AXTLS", newSViv(CURLSSLBACKEND_AXTLS));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_BEARSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_BEARSSL", newSViv(CURLSSLBACKEND_BEARSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_BORINGSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_BORINGSSL", newSViv(CURLSSLBACKEND_BORINGSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_CYASSL)
    hv_stores(the_hv, "CURLSSLBACKEND_CYASSL", newSViv(CURLSSLBACKEND_CYASSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_DARWINSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_DARWINSSL", newSViv(CURLSSLBACKEND_DARWINSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_GNUTLS)
    hv_stores(the_hv, "CURLSSLBACKEND_GNUTLS", newSViv(CURLSSLBACKEND_GNUTLS));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_GSKIT)
    hv_stores(the_hv, "CURLSSLBACKEND_GSKIT", newSViv(CURLSSLBACKEND_GSKIT));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_LIBRESSL)
    hv_stores(the_hv, "CURLSSLBACKEND_LIBRESSL", newSViv(CURLSSLBACKEND_LIBRESSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_MBEDTLS)
    hv_stores(the_hv, "CURLSSLBACKEND_MBEDTLS", newSViv(CURLSSLBACKEND_MBEDTLS));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_MESALINK)
    hv_stores(the_hv, "CURLSSLBACKEND_MESALINK", newSViv(CURLSSLBACKEND_MESALINK));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_NONE)
    hv_stores(the_hv, "CURLSSLBACKEND_NONE", newSViv(CURLSSLBACKEND_NONE));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_NSS)
    hv_stores(the_hv, "CURLSSLBACKEND_NSS", newSViv(CURLSSLBACKEND_NSS));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_OPENSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_OPENSSL", newSViv(CURLSSLBACKEND_OPENSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_POLARSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_POLARSSL", newSViv(CURLSSLBACKEND_POLARSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_QSOSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_QSOSSL", newSViv(CURLSSLBACKEND_QSOSSL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_RUSTLS)
    hv_stores(the_hv, "CURLSSLBACKEND_RUSTLS", newSViv(CURLSSLBACKEND_RUSTLS));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_SCHANNEL)
    hv_stores(the_hv, "CURLSSLBACKEND_SCHANNEL", newSViv(CURLSSLBACKEND_SCHANNEL));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_SECURETRANSPORT)
    hv_stores(the_hv, "CURLSSLBACKEND_SECURETRANSPORT", newSViv(CURLSSLBACKEND_SECURETRANSPORT));
#endif
#if LIBCURL_HAS(CURLSSLBACKEND_WOLFSSL)
    hv_stores(the_hv, "CURLSSLBACKEND_WOLFSSL", newSViv(CURLSSLBACKEND_WOLFSSL));
#endif
#if LIBCURL_HAS(CURLSSLOPT_ALLOW_BEAST)
    hv_stores(the_hv, "CURLSSLOPT_ALLOW_BEAST", newSViv(CURLSSLOPT_ALLOW_BEAST));
#endif
#if LIBCURL_HAS(CURLSSLOPT_AUTO_CLIENT_CERT)
    hv_stores(the_hv, "CURLSSLOPT_AUTO_CLIENT_CERT", newSViv(CURLSSLOPT_AUTO_CLIENT_CERT));
#endif
#if LIBCURL_HAS(CURLSSLOPT_EARLYDATA)
    hv_stores(the_hv, "CURLSSLOPT_EARLYDATA", newSViv(CURLSSLOPT_EARLYDATA));
#endif
#if LIBCURL_HAS(CURLSSLOPT_NATIVE_CA)
    hv_stores(the_hv, "CURLSSLOPT_NATIVE_CA", newSViv(CURLSSLOPT_NATIVE_CA));
#endif
#if LIBCURL_HAS(CURLSSLOPT_NO_PARTIALCHAIN)
    hv_stores(the_hv, "CURLSSLOPT_NO_PARTIALCHAIN", newSViv(CURLSSLOPT_NO_PARTIALCHAIN));
#endif
#if LIBCURL_HAS(CURLSSLOPT_NO_REVOKE)
    hv_stores(the_hv, "CURLSSLOPT_NO_REVOKE", newSViv(CURLSSLOPT_NO_REVOKE));
#endif
#if LIBCURL_HAS(CURLSSLOPT_REVOKE_BEST_EFFORT)
    hv_stores(the_hv, "CURLSSLOPT_REVOKE_BEST_EFFORT", newSViv(CURLSSLOPT_REVOKE_BEST_EFFORT));
#endif
#if LIBCURL_HAS(CURLSSLSET_NO_BACKENDS)
    hv_stores(the_hv, "CURLSSLSET_NO_BACKENDS", newSViv(CURLSSLSET_NO_BACKENDS));
#endif
#if LIBCURL_HAS(CURLSSLSET_OK)
    hv_stores(the_hv, "CURLSSLSET_OK", newSViv(CURLSSLSET_OK));
#endif
#if LIBCURL_HAS(CURLSSLSET_TOO_LATE)
    hv_stores(the_hv, "CURLSSLSET_TOO_LATE", newSViv(CURLSSLSET_TOO_LATE));
#endif
#if LIBCURL_HAS(CURLSSLSET_UNKNOWN_BACKEND)
    hv_stores(the_hv, "CURLSSLSET_UNKNOWN_BACKEND", newSViv(CURLSSLSET_UNKNOWN_BACKEND));
#endif
#if LIBCURL_HAS(CURLSTS_DONE)
    hv_stores(the_hv, "CURLSTS_DONE", newSViv(CURLSTS_DONE));
#endif
#if LIBCURL_HAS(CURLSTS_FAIL)
    hv_stores(the_hv, "CURLSTS_FAIL", newSViv(CURLSTS_FAIL));
#endif
#if LIBCURL_HAS(CURLSTS_OK)
    hv_stores(the_hv, "CURLSTS_OK", newSViv(CURLSTS_OK));
#endif
#if LIBCURL_HAS(CURLUE_BAD_FILE_URL)
    hv_stores(the_hv, "CURLUE_BAD_FILE_URL", newSViv(CURLUE_BAD_FILE_URL));
#endif
#if LIBCURL_HAS(CURLUE_BAD_FRAGMENT)
    hv_stores(the_hv, "CURLUE_BAD_FRAGMENT", newSViv(CURLUE_BAD_FRAGMENT));
#endif
#if LIBCURL_HAS(CURLUE_BAD_HANDLE)
    hv_stores(the_hv, "CURLUE_BAD_HANDLE", newSViv(CURLUE_BAD_HANDLE));
#endif
#if LIBCURL_HAS(CURLUE_BAD_HOSTNAME)
    hv_stores(the_hv, "CURLUE_BAD_HOSTNAME", newSViv(CURLUE_BAD_HOSTNAME));
#endif
#if LIBCURL_HAS(CURLUE_BAD_IPV6)
    hv_stores(the_hv, "CURLUE_BAD_IPV6", newSViv(CURLUE_BAD_IPV6));
#endif
#if LIBCURL_HAS(CURLUE_BAD_LOGIN)
    hv_stores(the_hv, "CURLUE_BAD_LOGIN", newSViv(CURLUE_BAD_LOGIN));
#endif
#if LIBCURL_HAS(CURLUE_BAD_PARTPOINTER)
    hv_stores(the_hv, "CURLUE_BAD_PARTPOINTER", newSViv(CURLUE_BAD_PARTPOINTER));
#endif
#if LIBCURL_HAS(CURLUE_BAD_PASSWORD)
    hv_stores(the_hv, "CURLUE_BAD_PASSWORD", newSViv(CURLUE_BAD_PASSWORD));
#endif
#if LIBCURL_HAS(CURLUE_BAD_PATH)
    hv_stores(the_hv, "CURLUE_BAD_PATH", newSViv(CURLUE_BAD_PATH));
#endif
#if LIBCURL_HAS(CURLUE_BAD_PORT_NUMBER)
    hv_stores(the_hv, "CURLUE_BAD_PORT_NUMBER", newSViv(CURLUE_BAD_PORT_NUMBER));
#endif
#if LIBCURL_HAS(CURLUE_BAD_QUERY)
    hv_stores(the_hv, "CURLUE_BAD_QUERY", newSViv(CURLUE_BAD_QUERY));
#endif
#if LIBCURL_HAS(CURLUE_BAD_SCHEME)
    hv_stores(the_hv, "CURLUE_BAD_SCHEME", newSViv(CURLUE_BAD_SCHEME));
#endif
#if LIBCURL_HAS(CURLUE_BAD_SLASHES)
    hv_stores(the_hv, "CURLUE_BAD_SLASHES", newSViv(CURLUE_BAD_SLASHES));
#endif
#if LIBCURL_HAS(CURLUE_BAD_USER)
    hv_stores(the_hv, "CURLUE_BAD_USER", newSViv(CURLUE_BAD_USER));
#endif
#if LIBCURL_HAS(CURLUE_LACKS_IDN)
    hv_stores(the_hv, "CURLUE_LACKS_IDN", newSViv(CURLUE_LACKS_IDN));
#endif
#if LIBCURL_HAS(CURLUE_MALFORMED_INPUT)
    hv_stores(the_hv, "CURLUE_MALFORMED_INPUT", newSViv(CURLUE_MALFORMED_INPUT));
#endif
#if LIBCURL_HAS(CURLUE_NO_FRAGMENT)
    hv_stores(the_hv, "CURLUE_NO_FRAGMENT", newSViv(CURLUE_NO_FRAGMENT));
#endif
#if LIBCURL_HAS(CURLUE_NO_HOST)
    hv_stores(the_hv, "CURLUE_NO_HOST", newSViv(CURLUE_NO_HOST));
#endif
#if LIBCURL_HAS(CURLUE_NO_OPTIONS)
    hv_stores(the_hv, "CURLUE_NO_OPTIONS", newSViv(CURLUE_NO_OPTIONS));
#endif
#if LIBCURL_HAS(CURLUE_NO_PASSWORD)
    hv_stores(the_hv, "CURLUE_NO_PASSWORD", newSViv(CURLUE_NO_PASSWORD));
#endif
#if LIBCURL_HAS(CURLUE_NO_PORT)
    hv_stores(the_hv, "CURLUE_NO_PORT", newSViv(CURLUE_NO_PORT));
#endif
#if LIBCURL_HAS(CURLUE_NO_QUERY)
    hv_stores(the_hv, "CURLUE_NO_QUERY", newSViv(CURLUE_NO_QUERY));
#endif
#if LIBCURL_HAS(CURLUE_NO_SCHEME)
    hv_stores(the_hv, "CURLUE_NO_SCHEME", newSViv(CURLUE_NO_SCHEME));
#endif
#if LIBCURL_HAS(CURLUE_NO_USER)
    hv_stores(the_hv, "CURLUE_NO_USER", newSViv(CURLUE_NO_USER));
#endif
#if LIBCURL_HAS(CURLUE_NO_ZONEID)
    hv_stores(the_hv, "CURLUE_NO_ZONEID", newSViv(CURLUE_NO_ZONEID));
#endif
#if LIBCURL_HAS(CURLUE_OK)
    hv_stores(the_hv, "CURLUE_OK", newSViv(CURLUE_OK));
#endif
#if LIBCURL_HAS(CURLUE_OUT_OF_MEMORY)
    hv_stores(the_hv, "CURLUE_OUT_OF_MEMORY", newSViv(CURLUE_OUT_OF_MEMORY));
#endif
#if LIBCURL_HAS(CURLUE_TOO_LARGE)
    hv_stores(the_hv, "CURLUE_TOO_LARGE", newSViv(CURLUE_TOO_LARGE));
#endif
#if LIBCURL_HAS(CURLUE_UNKNOWN_PART)
    hv_stores(the_hv, "CURLUE_UNKNOWN_PART", newSViv(CURLUE_UNKNOWN_PART));
#endif
#if LIBCURL_HAS(CURLUE_UNSUPPORTED_SCHEME)
    hv_stores(the_hv, "CURLUE_UNSUPPORTED_SCHEME", newSViv(CURLUE_UNSUPPORTED_SCHEME));
#endif
#if LIBCURL_HAS(CURLUE_URLDECODE)
    hv_stores(the_hv, "CURLUE_URLDECODE", newSViv(CURLUE_URLDECODE));
#endif
#if LIBCURL_HAS(CURLUE_USER_NOT_ALLOWED)
    hv_stores(the_hv, "CURLUE_USER_NOT_ALLOWED", newSViv(CURLUE_USER_NOT_ALLOWED));
#endif
#if LIBCURL_HAS(CURLULFLAG_ANSWERED)
    hv_stores(the_hv, "CURLULFLAG_ANSWERED", newSViv(CURLULFLAG_ANSWERED));
#endif
#if LIBCURL_HAS(CURLULFLAG_DELETED)
    hv_stores(the_hv, "CURLULFLAG_DELETED", newSViv(CURLULFLAG_DELETED));
#endif
#if LIBCURL_HAS(CURLULFLAG_DRAFT)
    hv_stores(the_hv, "CURLULFLAG_DRAFT", newSViv(CURLULFLAG_DRAFT));
#endif
#if LIBCURL_HAS(CURLULFLAG_FLAGGED)
    hv_stores(the_hv, "CURLULFLAG_FLAGGED", newSViv(CURLULFLAG_FLAGGED));
#endif
#if LIBCURL_HAS(CURLULFLAG_SEEN)
    hv_stores(the_hv, "CURLULFLAG_SEEN", newSViv(CURLULFLAG_SEEN));
#endif
#if LIBCURL_HAS(CURLUPART_FRAGMENT)
    hv_stores(the_hv, "CURLUPART_FRAGMENT", newSViv(CURLUPART_FRAGMENT));
#endif
#if LIBCURL_HAS(CURLUPART_HOST)
    hv_stores(the_hv, "CURLUPART_HOST", newSViv(CURLUPART_HOST));
#endif
#if LIBCURL_HAS(CURLUPART_OPTIONS)
    hv_stores(the_hv, "CURLUPART_OPTIONS", newSViv(CURLUPART_OPTIONS));
#endif
#if LIBCURL_HAS(CURLUPART_PASSWORD)
    hv_stores(the_hv, "CURLUPART_PASSWORD", newSViv(CURLUPART_PASSWORD));
#endif
#if LIBCURL_HAS(CURLUPART_PATH)
    hv_stores(the_hv, "CURLUPART_PATH", newSViv(CURLUPART_PATH));
#endif
#if LIBCURL_HAS(CURLUPART_PORT)
    hv_stores(the_hv, "CURLUPART_PORT", newSViv(CURLUPART_PORT));
#endif
#if LIBCURL_HAS(CURLUPART_QUERY)
    hv_stores(the_hv, "CURLUPART_QUERY", newSViv(CURLUPART_QUERY));
#endif
#if LIBCURL_HAS(CURLUPART_SCHEME)
    hv_stores(the_hv, "CURLUPART_SCHEME", newSViv(CURLUPART_SCHEME));
#endif
#if LIBCURL_HAS(CURLUPART_URL)
    hv_stores(the_hv, "CURLUPART_URL", newSViv(CURLUPART_URL));
#endif
#if LIBCURL_HAS(CURLUPART_USER)
    hv_stores(the_hv, "CURLUPART_USER", newSViv(CURLUPART_USER));
#endif
#if LIBCURL_HAS(CURLUPART_ZONEID)
    hv_stores(the_hv, "CURLUPART_ZONEID", newSViv(CURLUPART_ZONEID));
#endif
#if LIBCURL_HAS(CURLUSESSL_ALL)
    hv_stores(the_hv, "CURLUSESSL_ALL", newSViv(CURLUSESSL_ALL));
#endif
#if LIBCURL_HAS(CURLUSESSL_CONTROL)
    hv_stores(the_hv, "CURLUSESSL_CONTROL", newSViv(CURLUSESSL_CONTROL));
#endif
#if LIBCURL_HAS(CURLUSESSL_NONE)
    hv_stores(the_hv, "CURLUSESSL_NONE", newSViv(CURLUSESSL_NONE));
#endif
#if LIBCURL_HAS(CURLUSESSL_TRY)
    hv_stores(the_hv, "CURLUSESSL_TRY", newSViv(CURLUSESSL_TRY));
#endif
#if LIBCURL_HAS(CURLU_ALLOW_SPACE)
    hv_stores(the_hv, "CURLU_ALLOW_SPACE", newSViv(CURLU_ALLOW_SPACE));
#endif
#if LIBCURL_HAS(CURLU_APPENDQUERY)
    hv_stores(the_hv, "CURLU_APPENDQUERY", newSViv(CURLU_APPENDQUERY));
#endif
#if LIBCURL_HAS(CURLU_DEFAULT_PORT)
    hv_stores(the_hv, "CURLU_DEFAULT_PORT", newSViv(CURLU_DEFAULT_PORT));
#endif
#if LIBCURL_HAS(CURLU_DEFAULT_SCHEME)
    hv_stores(the_hv, "CURLU_DEFAULT_SCHEME", newSViv(CURLU_DEFAULT_SCHEME));
#endif
#if LIBCURL_HAS(CURLU_DISALLOW_USER)
    hv_stores(the_hv, "CURLU_DISALLOW_USER", newSViv(CURLU_DISALLOW_USER));
#endif
#if LIBCURL_HAS(CURLU_GET_EMPTY)
    hv_stores(the_hv, "CURLU_GET_EMPTY", newSViv(CURLU_GET_EMPTY));
#endif
#if LIBCURL_HAS(CURLU_GUESS_SCHEME)
    hv_stores(the_hv, "CURLU_GUESS_SCHEME", newSViv(CURLU_GUESS_SCHEME));
#endif
#if LIBCURL_HAS(CURLU_NON_SUPPORT_SCHEME)
    hv_stores(the_hv, "CURLU_NON_SUPPORT_SCHEME", newSViv(CURLU_NON_SUPPORT_SCHEME));
#endif
#if LIBCURL_HAS(CURLU_NO_AUTHORITY)
    hv_stores(the_hv, "CURLU_NO_AUTHORITY", newSViv(CURLU_NO_AUTHORITY));
#endif
#if LIBCURL_HAS(CURLU_NO_DEFAULT_PORT)
    hv_stores(the_hv, "CURLU_NO_DEFAULT_PORT", newSViv(CURLU_NO_DEFAULT_PORT));
#endif
#if LIBCURL_HAS(CURLU_NO_GUESS_SCHEME)
    hv_stores(the_hv, "CURLU_NO_GUESS_SCHEME", newSViv(CURLU_NO_GUESS_SCHEME));
#endif
#if LIBCURL_HAS(CURLU_PATH_AS_IS)
    hv_stores(the_hv, "CURLU_PATH_AS_IS", newSViv(CURLU_PATH_AS_IS));
#endif
#if LIBCURL_HAS(CURLU_PUNY2IDN)
    hv_stores(the_hv, "CURLU_PUNY2IDN", newSViv(CURLU_PUNY2IDN));
#endif
#if LIBCURL_HAS(CURLU_PUNYCODE)
    hv_stores(the_hv, "CURLU_PUNYCODE", newSViv(CURLU_PUNYCODE));
#endif
#if LIBCURL_HAS(CURLU_URLDECODE)
    hv_stores(the_hv, "CURLU_URLDECODE", newSViv(CURLU_URLDECODE));
#endif
#if LIBCURL_HAS(CURLU_URLENCODE)
    hv_stores(the_hv, "CURLU_URLENCODE", newSViv(CURLU_URLENCODE));
#endif
#if LIBCURL_HAS(CURLVERSION_EIGHTH)
    hv_stores(the_hv, "CURLVERSION_EIGHTH", newSViv(CURLVERSION_EIGHTH));
#endif
#if LIBCURL_HAS(CURLVERSION_ELEVENTH)
    hv_stores(the_hv, "CURLVERSION_ELEVENTH", newSViv(CURLVERSION_ELEVENTH));
#endif
#if LIBCURL_HAS(CURLVERSION_FIFTH)
    hv_stores(the_hv, "CURLVERSION_FIFTH", newSViv(CURLVERSION_FIFTH));
#endif
#if LIBCURL_HAS(CURLVERSION_FIRST)
    hv_stores(the_hv, "CURLVERSION_FIRST", newSViv(CURLVERSION_FIRST));
#endif
#if LIBCURL_HAS(CURLVERSION_FOURTH)
    hv_stores(the_hv, "CURLVERSION_FOURTH", newSViv(CURLVERSION_FOURTH));
#endif
#if LIBCURL_HAS(CURLVERSION_NINTH)
    hv_stores(the_hv, "CURLVERSION_NINTH", newSViv(CURLVERSION_NINTH));
#endif
#if LIBCURL_HAS(CURLVERSION_NOW)
    hv_stores(the_hv, "CURLVERSION_NOW", newSViv(CURLVERSION_NOW));
#endif
#if LIBCURL_HAS(CURLVERSION_SECOND)
    hv_stores(the_hv, "CURLVERSION_SECOND", newSViv(CURLVERSION_SECOND));
#endif
#if LIBCURL_HAS(CURLVERSION_SEVENTH)
    hv_stores(the_hv, "CURLVERSION_SEVENTH", newSViv(CURLVERSION_SEVENTH));
#endif
#if LIBCURL_HAS(CURLVERSION_SIXTH)
    hv_stores(the_hv, "CURLVERSION_SIXTH", newSViv(CURLVERSION_SIXTH));
#endif
#if LIBCURL_HAS(CURLVERSION_TENTH)
    hv_stores(the_hv, "CURLVERSION_TENTH", newSViv(CURLVERSION_TENTH));
#endif
#if LIBCURL_HAS(CURLVERSION_THIRD)
    hv_stores(the_hv, "CURLVERSION_THIRD", newSViv(CURLVERSION_THIRD));
#endif
#if LIBCURL_HAS(CURLVERSION_TWELFTH)
    hv_stores(the_hv, "CURLVERSION_TWELFTH", newSViv(CURLVERSION_TWELFTH));
#endif
#if LIBCURL_HAS(CURLWS_BINARY)
    hv_stores(the_hv, "CURLWS_BINARY", newSViv(CURLWS_BINARY));
#endif
#if LIBCURL_HAS(CURLWS_CLOSE)
    hv_stores(the_hv, "CURLWS_CLOSE", newSViv(CURLWS_CLOSE));
#endif
#if LIBCURL_HAS(CURLWS_CONT)
    hv_stores(the_hv, "CURLWS_CONT", newSViv(CURLWS_CONT));
#endif
#if LIBCURL_HAS(CURLWS_NOAUTOPONG)
    hv_stores(the_hv, "CURLWS_NOAUTOPONG", newSViv(CURLWS_NOAUTOPONG));
#endif
#if LIBCURL_HAS(CURLWS_OFFSET)
    hv_stores(the_hv, "CURLWS_OFFSET", newSViv(CURLWS_OFFSET));
#endif
#if LIBCURL_HAS(CURLWS_PING)
    hv_stores(the_hv, "CURLWS_PING", newSViv(CURLWS_PING));
#endif
#if LIBCURL_HAS(CURLWS_PONG)
    hv_stores(the_hv, "CURLWS_PONG", newSViv(CURLWS_PONG));
#endif
#if LIBCURL_HAS(CURLWS_RAW_MODE)
    hv_stores(the_hv, "CURLWS_RAW_MODE", newSViv(CURLWS_RAW_MODE));
#endif
#if LIBCURL_HAS(CURLWS_TEXT)
    hv_stores(the_hv, "CURLWS_TEXT", newSViv(CURLWS_TEXT));
#endif
#if LIBCURL_HAS(CURL_BLOB_COPY)
    hv_stores(the_hv, "CURL_BLOB_COPY", newSViv(CURL_BLOB_COPY));
#endif
#if LIBCURL_HAS(CURL_BLOB_NOCOPY)
    hv_stores(the_hv, "CURL_BLOB_NOCOPY", newSViv(CURL_BLOB_NOCOPY));
#endif
#if LIBCURL_HAS(CURL_CHUNK_BGN_FUNC_FAIL)
    hv_stores(the_hv, "CURL_CHUNK_BGN_FUNC_FAIL", newSViv(CURL_CHUNK_BGN_FUNC_FAIL));
#endif
#if LIBCURL_HAS(CURL_CHUNK_BGN_FUNC_OK)
    hv_stores(the_hv, "CURL_CHUNK_BGN_FUNC_OK", newSViv(CURL_CHUNK_BGN_FUNC_OK));
#endif
#if LIBCURL_HAS(CURL_CHUNK_BGN_FUNC_SKIP)
    hv_stores(the_hv, "CURL_CHUNK_BGN_FUNC_SKIP", newSViv(CURL_CHUNK_BGN_FUNC_SKIP));
#endif
#if LIBCURL_HAS(CURL_CHUNK_END_FUNC_FAIL)
    hv_stores(the_hv, "CURL_CHUNK_END_FUNC_FAIL", newSViv(CURL_CHUNK_END_FUNC_FAIL));
#endif
#if LIBCURL_HAS(CURL_CHUNK_END_FUNC_OK)
    hv_stores(the_hv, "CURL_CHUNK_END_FUNC_OK", newSViv(CURL_CHUNK_END_FUNC_OK));
#endif
#if LIBCURL_HAS(CURL_CSELECT_ERR)
    hv_stores(the_hv, "CURL_CSELECT_ERR", newSViv(CURL_CSELECT_ERR));
#endif
#if LIBCURL_HAS(CURL_CSELECT_IN)
    hv_stores(the_hv, "CURL_CSELECT_IN", newSViv(CURL_CSELECT_IN));
#endif
#if LIBCURL_HAS(CURL_CSELECT_OUT)
    hv_stores(the_hv, "CURL_CSELECT_OUT", newSViv(CURL_CSELECT_OUT));
#endif
#if LIBCURL_HAS(CURL_EASY_NONE)
    hv_stores(the_hv, "CURL_EASY_NONE", newSViv(CURL_EASY_NONE));
#endif
#if LIBCURL_HAS(CURL_EASY_TIMEOUT)
    hv_stores(the_hv, "CURL_EASY_TIMEOUT", newSViv(CURL_EASY_TIMEOUT));
#endif
#if LIBCURL_HAS(CURL_ERROR_SIZE)
    hv_stores(the_hv, "CURL_ERROR_SIZE", newSViv(CURL_ERROR_SIZE));
#endif
#if LIBCURL_HAS(CURL_FNMATCHFUNC_FAIL)
    hv_stores(the_hv, "CURL_FNMATCHFUNC_FAIL", newSViv(CURL_FNMATCHFUNC_FAIL));
#endif
#if LIBCURL_HAS(CURL_FNMATCHFUNC_MATCH)
    hv_stores(the_hv, "CURL_FNMATCHFUNC_MATCH", newSViv(CURL_FNMATCHFUNC_MATCH));
#endif
#if LIBCURL_HAS(CURL_FNMATCHFUNC_NOMATCH)
    hv_stores(the_hv, "CURL_FNMATCHFUNC_NOMATCH", newSViv(CURL_FNMATCHFUNC_NOMATCH));
#endif
#if LIBCURL_HAS(CURL_FORMADD_DISABLED)
    hv_stores(the_hv, "CURL_FORMADD_DISABLED", newSViv(CURL_FORMADD_DISABLED));
#endif
#if LIBCURL_HAS(CURL_FORMADD_ILLEGAL_ARRAY)
    hv_stores(the_hv, "CURL_FORMADD_ILLEGAL_ARRAY", newSViv(CURL_FORMADD_ILLEGAL_ARRAY));
#endif
#if LIBCURL_HAS(CURL_FORMADD_INCOMPLETE)
    hv_stores(the_hv, "CURL_FORMADD_INCOMPLETE", newSViv(CURL_FORMADD_INCOMPLETE));
#endif
#if LIBCURL_HAS(CURL_FORMADD_MEMORY)
    hv_stores(the_hv, "CURL_FORMADD_MEMORY", newSViv(CURL_FORMADD_MEMORY));
#endif
#if LIBCURL_HAS(CURL_FORMADD_NULL)
    hv_stores(the_hv, "CURL_FORMADD_NULL", newSViv(CURL_FORMADD_NULL));
#endif
#if LIBCURL_HAS(CURL_FORMADD_OK)
    hv_stores(the_hv, "CURL_FORMADD_OK", newSViv(CURL_FORMADD_OK));
#endif
#if LIBCURL_HAS(CURL_FORMADD_OPTION_TWICE)
    hv_stores(the_hv, "CURL_FORMADD_OPTION_TWICE", newSViv(CURL_FORMADD_OPTION_TWICE));
#endif
#if LIBCURL_HAS(CURL_FORMADD_UNKNOWN_OPTION)
    hv_stores(the_hv, "CURL_FORMADD_UNKNOWN_OPTION", newSViv(CURL_FORMADD_UNKNOWN_OPTION));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_ACK_EINTR)
    hv_stores(the_hv, "CURL_GLOBAL_ACK_EINTR", newSViv(CURL_GLOBAL_ACK_EINTR));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_ALL)
    hv_stores(the_hv, "CURL_GLOBAL_ALL", newSViv(CURL_GLOBAL_ALL));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_DEFAULT)
    hv_stores(the_hv, "CURL_GLOBAL_DEFAULT", newSViv(CURL_GLOBAL_DEFAULT));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_NOTHING)
    hv_stores(the_hv, "CURL_GLOBAL_NOTHING", newSViv(CURL_GLOBAL_NOTHING));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_SSL)
    hv_stores(the_hv, "CURL_GLOBAL_SSL", newSViv(CURL_GLOBAL_SSL));
#endif
#if LIBCURL_HAS(CURL_GLOBAL_WIN32)
    hv_stores(the_hv, "CURL_GLOBAL_WIN32", newSViv(CURL_GLOBAL_WIN32));
#endif
#if LIBCURL_HAS(CURL_HAS_DECLSPEC_ATTRIBUTE)
    hv_stores(the_hv, "CURL_HAS_DECLSPEC_ATTRIBUTE", newSViv(CURL_HAS_DECLSPEC_ATTRIBUTE));
#endif
#if LIBCURL_HAS(CURL_HET_DEFAULT)
    hv_stores(the_hv, "CURL_HET_DEFAULT", newSViv(CURL_HET_DEFAULT));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_BUFFER)
    hv_stores(the_hv, "CURL_HTTPPOST_BUFFER", newSViv(CURL_HTTPPOST_BUFFER));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_CALLBACK)
    hv_stores(the_hv, "CURL_HTTPPOST_CALLBACK", newSViv(CURL_HTTPPOST_CALLBACK));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_FILENAME)
    hv_stores(the_hv, "CURL_HTTPPOST_FILENAME", newSViv(CURL_HTTPPOST_FILENAME));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_LARGE)
    hv_stores(the_hv, "CURL_HTTPPOST_LARGE", newSViv(CURL_HTTPPOST_LARGE));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_PTRBUFFER)
    hv_stores(the_hv, "CURL_HTTPPOST_PTRBUFFER", newSViv(CURL_HTTPPOST_PTRBUFFER));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_PTRCONTENTS)
    hv_stores(the_hv, "CURL_HTTPPOST_PTRCONTENTS", newSViv(CURL_HTTPPOST_PTRCONTENTS));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_PTRNAME)
    hv_stores(the_hv, "CURL_HTTPPOST_PTRNAME", newSViv(CURL_HTTPPOST_PTRNAME));
#endif
#if LIBCURL_HAS(CURL_HTTPPOST_READFILE)
    hv_stores(the_hv, "CURL_HTTPPOST_READFILE", newSViv(CURL_HTTPPOST_READFILE));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_1_0)
    hv_stores(the_hv, "CURL_HTTP_VERSION_1_0", newSViv(CURL_HTTP_VERSION_1_0));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_1_1)
    hv_stores(the_hv, "CURL_HTTP_VERSION_1_1", newSViv(CURL_HTTP_VERSION_1_1));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_2)
    hv_stores(the_hv, "CURL_HTTP_VERSION_2", newSViv(CURL_HTTP_VERSION_2));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_2TLS)
    hv_stores(the_hv, "CURL_HTTP_VERSION_2TLS", newSViv(CURL_HTTP_VERSION_2TLS));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_2_0)
    hv_stores(the_hv, "CURL_HTTP_VERSION_2_0", newSViv(CURL_HTTP_VERSION_2_0));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE)
    hv_stores(the_hv, "CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE", newSViv(CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_3)
    hv_stores(the_hv, "CURL_HTTP_VERSION_3", newSViv(CURL_HTTP_VERSION_3));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_3ONLY)
    hv_stores(the_hv, "CURL_HTTP_VERSION_3ONLY", newSViv(CURL_HTTP_VERSION_3ONLY));
#endif
#if LIBCURL_HAS(CURL_HTTP_VERSION_NONE)
    hv_stores(the_hv, "CURL_HTTP_VERSION_NONE", newSViv(CURL_HTTP_VERSION_NONE));
#endif
#if LIBCURL_HAS(CURL_IPRESOLVE_V4)
    hv_stores(the_hv, "CURL_IPRESOLVE_V4", newSViv(CURL_IPRESOLVE_V4));
#endif
#if LIBCURL_HAS(CURL_IPRESOLVE_V6)
    hv_stores(the_hv, "CURL_IPRESOLVE_V6", newSViv(CURL_IPRESOLVE_V6));
#endif
#if LIBCURL_HAS(CURL_IPRESOLVE_WHATEVER)
    hv_stores(the_hv, "CURL_IPRESOLVE_WHATEVER", newSViv(CURL_IPRESOLVE_WHATEVER));
#endif
#if LIBCURL_HAS(CURL_LOCK_ACCESS_NONE)
    hv_stores(the_hv, "CURL_LOCK_ACCESS_NONE", newSViv(CURL_LOCK_ACCESS_NONE));
#endif
#if LIBCURL_HAS(CURL_LOCK_ACCESS_SHARED)
    hv_stores(the_hv, "CURL_LOCK_ACCESS_SHARED", newSViv(CURL_LOCK_ACCESS_SHARED));
#endif
#if LIBCURL_HAS(CURL_LOCK_ACCESS_SINGLE)
    hv_stores(the_hv, "CURL_LOCK_ACCESS_SINGLE", newSViv(CURL_LOCK_ACCESS_SINGLE));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_CONNECT)
    hv_stores(the_hv, "CURL_LOCK_DATA_CONNECT", newSViv(CURL_LOCK_DATA_CONNECT));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_COOKIE)
    hv_stores(the_hv, "CURL_LOCK_DATA_COOKIE", newSViv(CURL_LOCK_DATA_COOKIE));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_DNS)
    hv_stores(the_hv, "CURL_LOCK_DATA_DNS", newSViv(CURL_LOCK_DATA_DNS));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_HSTS)
    hv_stores(the_hv, "CURL_LOCK_DATA_HSTS", newSViv(CURL_LOCK_DATA_HSTS));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_NONE)
    hv_stores(the_hv, "CURL_LOCK_DATA_NONE", newSViv(CURL_LOCK_DATA_NONE));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_PSL)
    hv_stores(the_hv, "CURL_LOCK_DATA_PSL", newSViv(CURL_LOCK_DATA_PSL));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_SHARE)
    hv_stores(the_hv, "CURL_LOCK_DATA_SHARE", newSViv(CURL_LOCK_DATA_SHARE));
#endif
#if LIBCURL_HAS(CURL_LOCK_DATA_SSL_SESSION)
    hv_stores(the_hv, "CURL_LOCK_DATA_SSL_SESSION", newSViv(CURL_LOCK_DATA_SSL_SESSION));
#endif
#if LIBCURL_HAS(CURL_LOCK_TYPE_CONNECT)
    hv_stores(the_hv, "CURL_LOCK_TYPE_CONNECT", newSViv(CURL_LOCK_TYPE_CONNECT));
#endif
#if LIBCURL_HAS(CURL_LOCK_TYPE_COOKIE)
    hv_stores(the_hv, "CURL_LOCK_TYPE_COOKIE", newSViv(CURL_LOCK_TYPE_COOKIE));
#endif
#if LIBCURL_HAS(CURL_LOCK_TYPE_DNS)
    hv_stores(the_hv, "CURL_LOCK_TYPE_DNS", newSViv(CURL_LOCK_TYPE_DNS));
#endif
#if LIBCURL_HAS(CURL_LOCK_TYPE_NONE)
    hv_stores(the_hv, "CURL_LOCK_TYPE_NONE", newSViv(CURL_LOCK_TYPE_NONE));
#endif
#if LIBCURL_HAS(CURL_LOCK_TYPE_SSL_SESSION)
    hv_stores(the_hv, "CURL_LOCK_TYPE_SSL_SESSION", newSViv(CURL_LOCK_TYPE_SSL_SESSION));
#endif
#if LIBCURL_HAS(CURL_MAX_HTTP_HEADER)
    hv_stores(the_hv, "CURL_MAX_HTTP_HEADER", newSViv(CURL_MAX_HTTP_HEADER));
#endif
#if LIBCURL_HAS(CURL_MAX_READ_SIZE)
    hv_stores(the_hv, "CURL_MAX_READ_SIZE", newSViv(CURL_MAX_READ_SIZE));
#endif
#if LIBCURL_HAS(CURL_MAX_WRITE_SIZE)
    hv_stores(the_hv, "CURL_MAX_WRITE_SIZE", newSViv(CURL_MAX_WRITE_SIZE));
#endif
#if LIBCURL_HAS(CURL_NETRC_IGNORED)
    hv_stores(the_hv, "CURL_NETRC_IGNORED", newSViv(CURL_NETRC_IGNORED));
#endif
#if LIBCURL_HAS(CURL_NETRC_OPTIONAL)
    hv_stores(the_hv, "CURL_NETRC_OPTIONAL", newSViv(CURL_NETRC_OPTIONAL));
#endif
#if LIBCURL_HAS(CURL_NETRC_REQUIRED)
    hv_stores(the_hv, "CURL_NETRC_REQUIRED", newSViv(CURL_NETRC_REQUIRED));
#endif
#if LIBCURL_HAS(CURL_POLL_IN)
    hv_stores(the_hv, "CURL_POLL_IN", newSViv(CURL_POLL_IN));
#endif
#if LIBCURL_HAS(CURL_POLL_INOUT)
    hv_stores(the_hv, "CURL_POLL_INOUT", newSViv(CURL_POLL_INOUT));
#endif
#if LIBCURL_HAS(CURL_POLL_NONE)
    hv_stores(the_hv, "CURL_POLL_NONE", newSViv(CURL_POLL_NONE));
#endif
#if LIBCURL_HAS(CURL_POLL_OUT)
    hv_stores(the_hv, "CURL_POLL_OUT", newSViv(CURL_POLL_OUT));
#endif
#if LIBCURL_HAS(CURL_POLL_REMOVE)
    hv_stores(the_hv, "CURL_POLL_REMOVE", newSViv(CURL_POLL_REMOVE));
#endif
#if LIBCURL_HAS(CURL_PREREQFUNC_ABORT)
    hv_stores(the_hv, "CURL_PREREQFUNC_ABORT", newSViv(CURL_PREREQFUNC_ABORT));
#endif
#if LIBCURL_HAS(CURL_PREREQFUNC_OK)
    hv_stores(the_hv, "CURL_PREREQFUNC_OK", newSViv(CURL_PREREQFUNC_OK));
#endif
#if LIBCURL_HAS(CURL_PROGRESSFUNC_CONTINUE)
    hv_stores(the_hv, "CURL_PROGRESSFUNC_CONTINUE", newSViv(CURL_PROGRESSFUNC_CONTINUE));
#endif
#if LIBCURL_HAS(CURL_PROGRESS_BAR)
    hv_stores(the_hv, "CURL_PROGRESS_BAR", newSViv(CURL_PROGRESS_BAR));
#endif
#if LIBCURL_HAS(CURL_PROGRESS_STATS)
    hv_stores(the_hv, "CURL_PROGRESS_STATS", newSViv(CURL_PROGRESS_STATS));
#endif
#if LIBCURL_HAS(CURL_PUSH_DENY)
    hv_stores(the_hv, "CURL_PUSH_DENY", newSViv(CURL_PUSH_DENY));
#endif
#if LIBCURL_HAS(CURL_PUSH_ERROROUT)
    hv_stores(the_hv, "CURL_PUSH_ERROROUT", newSViv(CURL_PUSH_ERROROUT));
#endif
#if LIBCURL_HAS(CURL_PUSH_OK)
    hv_stores(the_hv, "CURL_PUSH_OK", newSViv(CURL_PUSH_OK));
#endif
#if LIBCURL_HAS(CURL_READFUNC_ABORT)
    hv_stores(the_hv, "CURL_READFUNC_ABORT", newSViv(CURL_READFUNC_ABORT));
#endif
#if LIBCURL_HAS(CURL_READFUNC_PAUSE)
    hv_stores(the_hv, "CURL_READFUNC_PAUSE", newSViv(CURL_READFUNC_PAUSE));
#endif
#if LIBCURL_HAS(CURL_REDIR_GET_ALL)
    hv_stores(the_hv, "CURL_REDIR_GET_ALL", newSViv(CURL_REDIR_GET_ALL));
#endif
#if LIBCURL_HAS(CURL_REDIR_POST_301)
    hv_stores(the_hv, "CURL_REDIR_POST_301", newSViv(CURL_REDIR_POST_301));
#endif
#if LIBCURL_HAS(CURL_REDIR_POST_302)
    hv_stores(the_hv, "CURL_REDIR_POST_302", newSViv(CURL_REDIR_POST_302));
#endif
#if LIBCURL_HAS(CURL_REDIR_POST_303)
    hv_stores(the_hv, "CURL_REDIR_POST_303", newSViv(CURL_REDIR_POST_303));
#endif
#if LIBCURL_HAS(CURL_REDIR_POST_ALL)
    hv_stores(the_hv, "CURL_REDIR_POST_ALL", newSViv(CURL_REDIR_POST_ALL));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_ANNOUNCE)
    hv_stores(the_hv, "CURL_RTSPREQ_ANNOUNCE", newSViv(CURL_RTSPREQ_ANNOUNCE));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_DESCRIBE)
    hv_stores(the_hv, "CURL_RTSPREQ_DESCRIBE", newSViv(CURL_RTSPREQ_DESCRIBE));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_GET_PARAMETER)
    hv_stores(the_hv, "CURL_RTSPREQ_GET_PARAMETER", newSViv(CURL_RTSPREQ_GET_PARAMETER));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_NONE)
    hv_stores(the_hv, "CURL_RTSPREQ_NONE", newSViv(CURL_RTSPREQ_NONE));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_OPTIONS)
    hv_stores(the_hv, "CURL_RTSPREQ_OPTIONS", newSViv(CURL_RTSPREQ_OPTIONS));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_PAUSE)
    hv_stores(the_hv, "CURL_RTSPREQ_PAUSE", newSViv(CURL_RTSPREQ_PAUSE));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_PLAY)
    hv_stores(the_hv, "CURL_RTSPREQ_PLAY", newSViv(CURL_RTSPREQ_PLAY));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_RECEIVE)
    hv_stores(the_hv, "CURL_RTSPREQ_RECEIVE", newSViv(CURL_RTSPREQ_RECEIVE));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_RECORD)
    hv_stores(the_hv, "CURL_RTSPREQ_RECORD", newSViv(CURL_RTSPREQ_RECORD));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_SETUP)
    hv_stores(the_hv, "CURL_RTSPREQ_SETUP", newSViv(CURL_RTSPREQ_SETUP));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_SET_PARAMETER)
    hv_stores(the_hv, "CURL_RTSPREQ_SET_PARAMETER", newSViv(CURL_RTSPREQ_SET_PARAMETER));
#endif
#if LIBCURL_HAS(CURL_RTSPREQ_TEARDOWN)
    hv_stores(the_hv, "CURL_RTSPREQ_TEARDOWN", newSViv(CURL_RTSPREQ_TEARDOWN));
#endif
#if LIBCURL_HAS(CURL_SEEKFUNC_CANTSEEK)
    hv_stores(the_hv, "CURL_SEEKFUNC_CANTSEEK", newSViv(CURL_SEEKFUNC_CANTSEEK));
#endif
#if LIBCURL_HAS(CURL_SEEKFUNC_FAIL)
    hv_stores(the_hv, "CURL_SEEKFUNC_FAIL", newSViv(CURL_SEEKFUNC_FAIL));
#endif
#if LIBCURL_HAS(CURL_SEEKFUNC_OK)
    hv_stores(the_hv, "CURL_SEEKFUNC_OK", newSViv(CURL_SEEKFUNC_OK));
#endif
#if LIBCURL_HAS(CURL_SOCKET_BAD)
    hv_stores(the_hv, "CURL_SOCKET_BAD", newSViv(CURL_SOCKET_BAD));
#endif
#if LIBCURL_HAS(CURL_SOCKET_TIMEOUT)
    hv_stores(the_hv, "CURL_SOCKET_TIMEOUT", newSViv(CURL_SOCKET_TIMEOUT));
#endif
#if LIBCURL_HAS(CURL_SOCKOPT_ALREADY_CONNECTED)
    hv_stores(the_hv, "CURL_SOCKOPT_ALREADY_CONNECTED", newSViv(CURL_SOCKOPT_ALREADY_CONNECTED));
#endif
#if LIBCURL_HAS(CURL_SOCKOPT_ERROR)
    hv_stores(the_hv, "CURL_SOCKOPT_ERROR", newSViv(CURL_SOCKOPT_ERROR));
#endif
#if LIBCURL_HAS(CURL_SOCKOPT_OK)
    hv_stores(the_hv, "CURL_SOCKOPT_OK", newSViv(CURL_SOCKOPT_OK));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_DEFAULT)
    hv_stores(the_hv, "CURL_SSLVERSION_DEFAULT", newSViv(CURL_SSLVERSION_DEFAULT));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_DEFAULT)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_DEFAULT", newSViv(CURL_SSLVERSION_MAX_DEFAULT));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_NONE)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_NONE", newSViv(CURL_SSLVERSION_MAX_NONE));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_TLSv1_0)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_TLSv1_0", newSViv(CURL_SSLVERSION_MAX_TLSv1_0));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_TLSv1_1)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_TLSv1_1", newSViv(CURL_SSLVERSION_MAX_TLSv1_1));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_TLSv1_2)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_TLSv1_2", newSViv(CURL_SSLVERSION_MAX_TLSv1_2));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_MAX_TLSv1_3)
    hv_stores(the_hv, "CURL_SSLVERSION_MAX_TLSv1_3", newSViv(CURL_SSLVERSION_MAX_TLSv1_3));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_SSLv2)
    hv_stores(the_hv, "CURL_SSLVERSION_SSLv2", newSViv(CURL_SSLVERSION_SSLv2));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_SSLv3)
    hv_stores(the_hv, "CURL_SSLVERSION_SSLv3", newSViv(CURL_SSLVERSION_SSLv3));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_TLSv1)
    hv_stores(the_hv, "CURL_SSLVERSION_TLSv1", newSViv(CURL_SSLVERSION_TLSv1));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_TLSv1_0)
    hv_stores(the_hv, "CURL_SSLVERSION_TLSv1_0", newSViv(CURL_SSLVERSION_TLSv1_0));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_TLSv1_1)
    hv_stores(the_hv, "CURL_SSLVERSION_TLSv1_1", newSViv(CURL_SSLVERSION_TLSv1_1));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_TLSv1_2)
    hv_stores(the_hv, "CURL_SSLVERSION_TLSv1_2", newSViv(CURL_SSLVERSION_TLSv1_2));
#endif
#if LIBCURL_HAS(CURL_SSLVERSION_TLSv1_3)
    hv_stores(the_hv, "CURL_SSLVERSION_TLSv1_3", newSViv(CURL_SSLVERSION_TLSv1_3));
#endif
#if LIBCURL_HAS(CURL_TIMECOND_IFMODSINCE)
    hv_stores(the_hv, "CURL_TIMECOND_IFMODSINCE", newSViv(CURL_TIMECOND_IFMODSINCE));
#endif
#if LIBCURL_HAS(CURL_TIMECOND_IFUNMODSINCE)
    hv_stores(the_hv, "CURL_TIMECOND_IFUNMODSINCE", newSViv(CURL_TIMECOND_IFUNMODSINCE));
#endif
#if LIBCURL_HAS(CURL_TIMECOND_LASTMOD)
    hv_stores(the_hv, "CURL_TIMECOND_LASTMOD", newSViv(CURL_TIMECOND_LASTMOD));
#endif
#if LIBCURL_HAS(CURL_TIMECOND_NONE)
    hv_stores(the_hv, "CURL_TIMECOND_NONE", newSViv(CURL_TIMECOND_NONE));
#endif
#if LIBCURL_HAS(CURL_TLSAUTH_NONE)
    hv_stores(the_hv, "CURL_TLSAUTH_NONE", newSViv(CURL_TLSAUTH_NONE));
#endif
#if LIBCURL_HAS(CURL_TLSAUTH_SRP)
    hv_stores(the_hv, "CURL_TLSAUTH_SRP", newSViv(CURL_TLSAUTH_SRP));
#endif
#if LIBCURL_HAS(CURL_TRAILERFUNC_ABORT)
    hv_stores(the_hv, "CURL_TRAILERFUNC_ABORT", newSViv(CURL_TRAILERFUNC_ABORT));
#endif
#if LIBCURL_HAS(CURL_TRAILERFUNC_OK)
    hv_stores(the_hv, "CURL_TRAILERFUNC_OK", newSViv(CURL_TRAILERFUNC_OK));
#endif
#if LIBCURL_HAS(CURL_UPKEEP_INTERVAL_DEFAULT)
    hv_stores(the_hv, "CURL_UPKEEP_INTERVAL_DEFAULT", newSViv(CURL_UPKEEP_INTERVAL_DEFAULT));
#endif
#if LIBCURL_HAS(CURL_VERSION_ALTSVC)
    hv_stores(the_hv, "CURL_VERSION_ALTSVC", newSViv(CURL_VERSION_ALTSVC));
#endif
#if LIBCURL_HAS(CURL_VERSION_ASYNCHDNS)
    hv_stores(the_hv, "CURL_VERSION_ASYNCHDNS", newSViv(CURL_VERSION_ASYNCHDNS));
#endif
#if LIBCURL_HAS(CURL_VERSION_BROTLI)
    hv_stores(the_hv, "CURL_VERSION_BROTLI", newSViv(CURL_VERSION_BROTLI));
#endif
#if LIBCURL_HAS(CURL_VERSION_CONV)
    hv_stores(the_hv, "CURL_VERSION_CONV", newSViv(CURL_VERSION_CONV));
#endif
#if LIBCURL_HAS(CURL_VERSION_CURLDEBUG)
    hv_stores(the_hv, "CURL_VERSION_CURLDEBUG", newSViv(CURL_VERSION_CURLDEBUG));
#endif
#if LIBCURL_HAS(CURL_VERSION_DEBUG)
    hv_stores(the_hv, "CURL_VERSION_DEBUG", newSViv(CURL_VERSION_DEBUG));
#endif
#if LIBCURL_HAS(CURL_VERSION_GSASL)
    hv_stores(the_hv, "CURL_VERSION_GSASL", newSViv(CURL_VERSION_GSASL));
#endif
#if LIBCURL_HAS(CURL_VERSION_GSSAPI)
    hv_stores(the_hv, "CURL_VERSION_GSSAPI", newSViv(CURL_VERSION_GSSAPI));
#endif
#if LIBCURL_HAS(CURL_VERSION_GSSNEGOTIATE)
    hv_stores(the_hv, "CURL_VERSION_GSSNEGOTIATE", newSViv(CURL_VERSION_GSSNEGOTIATE));
#endif
#if LIBCURL_HAS(CURL_VERSION_HSTS)
    hv_stores(the_hv, "CURL_VERSION_HSTS", newSViv(CURL_VERSION_HSTS));
#endif
#if LIBCURL_HAS(CURL_VERSION_HTTP2)
    hv_stores(the_hv, "CURL_VERSION_HTTP2", newSViv(CURL_VERSION_HTTP2));
#endif
#if LIBCURL_HAS(CURL_VERSION_HTTP3)
    hv_stores(the_hv, "CURL_VERSION_HTTP3", newSViv(CURL_VERSION_HTTP3));
#endif
#if LIBCURL_HAS(CURL_VERSION_HTTPS_PROXY)
    hv_stores(the_hv, "CURL_VERSION_HTTPS_PROXY", newSViv(CURL_VERSION_HTTPS_PROXY));
#endif
#if LIBCURL_HAS(CURL_VERSION_IDN)
    hv_stores(the_hv, "CURL_VERSION_IDN", newSViv(CURL_VERSION_IDN));
#endif
#if LIBCURL_HAS(CURL_VERSION_IPV6)
    hv_stores(the_hv, "CURL_VERSION_IPV6", newSViv(CURL_VERSION_IPV6));
#endif
#if LIBCURL_HAS(CURL_VERSION_KERBEROS4)
    hv_stores(the_hv, "CURL_VERSION_KERBEROS4", newSViv(CURL_VERSION_KERBEROS4));
#endif
#if LIBCURL_HAS(CURL_VERSION_KERBEROS5)
    hv_stores(the_hv, "CURL_VERSION_KERBEROS5", newSViv(CURL_VERSION_KERBEROS5));
#endif
#if LIBCURL_HAS(CURL_VERSION_LARGEFILE)
    hv_stores(the_hv, "CURL_VERSION_LARGEFILE", newSViv(CURL_VERSION_LARGEFILE));
#endif
#if LIBCURL_HAS(CURL_VERSION_LIBZ)
    hv_stores(the_hv, "CURL_VERSION_LIBZ", newSViv(CURL_VERSION_LIBZ));
#endif
#if LIBCURL_HAS(CURL_VERSION_MULTI_SSL)
    hv_stores(the_hv, "CURL_VERSION_MULTI_SSL", newSViv(CURL_VERSION_MULTI_SSL));
#endif
#if LIBCURL_HAS(CURL_VERSION_NTLM)
    hv_stores(the_hv, "CURL_VERSION_NTLM", newSViv(CURL_VERSION_NTLM));
#endif
#if LIBCURL_HAS(CURL_VERSION_NTLM_WB)
    hv_stores(the_hv, "CURL_VERSION_NTLM_WB", newSViv(CURL_VERSION_NTLM_WB));
#endif
#if LIBCURL_HAS(CURL_VERSION_PSL)
    hv_stores(the_hv, "CURL_VERSION_PSL", newSViv(CURL_VERSION_PSL));
#endif
#if LIBCURL_HAS(CURL_VERSION_SPNEGO)
    hv_stores(the_hv, "CURL_VERSION_SPNEGO", newSViv(CURL_VERSION_SPNEGO));
#endif
#if LIBCURL_HAS(CURL_VERSION_SSL)
    hv_stores(the_hv, "CURL_VERSION_SSL", newSViv(CURL_VERSION_SSL));
#endif
#if LIBCURL_HAS(CURL_VERSION_SSPI)
    hv_stores(the_hv, "CURL_VERSION_SSPI", newSViv(CURL_VERSION_SSPI));
#endif
#if LIBCURL_HAS(CURL_VERSION_THREADSAFE)
    hv_stores(the_hv, "CURL_VERSION_THREADSAFE", newSViv(CURL_VERSION_THREADSAFE));
#endif
#if LIBCURL_HAS(CURL_VERSION_TLSAUTH_SRP)
    hv_stores(the_hv, "CURL_VERSION_TLSAUTH_SRP", newSViv(CURL_VERSION_TLSAUTH_SRP));
#endif
#if LIBCURL_HAS(CURL_VERSION_UNICODE)
    hv_stores(the_hv, "CURL_VERSION_UNICODE", newSViv(CURL_VERSION_UNICODE));
#endif
#if LIBCURL_HAS(CURL_VERSION_UNIX_SOCKETS)
    hv_stores(the_hv, "CURL_VERSION_UNIX_SOCKETS", newSViv(CURL_VERSION_UNIX_SOCKETS));
#endif
#if LIBCURL_HAS(CURL_VERSION_ZSTD)
    hv_stores(the_hv, "CURL_VERSION_ZSTD", newSViv(CURL_VERSION_ZSTD));
#endif
#if LIBCURL_HAS(CURL_WAIT_POLLIN)
    hv_stores(the_hv, "CURL_WAIT_POLLIN", newSViv(CURL_WAIT_POLLIN));
#endif
#if LIBCURL_HAS(CURL_WAIT_POLLOUT)
    hv_stores(the_hv, "CURL_WAIT_POLLOUT", newSViv(CURL_WAIT_POLLOUT));
#endif
#if LIBCURL_HAS(CURL_WAIT_POLLPRI)
    hv_stores(the_hv, "CURL_WAIT_POLLPRI", newSViv(CURL_WAIT_POLLPRI));
#endif
#if LIBCURL_HAS(CURL_WRITEFUNC_ERROR)
    hv_stores(the_hv, "CURL_WRITEFUNC_ERROR", newSViv(CURL_WRITEFUNC_ERROR));
#endif
#if LIBCURL_HAS(CURL_WRITEFUNC_PAUSE)
    hv_stores(the_hv, "CURL_WRITEFUNC_PAUSE", newSViv(CURL_WRITEFUNC_PAUSE));
#endif
#if LIBCURL_HAS(CURL_ZERO_TERMINATED)
    hv_stores(the_hv, "CURL_ZERO_TERMINATED", newSViv(CURL_ZERO_TERMINATED));
#endif
