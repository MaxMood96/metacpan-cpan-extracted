NAME
    App::ClipboardUtils - CLI utilities related to clipboard

VERSION
    This document describes version 0.014 of App::ClipboardUtils (from Perl
    distribution App-ClipboardUtils), released on 2025-10-16.

DESCRIPTION
    This distribution contains the following CLI utilities related to
    clipboard:

    1. add-clipboard-content
    2. ca
    3. cg
    4. clear-clipboard-content
    5. clear-clipboard-history
    6. clipadd
    7. clipget
    8. cliptee
    9. ct
    10. detect-clipboard-manager
    11. get-clipboard-content
    12. get-clipboard-history-item
    13. list-clipboard-history
    14. tee-clipboard-content

FUNCTIONS
  add_clipboard_content
    Usage:

     add_clipboard_content(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Add a new content to the clipboard.

    For "xclip": when adding content, the primary selection is set. The
    clipboard content is unchanged.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   chomp_newline => *bool*

        Remove trailing newlines before adding item to clipboard.

    *   clipboard_manager => *str*

        Explicitly set clipboard manager to use.

        The default, when left undef, is to detect what clipboard manager is
        running.

    *   command_line => *str*

        For every line of input in *stdin*, execute a command, feed it the
        input line, and add the output to clipboard.

        Note that when you use this option, the "--content" argument is
        ignored. Input is taken from stdin. With "--tee", each output will
        be printed to stdout. After eof, the utility will return empty
        result.

        An example for using this option (safer is a utility from
        App::safer):

         % clipadd -c safer --tee
         Foo Bar, Co., Ltd.
         foo-bar-co-ltd
         BaZZ, Co., Ltd.
         bazz-co-ltd
         _

    *   content => *str*

        (No description)

    *   fragments => *bool*

        Only add text fragments inside content.

        Cannot be used together with "--split-by" or "--command-line"
        option.

        Example content:

         FAQS
         ====
 
         Q: Will the Thingamagic explode under extreme pressure?
         A: No doubt.
 
         # BEGIN clipadd id=2
         Q: How much pressure should I apply to the Thingamagic initially?
         A: Not that much, really. It will pressurize itself eventually.
         # END clipadd id=2
 
         # BEGIN clipadd id=1
         Q: What is the appropriate age to start using the Thingamagic?
         A: It depends on whether your kid is smart (or stupid) enough.
         # END clipadd id=1
 
         Q: Another question?
         A: Another half-assed answer.

        Command:

         % cat faq.txt | clipadd --fragments

        Read Text::Fragment for more details on text fragments.

    *   split_by => *str_or_re*

        Split content by specified string/regex, add the split content as
        multiple clipboard entries.

        Cannot be used together with "--fragments" or "--command-line"
        option.

        Note that if you supply a regex, you should not have any capture
        groups in the regex.

    *   tee => *true*

        Pass stdin to stdout.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  tee_clipboard_content
    Usage:

     tee_clipboard_content(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Shortcut for add-clipboard-content --tee.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   chomp_newline => *bool*

        Remove trailing newlines before adding item to clipboard.

    *   clipboard_manager => *str*

        Explicitly set clipboard manager to use.

        The default, when left undef, is to detect what clipboard manager is
        running.

    *   content => *str*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-ClipboardUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-ClipboardUtils>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2025 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-ClipboardUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

