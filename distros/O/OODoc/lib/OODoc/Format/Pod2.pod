=encoding utf8

=head1 NAME

OODoc::Format::Pod2 - Produce POD pages from the doc tree with a template

=head1 INHERITANCE

 OODoc::Format::Pod2
   is an OODoc::Format::Pod
   is an OODoc::Format
   is an OODoc::Object

 OODoc::Format::Pod2
   is an OODoc::Format::TemplateMagic

=head1 SYNOPSIS

 my $doc = OODoc->new(...);
 $doc->create
   ( pod2 =>   # or 'OODoc::Format::Pod2'
     manual_format => [
        show_examples => 'NO',
     ],
   );

=head1 DESCRIPTION

Create manual pages in the POD syntax, using the Template::Magic
template system.  It may be a bit simpler to configure the outcome
using the template, than using L<OODoc::Format::Pod|OODoc::Format::Pod>, however you
first need to install L<Bundle::Template::Magic>.

Extends L<"DESCRIPTION" in OODoc::Format::TemplateMagic|OODoc::Format::TemplateMagic/"DESCRIPTION">.
 
Extends L<"DESCRIPTION" in OODoc::Format::Pod|OODoc::Format::Pod/"DESCRIPTION">.
 
=head1 OVERLOADED

Extends L<"OVERLOADED" in OODoc::Format::Pod|OODoc::Format::Pod/"OVERLOADED">.
 
=over 4

=item overload: B<'==' and '!=' (numeric comparison)>

Inherited, see L<OODoc::Object/"OVERLOADED">

=item overload: B<'bool'>

Inherited, see L<OODoc::Object/"OVERLOADED">

=back

=head1 METHODS

Extends L<"METHODS" in OODoc::Format::TemplateMagic|OODoc::Format::TemplateMagic/"METHODS">.
 
Extends L<"METHODS" in OODoc::Format::Pod|OODoc::Format::Pod/"METHODS">.
 
=over 4

=item $obj-E<gt>B<zoneGetParameters>($zone|STRING)

Inherited, see L<OODoc::Format::TemplateMagic/"METHODS">

=back

=head2 Constructors

Extends L<"Constructors" in OODoc::Format::Pod|OODoc::Format::Pod/"Constructors">.
 
=over 4

=item $class-E<gt>B<new>(%options)

Inherited, see L<OODoc::Object/"Constructors">

 -Option  --Defined in     --Default
  format    OODoc::Format    'pod2'
  manifest  OODoc::Format    undef
  project   OODoc::Format    <required>
  version   OODoc::Format    <required>
  workdir   OODoc::Format    <required>

=over 2

=item format => 'pod*'|'html*'|PACKAGE

=item manifest => OBJECT

=item project => STRING

=item version => STRING

=item workdir => DIRECTORY

=back

=back

=head2 Attributes

Extends L<"Attributes" in OODoc::Format::Pod|OODoc::Format::Pod/"Attributes">.
 
=over 4

=item $obj-E<gt>B<format>()

Inherited, see L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<manifest>()

Inherited, see L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<project>()

Inherited, see L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<unique>()

Inherited, see L<OODoc::Object/"Attributes">

=item $obj-E<gt>B<version>()

Inherited, see L<OODoc::Format/"Attributes">

=item $obj-E<gt>B<workdir>()

Inherited, see L<OODoc::Format/"Attributes">

=back

=head2 Manual Repository

Extends L<"Manual Repository" in OODoc::Format::Pod|OODoc::Format::Pod/"Manual Repository">.
 
=over 4

=item $obj-E<gt>B<addManual>($manual)

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<findManual>($name)

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<mainManual>($name)

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<manuals>()

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<manualsForPackage>($name)

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<packageNames>()

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<publicationIndex>()

Inherited, see L<OODoc::Object/"Manual Repository">

=item $obj-E<gt>B<publish>(\%options)

Inherited, see L<OODoc::Object/"Manual Repository">

=back

=head2 Page generation

Extends L<"Page generation" in OODoc::Format::Pod|OODoc::Format::Pod/"Page generation">.
 
=over 4

=item $obj-E<gt>B<cleanup>($manual, $text, %options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<createManual>(%options)

Inherited, see L<OODoc::Format::Pod/"Page generation">

 -Option  --Defined in        --Default
  append    OODoc::Format::Pod  ''
  manual    OODoc::Format       <required>
  project   OODoc::Format       <required>
  template                      <in code>

=over 2

=item append => STRING|CODE

=item manual => MANUAL

=item project => STRING

=item template => FILENAME

The default template is included in the DATA segment of
L<OODoc::Format::Pod2|OODoc::Format::Pod2>.  You may start your own template
by copying it to a file.

=back

=item $obj-E<gt>B<createOtherPages>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<createPages>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $any-E<gt>B<link>( $manual, $object, [$text, \%settings] )

Inherited, see L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<removeMarkup>(STRING)

Inherited, see L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<showChapter>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showChapterIndex>($file, $chapter, $indent)

Inherited, see L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<showExamples>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionExpand>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionTable>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionUse>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptionalChapter>($name, %options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showOptions>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showRequiredChapter>($name, %options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showStructureRefer>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutine>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineDescription>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineName>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutineUse>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<showSubroutines>(%options)

Inherited, see L<OODoc::Format/"Page generation">

=item $obj-E<gt>B<simplifyPod>($in, $out)

Inherited, see L<OODoc::Format::Pod/"Page generation">

=item $obj-E<gt>B<templateChapter>()

Z<>

=item $obj-E<gt>B<writeTable>(%options)

Inherited, see L<OODoc::Format::Pod/"Page generation">

=back

=head2 Commonly used functions

Extends L<"Commonly used functions" in OODoc::Format::Pod|OODoc::Format::Pod/"Commonly used functions">.
 
=over 4

=item $any-E<gt>B<filenameToPackage>($filename)

Inherited, see L<OODoc::Object/"Commonly used functions">

=item $any-E<gt>B<mkdirhier>($directory)

Inherited, see L<OODoc::Object/"Commonly used functions">

=back

=head1 DETAILS

Extends L<"DETAILS" in OODoc::Format::Pod|OODoc::Format::Pod/"DETAILS">.
 
=head1 DIAGNOSTICS

=over 4

=item Error: cannot read prelimary pod from $infn: $!

Z<>

=item Error: cannot write final pod to $outfn: $!

Z<>

=item Error: chapter without name in template.

In your template file, a {chapter} statement is used, which is
erroneous, because it requires a chapter name.

=item Error: manual definition requires manual object

A call to L<addManual()|OODoc::Object/"Manual Repository"> expects a new manual object (a L<OODoc::Manual|OODoc::Manual>),
however an incompatible thing was passed.  Usually, intended was a call
to L<manualsForPackage()|OODoc::Object/"Manual Repository"> or L<mainManual()|OODoc::Object/"Manual Repository">.

=item Warning: missing required chapter $name in $manual

Z<>

=item Warning: no meaning for container $container in chapter block

Z<>

=item Warning: unknown subroutine type $type for $name in $manual

Z<>

=back

=head1 SEE ALSO

This module is part of OODoc version 3.01,
built on August 14, 2025. Website: F<https://perl.overmeer.net/oodoc/>

=head1 LICENSE

For contributors see file ChangeLog.

This software is copyright (c) 2003-2025 by Mark Overmeer.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

