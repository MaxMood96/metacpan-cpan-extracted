# This Makefile is for the MyTest extension to perl.
#
# It was generated automatically by MakeMaker version
# 7.70 (Revision: 77000) from the contents of
# Makefile.PL. Don't edit this file, edit Makefile.PL instead.
#
#       ANY CHANGES MADE HERE WILL BE LOST!
#
#   MakeMaker ARGV: ()
#

#   MakeMaker Parameters:

#     ABSTRACT => q[test module]
#     BUILD_REQUIRES => {  }
#     C => [q[t/typemap/function.cc], q[t/typemap/ref.cc], q[t/svapi/array.cc], q[t/svapi/glob.cc], q[t/svapi/hash.cc], q[t/svapi/io.cc], q[t/svapi/object.cc], q[t/svapi/ref.cc], q[t/svapi/scalar.cc], q[t/svapi/scope.cc], q[t/svapi/simple.cc], q[t/svapi/stash.cc], q[t/svapi/sub.cc], q[t/svapi/sv.cc], q[t/typemap/callback_dispatcher_xsgen.cc], q[t/typemap/typemap_xsgen.cc], q[t/MyTest_xsgen.cc], q[t/typemap/object/object_xsgen.cc], q[t/cookbook/cookbook_xsgen.cc]]
#     CC => q[c++]
#     CCFLAGS => q[-Wall -Wextra  -std=c++14 -fno-omit-frame-pointer -g -ggdb3 -O0 -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2 -o $@]
#     CONFIGURE_REQUIRES => { Test::Catch=>q[v2.0.2], XS::Install=>q[v1.4.0], XS::libcatch=>q[v3.7.1.1], XS::libpanda=>q[v1.5.11], next::XS=>q[v1.0.8] }
#     DEFINE => q[]
#     INC => q[-Isrc -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/next/XS.x/i -I/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libpanda.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libcatch.x/i]
#     LD => q[$(CC)]
#     LDDLFLAGS => q[-shared -O2 -L/usr/local/lib -fstack-protector-strong]
#     LDFROM => q[$(OBJECT) $(INST_ARCHLIB)/auto/XS/Framework/Framework.so]
#     LIBS => undef
#     MAKEFILE => q[Makefile.test]
#     NAME => q[MyTest]
#     NO_MYMETA => q[1]
#     OBJECT => [q[t/typemap/function$(OBJ_EXT)], q[t/typemap/ref$(OBJ_EXT)], q[t/svapi/array$(OBJ_EXT)], q[t/svapi/glob$(OBJ_EXT)], q[t/svapi/hash$(OBJ_EXT)], q[t/svapi/io$(OBJ_EXT)], q[t/svapi/object$(OBJ_EXT)], q[t/svapi/ref$(OBJ_EXT)], q[t/svapi/scalar$(OBJ_EXT)], q[t/svapi/scope$(OBJ_EXT)], q[t/svapi/simple$(OBJ_EXT)], q[t/svapi/stash$(OBJ_EXT)], q[t/svapi/sub$(OBJ_EXT)], q[t/svapi/sv$(OBJ_EXT)], q[t/typemap/callback_dispatcher_xsgen$(OBJ_EXT)], q[t/typemap/typemap_xsgen$(OBJ_EXT)], q[t/MyTest_xsgen$(OBJ_EXT)], q[t/typemap/object/object_xsgen$(OBJ_EXT)], q[t/cookbook/cookbook_xsgen$(OBJ_EXT)]]
#     OPTIMIZE => q[-O0]
#     PM => { lib/XS/ErrorCode.pm=>q[$(INST_ARCHLIB)/XS/ErrorCode.pm], lib/XS/ErrorCode.pod=>q[$(INST_ARCHLIB)/XS/ErrorCode.pod], lib/XS/Framework.pm=>q[$(INST_ARCHLIB)/XS/Framework.pm], lib/XS/Framework.pod=>q[$(INST_ARCHLIB)/XS/Framework.pod], lib/XS/Framework/CallbackDispatcher.pm=>q[$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher.pm], lib/XS/Framework/CallbackDispatcher.pod=>q[$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher.pod], lib/XS/Framework/CallbackDispatcher/Event.pm=>q[$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher/Event.pm], lib/XS/Framework/Manual/Cookbook.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/Cookbook.pod], lib/XS/Framework/Manual/SVAPI.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI.pod], lib/XS/Framework/Manual/SVAPI/Array.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Array.pod], lib/XS/Framework/Manual/SVAPI/Glob.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Glob.pod], lib/XS/Framework/Manual/SVAPI/Hash.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Hash.pod], lib/XS/Framework/Manual/SVAPI/Io.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Io.pod], lib/XS/Framework/Manual/SVAPI/List.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/List.pod], lib/XS/Framework/Manual/SVAPI/Object.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Object.pod], lib/XS/Framework/Manual/SVAPI/Ref.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Ref.pod], lib/XS/Framework/Manual/SVAPI/Scalar.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Scalar.pod], lib/XS/Framework/Manual/SVAPI/Scope.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Scope.pod], lib/XS/Framework/Manual/SVAPI/Simple.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Simple.pod], lib/XS/Framework/Manual/SVAPI/Stash.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Stash.pod], lib/XS/Framework/Manual/SVAPI/Sub.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Sub.pod], lib/XS/Framework/Manual/SVAPI/Sv.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Sv.pod], lib/XS/Framework/Manual/SVAPI/exceptions.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/exceptions.pod], lib/XS/Framework/Manual/SVAPI/perl_destroy.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/perl_destroy.pod], lib/XS/Framework/Manual/SVAPI/threads.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/threads.pod], lib/XS/Framework/Manual/Typemap.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/Typemap.pod], lib/XS/Framework/Manual/recipe01.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe01.pod], lib/XS/Framework/Manual/recipe02.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe02.pod], lib/XS/Framework/Manual/recipe03.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe03.pod], lib/XS/Framework/Manual/recipe04.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe04.pod], lib/XS/Framework/Manual/recipe05.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe05.pod], lib/XS/Framework/Manual/recipe06.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe06.pod], lib/XS/Framework/Manual/recipe07.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe07.pod], lib/XS/Framework/Manual/recipe08.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe08.pod], lib/XS/Framework/Manual/recipe09.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe09.pod], lib/XS/Framework/Manual/recipe10.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe10.pod], lib/XS/Framework/Manual/recipe11.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe11.pod], lib/XS/Framework/Manual/recipe12.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe12.pod], lib/XS/Framework/Manual/recipe13.pod=>q[$(INST_ARCHLIB)/XS/Framework/Manual/recipe13.pod], lib/XS/Framework/ParseXS.pm=>q[$(INST_ARCHLIB)/XS/Framework/ParseXS.pm], lib/XS/STL/ErrorCategory.pm=>q[$(INST_ARCHLIB)/XS/STL/ErrorCategory.pm], lib/XS/STL/ErrorCategory.pod=>q[$(INST_ARCHLIB)/XS/STL/ErrorCategory.pod], lib/XS/STL/ErrorCode.pm=>q[$(INST_ARCHLIB)/XS/STL/ErrorCode.pm], lib/XS/STL/ErrorCode.pod=>q[$(INST_ARCHLIB)/XS/STL/ErrorCode.pod] }
#     PMLIBDIRS => [q[lib]]
#     PREREQ_PM => { Test::Catch=>q[v2.0.2], Test::Deep=>q[0], Test::More=>q[0], Test::Simple=>q[0.96], XS::Install=>q[v1.4.0], XS::libcatch=>q[v3.7.1.1], XS::libpanda=>q[v1.5.11], next::XS=>q[v1.0.8] }
#     TEST_REQUIRES => { Test::Deep=>q[0], Test::More=>q[0], Test::Simple=>q[0.96] }
#     TYPEMAPS => [q[/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap], q[/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap], q[typemap], q[typemap64]]
#     VERSION => q[0.0.0]
#     XS => { t/MyTest.xs=>q[t/MyTest_xsgen.cc], t/cookbook/cookbook.xs=>q[t/cookbook/cookbook_xsgen.cc], t/typemap/callback_dispatcher.xs=>q[t/typemap/callback_dispatcher_xsgen.cc], t/typemap/object/object.xs=>q[t/typemap/object/object_xsgen.cc], t/typemap/typemap.xs=>q[t/typemap/typemap_xsgen.cc] }
#     XSOPT => q[-hiertype -C++ -hiertype -C++]
#     clean => { FILES=>q[ $(O_FILES)] }
#     postamble => { 1=>q[XSUBPPRUN = $(PERLRUN) -Ilib -MXS::Framework::ParseXS -MXS::Install::ParseXS $(XSUBPP)], 10=>q[t/svapi/glob$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h], 11=>q[t/svapi/hash$(OBJ_EXT) : src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs.h src/xs/Object.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h], 12=>q[t/svapi/io$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap/error.h src/xs/Array.h src/xs/typemap/base.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h], 13=>q[t/svapi/object$(OBJ_EXT) : src/xs/catch.h src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Simple.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/typemap/containers.h t/svapi/test.h src/xs/basic.h src/xs/KeyProxy.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/object.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h], 14=>q[t/svapi/ref$(OBJ_EXT) : src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/catch.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/KeyProxy.h src/xs/basic.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h], 15=>q[t/svapi/scalar$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h], 16=>q[t/svapi/scope$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scope.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h], 17=>q[t/svapi/simple$(OBJ_EXT) : src/xs/Simple.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/catch.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs.h src/xs/Object.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/containers.h src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h], 18=>q[t/svapi/stash$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs.h src/xs/Object.h src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h], 19=>q[t/svapi/sub$(OBJ_EXT) : src/xs/function.h src/xs/catch.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h t/svapi/test.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h], 2=>q[t/MyTest_xsgen.cc : t/MyTest.xs  $(FIRST_MAKEFILE) 	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/MyTest.xs > t/MyTest.xsc 	$(MV) t/MyTest.xsc t/MyTest_xsgen.cc], 20=>q[t/svapi/sv$(OBJ_EXT) : src/xs/catch.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h t/svapi/test.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs.h src/xs/Object.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h], 21=>q[t/typemap/callback_dispatcher_xsgen$(OBJ_EXT) : src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/function.h src/xs/catch.h src/xs/CallbackDispatcher.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/typemap/auto.h src/xs/typemap/string.h src/xs/Glob.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/typemap/containers.h src/xs/basic.h src/xs/KeyProxy.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h], 22=>q[t/typemap/typemap_xsgen$(OBJ_EXT) : src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/Stash.h src/xs/typemap.h src/xs/Sv.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h src/xs.h src/xs/Object.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/object.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/catch.h t/typemap/tmtest.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/typemap/expected.h], 23=>q[t/MyTest_xsgen$(OBJ_EXT) : src/xs/Sub.h src/xs/typemap/svapi.h src/xs/typemap/auto.h src/xs/Simple.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/catch.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h], 24=>q[t/typemap/object/object_xsgen$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h t/typemap/tmtest.h src/xs/Simple.h src/xs/CallbackDispatcher.h src/xs/catch.h src/xs/function.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs/Object.h src/xs.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h], 25=>q[t/cookbook/cookbook_xsgen$(OBJ_EXT) : src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/catch.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Array.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h], 26=>q[object : $(OBJECT)], 27=>q[sync_bin_deps: 	$(PERL) -MXS::Install::Util -e 'XS::Install::Util::cmd_sync_bin_deps()' MyTest XS::libpanda Test::Catch XS::Install next::XS XS::libcatch], 28=>q[install :: sync_bin_deps], 3=>q[t/typemap/callback_dispatcher_xsgen.cc : t/typemap/callback_dispatcher.xs  $(FIRST_MAKEFILE) 	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/callback_dispatcher.xs > t/typemap/callback_dispatcher.xsc 	$(MV) t/typemap/callback_dispatcher.xsc t/typemap/callback_dispatcher_xsgen.cc], 4=>q[t/typemap/typemap_xsgen.cc : t/typemap/typemap.xs t/typemap/not_null.xsi t/typemap/error.xsi t/typemap/const.xsi t/typemap/primitives.xsi t/typemap/svapi.xsi t/typemap/container.xsi t/typemap/svrefs.xsi t/typemap/expected.xsi $(FIRST_MAKEFILE) 	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/typemap.xs > t/typemap/typemap.xsc 	$(MV) t/typemap/typemap.xsc t/typemap/typemap_xsgen.cc], 5=>q[t/typemap/object/object_xsgen.cc : t/typemap/object/object.xs t/typemap/object/casting.xsi t/typemap/object/join.xsi t/typemap/object/single.xsi t/typemap/object/child.xsi t/typemap/object/refcnt.xsi t/typemap/object/mixin.xsi t/typemap/object/foreign.xsi t/typemap/object/threads.xsi t/typemap/object/static_cast.xsi t/typemap/object/avhv.xsi t/typemap/object/backref.xsi $(FIRST_MAKEFILE) 	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/object/object.xs > t/typemap/object/object.xsc 	$(MV) t/typemap/object/object.xsc t/typemap/object/object_xsgen.cc], 6=>q[t/cookbook/cookbook_xsgen.cc : t/cookbook/cookbook.xs t/cookbook/recipe04.xsi t/cookbook/recipe10.xsi t/cookbook/recipe05.xsi t/cookbook/recipe02.xsi t/cookbook/recipe01.xsi t/cookbook/recipe09.xsi t/cookbook/recipe06.xsi t/cookbook/recipe08.xsi t/cookbook/recipe13.xsi t/cookbook/recipe12.xsi t/cookbook/recipe11.xsi t/cookbook/recipe03.xsi t/cookbook/recipe07.xsi $(FIRST_MAKEFILE) 	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/cookbook/cookbook.xs > t/cookbook/cookbook.xsc 	$(MV) t/cookbook/cookbook.xsc t/cookbook/cookbook_xsgen.cc], 7=>q[t/typemap/function$(OBJ_EXT) : src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/error.h src/xs/Array.h src/xs/typemap/base.h src/xs/Object.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Stash.h src/xs/typemap.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/function.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h], 8=>q[t/typemap/ref$(OBJ_EXT) : src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/catch.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h], 9=>q[t/svapi/array$(OBJ_EXT) : src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h] }

# --- MakeMaker post_initialize section:


# --- MakeMaker const_config section:

# These definitions are from config.sh (via /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux/Config.pm).
# They may have been overridden via Makefile.PL or on the command line.
AR = ar
CC = c++
CCCDLFLAGS = -fPIC
CCDLFLAGS = -Wl,-E
CPPRUN = cc  -E
DLEXT = so
DLSRC = dl_dlopen.xs
EXE_EXT = 
FULL_AR = /usr/bin/ar
LD = $(CC)
LDDLFLAGS = -shared -O2 -L/usr/local/lib -fstack-protector-strong
LDFLAGS =  -fstack-protector-strong -L/usr/local/lib
LIBC = /lib/x86_64-linux-gnu/libc.so.6
LIB_EXT = .a
OBJ_EXT = .o
OSNAME = linux
OSVERS = 6.1.0-31-amd64
RANLIB = :
SITELIBEXP = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/site_perl/5.40.1
SITEARCHEXP = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/site_perl/5.40.1/x86_64-linux
SO = so
VENDORARCHEXP = 
VENDORLIBEXP = 


# --- MakeMaker constants section:
AR_STATIC_ARGS = cr
DIRFILESEP = /
DFSEP = $(DIRFILESEP)
NAME = MyTest
NAME_SYM = MyTest
VERSION = 0.0.0
VERSION_MACRO = VERSION
VERSION_SYM = 0_0_0
DEFINE_VERSION = -D$(VERSION_MACRO)=\"$(VERSION)\"
XS_VERSION = 0.0.0
XS_VERSION_MACRO = XS_VERSION
XS_DEFINE_VERSION = -D$(XS_VERSION_MACRO)=\"$(XS_VERSION)\"
INST_ARCHLIB = blib/arch
INST_SCRIPT = blib/script
INST_BIN = blib/bin
INST_LIB = blib/lib
INST_MAN1DIR = blib/man1
INST_MAN3DIR = blib/man3
MAN1EXT = 0
MAN3EXT = 0
MAN1SECTION = 1
MAN3SECTION = 3
INSTALLDIRS = site
DESTDIR = 
PREFIX = $(SITEPREFIX)
PERLPREFIX = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd
SITEPREFIX = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd
VENDORPREFIX = 
INSTALLPRIVLIB = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1
DESTINSTALLPRIVLIB = $(DESTDIR)$(INSTALLPRIVLIB)
INSTALLSITELIB = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/site_perl/5.40.1
DESTINSTALLSITELIB = $(DESTDIR)$(INSTALLSITELIB)
INSTALLVENDORLIB = 
DESTINSTALLVENDORLIB = $(DESTDIR)$(INSTALLVENDORLIB)
INSTALLARCHLIB = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux
DESTINSTALLARCHLIB = $(DESTDIR)$(INSTALLARCHLIB)
INSTALLSITEARCH = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/site_perl/5.40.1/x86_64-linux
DESTINSTALLSITEARCH = $(DESTDIR)$(INSTALLSITEARCH)
INSTALLVENDORARCH = 
DESTINSTALLVENDORARCH = $(DESTDIR)$(INSTALLVENDORARCH)
INSTALLBIN = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin
DESTINSTALLBIN = $(DESTDIR)$(INSTALLBIN)
INSTALLSITEBIN = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin
DESTINSTALLSITEBIN = $(DESTDIR)$(INSTALLSITEBIN)
INSTALLVENDORBIN = 
DESTINSTALLVENDORBIN = $(DESTDIR)$(INSTALLVENDORBIN)
INSTALLSCRIPT = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin
DESTINSTALLSCRIPT = $(DESTDIR)$(INSTALLSCRIPT)
INSTALLSITESCRIPT = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin
DESTINSTALLSITESCRIPT = $(DESTDIR)$(INSTALLSITESCRIPT)
INSTALLVENDORSCRIPT = 
DESTINSTALLVENDORSCRIPT = $(DESTDIR)$(INSTALLVENDORSCRIPT)
INSTALLMAN1DIR = none
DESTINSTALLMAN1DIR = $(DESTDIR)$(INSTALLMAN1DIR)
INSTALLSITEMAN1DIR = $(INSTALLMAN1DIR)
DESTINSTALLSITEMAN1DIR = $(DESTDIR)$(INSTALLSITEMAN1DIR)
INSTALLVENDORMAN1DIR = 
DESTINSTALLVENDORMAN1DIR = $(DESTDIR)$(INSTALLVENDORMAN1DIR)
INSTALLMAN3DIR = none
DESTINSTALLMAN3DIR = $(DESTDIR)$(INSTALLMAN3DIR)
INSTALLSITEMAN3DIR = $(INSTALLMAN3DIR)
DESTINSTALLSITEMAN3DIR = $(DESTDIR)$(INSTALLSITEMAN3DIR)
INSTALLVENDORMAN3DIR = 
DESTINSTALLVENDORMAN3DIR = $(DESTDIR)$(INSTALLVENDORMAN3DIR)
PERL_LIB = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1
PERL_ARCHLIB = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux
PERL_ARCHLIBDEP = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux
LIBPERL_A = libperl.a
FIRST_MAKEFILE = Makefile.test
MAKEFILE_OLD = Makefile.test.old
MAKE_APERL_FILE = Makefile.test.aperl
PERLMAINCC = $(CC)
PERL_INC = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux/CORE
PERL_INCDEP = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux/CORE
PERL = "/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin/perl"
FULLPERL = "/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin/perl"
ABSPERL = $(PERL)
PERLRUN = $(PERL)
FULLPERLRUN = $(FULLPERL)
ABSPERLRUN = $(ABSPERL)
PERLRUNINST = $(PERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
FULLPERLRUNINST = $(FULLPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
ABSPERLRUNINST = $(ABSPERLRUN) "-I$(INST_ARCHLIB)" "-I$(INST_LIB)"
PERL_CORE = 0
PERM_DIR = 755
PERM_RW = 644
PERM_RWX = 755

MAKEMAKER   = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/ExtUtils/MakeMaker.pm
MM_VERSION  = 7.70
MM_REVISION = 77000

# FULLEXT = Pathname for extension directory (eg Foo/Bar/Oracle).
# BASEEXT = Basename part of FULLEXT. May be just equal FULLEXT. (eg Oracle)
# PARENT_NAME = NAME without BASEEXT and no trailing :: (eg Foo::Bar)
# DLBASE  = Basename part of dynamic library. May be just equal BASEEXT.
MAKE = make
FULLEXT = MyTest
BASEEXT = MyTest
PARENT_NAME = 
DLBASE = $(BASEEXT)
VERSION_FROM = 
INC = -Isrc -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/next/XS.x/i -I/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libpanda.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libcatch.x/i
DEFINE = 
OBJECT = t/typemap/function$(OBJ_EXT) t/typemap/ref$(OBJ_EXT) t/svapi/array$(OBJ_EXT) t/svapi/glob$(OBJ_EXT) t/svapi/hash$(OBJ_EXT) t/svapi/io$(OBJ_EXT) t/svapi/object$(OBJ_EXT) t/svapi/ref$(OBJ_EXT) t/svapi/scalar$(OBJ_EXT) t/svapi/scope$(OBJ_EXT) t/svapi/simple$(OBJ_EXT) t/svapi/stash$(OBJ_EXT) t/svapi/sub$(OBJ_EXT) t/svapi/sv$(OBJ_EXT) t/typemap/callback_dispatcher_xsgen$(OBJ_EXT) t/typemap/typemap_xsgen$(OBJ_EXT) t/MyTest_xsgen$(OBJ_EXT) t/typemap/object/object_xsgen$(OBJ_EXT) t/cookbook/cookbook_xsgen$(OBJ_EXT)
LDFROM = $(OBJECT) $(INST_ARCHLIB)/auto/XS/Framework/Framework.so
LINKTYPE = dynamic
BOOTDEP = 

# Handy lists of source code files:
XS_FILES = t/MyTest.xs \
	t/cookbook/cookbook.xs \
	t/typemap/callback_dispatcher.xs \
	t/typemap/object/object.xs \
	t/typemap/typemap.xs
C_FILES  = t/MyTest_xsgen.cc \
	t/cookbook/cookbook_xsgen.cc \
	t/svapi/array.cc \
	t/svapi/glob.cc \
	t/svapi/hash.cc \
	t/svapi/io.cc \
	t/svapi/object.cc \
	t/svapi/ref.cc \
	t/svapi/scalar.cc \
	t/svapi/scope.cc \
	t/svapi/simple.cc \
	t/svapi/stash.cc \
	t/svapi/sub.cc \
	t/svapi/sv.cc \
	t/typemap/callback_dispatcher_xsgen.cc \
	t/typemap/function.cc \
	t/typemap/object/object_xsgen.cc \
	t/typemap/ref.cc \
	t/typemap/typemap_xsgen.cc
O_FILES  = t/MyTest_xsgen.o \
	t/cookbook/cookbook_xsgen.o \
	t/svapi/array.o \
	t/svapi/glob.o \
	t/svapi/hash.o \
	t/svapi/io.o \
	t/svapi/object.o \
	t/svapi/ref.o \
	t/svapi/scalar.o \
	t/svapi/scope.o \
	t/svapi/simple.o \
	t/svapi/stash.o \
	t/svapi/sub.o \
	t/svapi/sv.o \
	t/typemap/callback_dispatcher_xsgen.o \
	t/typemap/function.o \
	t/typemap/object/object_xsgen.o \
	t/typemap/ref.o \
	t/typemap/typemap_xsgen.o
H_FILES  = 
MAN1PODS = 
MAN3PODS = 

# Where is the Config information that we are using/depend on
CONFIGDEP = $(PERL_ARCHLIBDEP)$(DFSEP)Config.pm $(PERL_INCDEP)$(DFSEP)config.h

# Where to build things
INST_LIBDIR      = $(INST_LIB)
INST_ARCHLIBDIR  = $(INST_ARCHLIB)

INST_AUTODIR     = $(INST_LIB)/auto/$(FULLEXT)
INST_ARCHAUTODIR = $(INST_ARCHLIB)/auto/$(FULLEXT)

INST_STATIC      = $(INST_ARCHAUTODIR)/$(BASEEXT)$(LIB_EXT)
INST_DYNAMIC     = $(INST_ARCHAUTODIR)/$(DLBASE).$(DLEXT)
INST_BOOT        = $(INST_ARCHAUTODIR)/$(BASEEXT).bs

# Extra linker info
EXPORT_LIST        = 
PERL_ARCHIVE       = 
PERL_ARCHIVEDEP    = 
PERL_ARCHIVE_AFTER = 


TO_INST_PM = lib/XS/ErrorCode.pm \
	lib/XS/ErrorCode.pod \
	lib/XS/Framework.pm \
	lib/XS/Framework.pod \
	lib/XS/Framework/CallbackDispatcher.pm \
	lib/XS/Framework/CallbackDispatcher.pod \
	lib/XS/Framework/CallbackDispatcher/Event.pm \
	lib/XS/Framework/Manual/Cookbook.pod \
	lib/XS/Framework/Manual/SVAPI.pod \
	lib/XS/Framework/Manual/SVAPI/Array.pod \
	lib/XS/Framework/Manual/SVAPI/Glob.pod \
	lib/XS/Framework/Manual/SVAPI/Hash.pod \
	lib/XS/Framework/Manual/SVAPI/Io.pod \
	lib/XS/Framework/Manual/SVAPI/List.pod \
	lib/XS/Framework/Manual/SVAPI/Object.pod \
	lib/XS/Framework/Manual/SVAPI/Ref.pod \
	lib/XS/Framework/Manual/SVAPI/Scalar.pod \
	lib/XS/Framework/Manual/SVAPI/Scope.pod \
	lib/XS/Framework/Manual/SVAPI/Simple.pod \
	lib/XS/Framework/Manual/SVAPI/Stash.pod \
	lib/XS/Framework/Manual/SVAPI/Sub.pod \
	lib/XS/Framework/Manual/SVAPI/Sv.pod \
	lib/XS/Framework/Manual/SVAPI/exceptions.pod \
	lib/XS/Framework/Manual/SVAPI/perl_destroy.pod \
	lib/XS/Framework/Manual/SVAPI/threads.pod \
	lib/XS/Framework/Manual/Typemap.pod \
	lib/XS/Framework/Manual/recipe01.pod \
	lib/XS/Framework/Manual/recipe02.pod \
	lib/XS/Framework/Manual/recipe03.pod \
	lib/XS/Framework/Manual/recipe04.pod \
	lib/XS/Framework/Manual/recipe05.pod \
	lib/XS/Framework/Manual/recipe06.pod \
	lib/XS/Framework/Manual/recipe07.pod \
	lib/XS/Framework/Manual/recipe08.pod \
	lib/XS/Framework/Manual/recipe09.pod \
	lib/XS/Framework/Manual/recipe10.pod \
	lib/XS/Framework/Manual/recipe11.pod \
	lib/XS/Framework/Manual/recipe12.pod \
	lib/XS/Framework/Manual/recipe13.pod \
	lib/XS/Framework/ParseXS.pm \
	lib/XS/STL/ErrorCategory.pm \
	lib/XS/STL/ErrorCategory.pod \
	lib/XS/STL/ErrorCode.pm \
	lib/XS/STL/ErrorCode.pod


# --- MakeMaker platform_constants section:
MM_Unix_VERSION = 7.70
PERL_MALLOC_DEF = -DPERL_EXTMALLOC_DEF -Dmalloc=Perl_malloc -Dfree=Perl_mfree -Drealloc=Perl_realloc -Dcalloc=Perl_calloc


# --- MakeMaker tool_autosplit section:
# Usage: $(AUTOSPLITFILE) FileToSplit AutoDirToSplitInto
AUTOSPLITFILE = $(ABSPERLRUN)  -e 'use AutoSplit;  autosplit($$$$ARGV[0], $$$$ARGV[1], 0, 1, 1)' --



# --- MakeMaker tool_xsubpp section:

XSUBPPDIR = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/ExtUtils
XSUBPP = "$(XSUBPPDIR)$(DFSEP)xsubpp"
XSUBPPRUN = $(PERLRUN) $(XSUBPP)
XSPROTOARG = 
XSUBPPDEPS = /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/ExtUtils/typemap /home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap /home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap typemap typemap64 typemap /home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/ExtUtils$(DFSEP)xsubpp
XSUBPPARGS = -hiertype -C++ -hiertype -C++ -typemap '/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/ExtUtils/typemap' -typemap '/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap' -typemap '/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/tm/typemap' -typemap '/home/s.aleinikov/poker/meia/plus/XS-Framework/typemap' -typemap '/home/s.aleinikov/poker/meia/plus/XS-Framework/typemap64' -typemap '/home/s.aleinikov/poker/meia/plus/XS-Framework/typemap'
XSUBPP_EXTRA_ARGS =


# --- MakeMaker tools_other section:
SHELL = /bin/sh
CHMOD = chmod
CP = cp
MV = mv
NOOP = $(TRUE)
NOECHO = @
RM_F = rm -f
RM_RF = rm -rf
TEST_F = test -f
TOUCH = touch
UMASK_NULL = umask 0
DEV_NULL = > /dev/null 2>&1
MKPATH = $(ABSPERLRUN) -MExtUtils::Command -e 'mkpath' --
EQUALIZE_TIMESTAMP = $(ABSPERLRUN) -MExtUtils::Command -e 'eqtime' --
FALSE = false
TRUE = true
ECHO = echo
ECHO_N = echo -n
UNINST = 0
VERBINST = 0
MOD_INSTALL = $(ABSPERLRUN) -MExtUtils::Install -e 'install([ from_to => {@ARGV}, verbose => '\''$(VERBINST)'\'', uninstall_shadows => '\''$(UNINST)'\'', dir_mode => '\''$(PERM_DIR)'\'' ]);' --
DOC_INSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e 'perllocal_install' --
UNINSTALL = $(ABSPERLRUN) -MExtUtils::Command::MM -e 'uninstall' --
WARN_IF_OLD_PACKLIST = $(ABSPERLRUN) -MExtUtils::Command::MM -e 'warn_if_old_packlist' --
MACROSTART = 
MACROEND = 
USEMAKEFILE = -f
FIXIN = $(ABSPERLRUN) -MExtUtils::MY -e 'MY->fixin(shift)' --
CP_NONEMPTY = $(ABSPERLRUN) -MExtUtils::Command::MM -e 'cp_nonempty' --


# --- MakeMaker makemakerdflt section:
makemakerdflt : all
	$(NOECHO) $(NOOP)


# --- MakeMaker dist section:
TAR = tar
TARFLAGS = cvf
ZIP = zip
ZIPFLAGS = -r
COMPRESS = gzip --best
SUFFIX = .gz
SHAR = shar
PREOP = $(NOECHO) $(NOOP)
POSTOP = $(NOECHO) $(NOOP)
TO_UNIX = $(NOECHO) $(NOOP)
CI = ci -u
RCS_LABEL = rcs -Nv$(VERSION_SYM): -q
DIST_CP = best
DIST_DEFAULT = tardist
DISTNAME = MyTest
DISTVNAME = MyTest-0.0.0


# --- MakeMaker macro section:


# --- MakeMaker depend section:


# --- MakeMaker cflags section:

CCFLAGS = -Wall -Wextra  -std=c++14 -fno-omit-frame-pointer -g -ggdb3 -O0 -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2 -o $@
OPTIMIZE = -O0
PERLTYPE = 
MPOLLUTE = 


# --- MakeMaker const_loadlibs section:

# MyTest might depend on some other libraries:
# See ExtUtils::Liblist for details
#


# --- MakeMaker const_cccmd section:
CCCMD = $(CC) -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION)

# --- MakeMaker post_constants section:


# --- MakeMaker pasthru section:

PASTHRU = LIBPERL_A="$(LIBPERL_A)"\
	LINKTYPE="$(LINKTYPE)"\
	OPTIMIZE="$(OPTIMIZE)"\
	PREFIX="$(PREFIX)"\
	PASTHRU_DEFINE=' $(PASTHRU_DEFINE)'\
	PASTHRU_INC='-Isrc -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/next/XS.x/i -I/home/s.aleinikov/poker/meia/var/lib/XS/Install.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libpanda.x/i -I/home/s.aleinikov/poker/meia/var/lib/x86_64-linux/XS/libcatch.x/i $(PASTHRU_INC)'


# --- MakeMaker special_targets section:
.SUFFIXES : .xs .c .C .cpp .i .s .cxx .cc $(OBJ_EXT)

.PHONY: all config static dynamic test linkext manifest blibdirs clean realclean disttest distdir pure_all subdirs clean_subdirs makemakerdflt manifypods realclean_subdirs subdirs_dynamic subdirs_pure_nolink subdirs_static subdirs-test_dynamic subdirs-test_static test_dynamic test_static



# --- MakeMaker c_o section:

.c.i:
	$(CPPRUN) -c $(PASTHRU_INC) $(INC) \
	$(CCFLAGS) $(OPTIMIZE) \
	$(PERLTYPE) $(MPOLLUTE) $(DEFINE_VERSION) \
	$(XS_DEFINE_VERSION) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c > $*.i

.c.s :
	$(CCCMD) -S $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c 

.c$(OBJ_EXT) :
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c

.cpp$(OBJ_EXT) :
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cpp

.cxx$(OBJ_EXT) :
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cxx

.cc$(OBJ_EXT) :
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.cc

.C$(OBJ_EXT) :
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.C


# --- MakeMaker xs_c section:

.xs.c:
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $(XSUBPP_EXTRA_ARGS) $*.xs > $*.xsc
	$(MV) $*.xsc $*.c


# --- MakeMaker xs_o section:
.xs$(OBJ_EXT) :
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) $*.xs > $*.xsc
	$(MV) $*.xsc $*.c
	$(CCCMD) $(CCCDLFLAGS) "-I$(PERL_INC)" $(PASTHRU_DEFINE) $(DEFINE) $*.c 


# --- MakeMaker top_targets section:
all :: pure_all manifypods
	$(NOECHO) $(NOOP)

pure_all :: config pm_to_blib subdirs linkext
	$(NOECHO) $(NOOP)

subdirs :: $(MYEXTLIB)
	$(NOECHO) $(NOOP)

config :: $(FIRST_MAKEFILE) blibdirs
	$(NOECHO) $(NOOP)

help :
	perldoc ExtUtils::MakeMaker


# --- MakeMaker blibdirs section:
blibdirs : $(INST_LIBDIR)$(DFSEP).exists $(INST_ARCHLIB)$(DFSEP).exists $(INST_AUTODIR)$(DFSEP).exists $(INST_ARCHAUTODIR)$(DFSEP).exists $(INST_BIN)$(DFSEP).exists $(INST_SCRIPT)$(DFSEP).exists $(INST_MAN1DIR)$(DFSEP).exists $(INST_MAN3DIR)$(DFSEP).exists
	$(NOECHO) $(NOOP)

# Backwards compat with 6.18 through 6.25
blibdirs.ts : blibdirs
	$(NOECHO) $(NOOP)

$(INST_LIBDIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_LIBDIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_LIBDIR)
	$(NOECHO) $(TOUCH) $(INST_LIBDIR)$(DFSEP).exists

$(INST_ARCHLIB)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHLIB)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHLIB)
	$(NOECHO) $(TOUCH) $(INST_ARCHLIB)$(DFSEP).exists

$(INST_AUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_AUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_AUTODIR)
	$(NOECHO) $(TOUCH) $(INST_AUTODIR)$(DFSEP).exists

$(INST_ARCHAUTODIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_ARCHAUTODIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_ARCHAUTODIR)
	$(NOECHO) $(TOUCH) $(INST_ARCHAUTODIR)$(DFSEP).exists

$(INST_BIN)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_BIN)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_BIN)
	$(NOECHO) $(TOUCH) $(INST_BIN)$(DFSEP).exists

$(INST_SCRIPT)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_SCRIPT)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_SCRIPT)
	$(NOECHO) $(TOUCH) $(INST_SCRIPT)$(DFSEP).exists

$(INST_MAN1DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN1DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN1DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN1DIR)$(DFSEP).exists

$(INST_MAN3DIR)$(DFSEP).exists :: Makefile.PL
	$(NOECHO) $(MKPATH) $(INST_MAN3DIR)
	$(NOECHO) $(CHMOD) $(PERM_DIR) $(INST_MAN3DIR)
	$(NOECHO) $(TOUCH) $(INST_MAN3DIR)$(DFSEP).exists



# --- MakeMaker linkext section:

linkext :: dynamic
	$(NOECHO) $(NOOP)


# --- MakeMaker dlsyms section:


# --- MakeMaker dynamic_bs section:
BOOTSTRAP = $(BASEEXT).bs

# As Mkbootstrap might not write a file (if none is required)
# we use touch to prevent make continually trying to remake it.
# The DynaLoader only reads a non-empty file.
$(BASEEXT).bs : $(FIRST_MAKEFILE) $(BOOTDEP)
	$(NOECHO) $(ECHO) "Running Mkbootstrap for $(BASEEXT) ($(BSLOADLIBS))"
	$(NOECHO) $(PERLRUN) \
		"-MExtUtils::Mkbootstrap" \
		-e "Mkbootstrap('$(BASEEXT)','$(BSLOADLIBS)');"
	$(NOECHO) $(TOUCH) "$(BASEEXT).bs"
	$(CHMOD) $(PERM_RW) "$(BASEEXT).bs"

$(INST_ARCHAUTODIR)/$(BASEEXT).bs : $(BASEEXT).bs $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(NOECHO) $(RM_RF) $(INST_ARCHAUTODIR)/$(BASEEXT).bs
	- $(CP_NONEMPTY) $(BASEEXT).bs $(INST_ARCHAUTODIR)/$(BASEEXT).bs $(PERM_RW)


# --- MakeMaker dynamic section:

dynamic :: $(FIRST_MAKEFILE) config $(INST_BOOT) $(INST_DYNAMIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker dynamic_lib section:
# This section creates the dynamically loadable objects from relevant
# objects and possibly $(MYEXTLIB).
ARMAYBE = :
OTHERLDFLAGS = 
INST_DYNAMIC_DEP = 
INST_DYNAMIC_FIX = 

$(INST_DYNAMIC) : $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists $(EXPORT_LIST) $(PERL_ARCHIVEDEP) $(PERL_ARCHIVE_AFTER) $(INST_DYNAMIC_DEP) 
	$(RM_F) $@
	$(LD)  $(LDDLFLAGS)  $(LDFROM) $(OTHERLDFLAGS) -o $@ $(MYEXTLIB) \
	  $(PERL_ARCHIVE) $(LDLOADLIBS) $(PERL_ARCHIVE_AFTER) $(EXPORT_LIST) \
	  $(INST_DYNAMIC_FIX)
	$(CHMOD) $(PERM_RWX) $@


# --- MakeMaker static section:

## $(INST_PM) has been moved to the all: target.
## It remains here for awhile to allow for old usage: "make static"
static :: $(FIRST_MAKEFILE) $(INST_STATIC)
	$(NOECHO) $(NOOP)


# --- MakeMaker static_lib section:
$(INST_STATIC): $(OBJECT) $(MYEXTLIB) $(INST_ARCHAUTODIR)$(DFSEP).exists
	$(RM_F) "$@"
	$(FULL_AR) $(AR_STATIC_ARGS) "$@" $(OBJECT)
	$(RANLIB) "$@"
	$(CHMOD) $(PERM_RWX) $@
	$(NOECHO) $(ECHO) "$(EXTRALIBS)" > $(INST_ARCHAUTODIR)$(DFSEP)extralibs.ld


# --- MakeMaker manifypods section:

POD2MAN_EXE = $(PERLRUN) "-MExtUtils::Command::MM" -e pod2man "--"
POD2MAN = $(POD2MAN_EXE)


manifypods : pure_all config 
	$(NOECHO) $(NOOP)




# --- MakeMaker processPL section:


# --- MakeMaker installbin section:


# --- MakeMaker subdirs section:

# none

# --- MakeMaker clean_subdirs section:
clean_subdirs :
	$(NOECHO) $(NOOP)


# --- MakeMaker clean section:

# Delete temporary files but do not touch installed files. We don't delete
# the Makefile here so a later make realclean still has a makefile to use.

clean :: clean_subdirs
	- $(RM_F) \
	  $(BASEEXT).bso $(BASEEXT).def \
	  $(BASEEXT).exp $(BASEEXT).x \
	  $(BOOTSTRAP) $(INST_ARCHAUTODIR)/extralibs.all \
	  $(INST_ARCHAUTODIR)/extralibs.ld $(MAKE_APERL_FILE) \
	  *$(LIB_EXT) *$(OBJ_EXT) \
	  *perl.core MYMETA.json \
	  MYMETA.yml blibdirs.ts \
	  core core.*perl.*.? \
	  core.[0-9] core.[0-9][0-9] \
	  core.[0-9][0-9][0-9] core.[0-9][0-9][0-9][0-9] \
	  core.[0-9][0-9][0-9][0-9][0-9] lib$(BASEEXT).def \
	  mon.out perl \
	  perl$(EXE_EXT) perl.exe \
	  perlmain.c pm_to_blib \
	  pm_to_blib.ts so_locations \
	  t/MyTest.base t/MyTest.bs \
	  t/MyTest.bso t/MyTest.def \
	  t/MyTest.exp t/MyTest.o \
	  t/MyTest_def.old t/MyTest_xsgen.cc \
	  t/cookbook/cookbook.base t/cookbook/cookbook.bs \
	  t/cookbook/cookbook.bso t/cookbook/cookbook.def \
	  t/cookbook/cookbook.exp t/cookbook/cookbook.o \
	  t/cookbook/cookbook_def.old t/cookbook/cookbook_xsgen.cc \
	  t/typemap/callback_dispatcher.base t/typemap/callback_dispatcher.bs \
	  t/typemap/callback_dispatcher.bso t/typemap/callback_dispatcher.def \
	  t/typemap/callback_dispatcher.exp t/typemap/callback_dispatcher.o \
	  t/typemap/callback_dispatcher_def.old t/typemap/callback_dispatcher_xsgen.cc \
	  t/typemap/object/object.base t/typemap/object/object.bs \
	  t/typemap/object/object.bso t/typemap/object/object.def \
	  t/typemap/object/object.exp t/typemap/object/object.o \
	  t/typemap/object/object_def.old t/typemap/object/object_xsgen.cc \
	  t/typemap/typemap.base t/typemap/typemap.bs \
	  t/typemap/typemap.bso t/typemap/typemap.def \
	  t/typemap/typemap.exp t/typemap/typemap.o \
	  t/typemap/typemap_def.old t/typemap/typemap_xsgen.cc \
	  tmon.out 
	- $(RM_RF) \
	   $(O_FILES) \
	  blib 
	  $(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	- $(MV) $(FIRST_MAKEFILE) $(MAKEFILE_OLD) $(DEV_NULL)


# --- MakeMaker realclean_subdirs section:
# so clean is forced to complete before realclean_subdirs runs
realclean_subdirs : clean
	$(NOECHO) $(NOOP)


# --- MakeMaker realclean section:
# Delete temporary files (via clean) and also delete dist files
realclean purge :: realclean_subdirs
	- $(RM_F) \
	  $(FIRST_MAKEFILE) $(MAKEFILE_OLD) \
	  $(OBJECT) 
	- $(RM_RF) \
	  $(DISTVNAME) 


# --- MakeMaker metafile section:
metafile : create_distdir
	$(NOECHO) $(ECHO) Generating META.yml
	$(NOECHO) $(ECHO) '---' > META_new.yml
	$(NOECHO) $(ECHO) 'abstract: '\''test module'\''' >> META_new.yml
	$(NOECHO) $(ECHO) 'author:' >> META_new.yml
	$(NOECHO) $(ECHO) '  - unknown' >> META_new.yml
	$(NOECHO) $(ECHO) 'build_requires:' >> META_new.yml
	$(NOECHO) $(ECHO) '  Test::Deep: '\''0'\''' >> META_new.yml
	$(NOECHO) $(ECHO) '  Test::More: '\''0'\''' >> META_new.yml
	$(NOECHO) $(ECHO) '  Test::Simple: '\''0.96'\''' >> META_new.yml
	$(NOECHO) $(ECHO) 'configure_requires:' >> META_new.yml
	$(NOECHO) $(ECHO) '  Test::Catch: v2.0.2' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::Install: v1.4.0' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::libcatch: v3.7.1.1' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::libpanda: v1.5.11' >> META_new.yml
	$(NOECHO) $(ECHO) '  next::XS: v1.0.8' >> META_new.yml
	$(NOECHO) $(ECHO) 'dynamic_config: 1' >> META_new.yml
	$(NOECHO) $(ECHO) 'generated_by: '\''ExtUtils::MakeMaker version 7.70, CPAN::Meta::Converter version 2.150010'\''' >> META_new.yml
	$(NOECHO) $(ECHO) 'license: unknown' >> META_new.yml
	$(NOECHO) $(ECHO) 'meta-spec:' >> META_new.yml
	$(NOECHO) $(ECHO) '  url: http://module-build.sourceforge.net/META-spec-v1.4.html' >> META_new.yml
	$(NOECHO) $(ECHO) '  version: '\''1.4'\''' >> META_new.yml
	$(NOECHO) $(ECHO) 'name: MyTest' >> META_new.yml
	$(NOECHO) $(ECHO) 'no_index:' >> META_new.yml
	$(NOECHO) $(ECHO) '  directory:' >> META_new.yml
	$(NOECHO) $(ECHO) '    - t' >> META_new.yml
	$(NOECHO) $(ECHO) '    - inc' >> META_new.yml
	$(NOECHO) $(ECHO) 'requires:' >> META_new.yml
	$(NOECHO) $(ECHO) '  Test::Catch: v2.0.2' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::Install: v1.4.0' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::libcatch: v3.7.1.1' >> META_new.yml
	$(NOECHO) $(ECHO) '  XS::libpanda: v1.5.11' >> META_new.yml
	$(NOECHO) $(ECHO) '  next::XS: v1.0.8' >> META_new.yml
	$(NOECHO) $(ECHO) 'version: v0.0.0' >> META_new.yml
	$(NOECHO) $(ECHO) 'x_serialization_backend: '\''CPAN::Meta::YAML version 0.018'\''' >> META_new.yml
	-$(NOECHO) $(MV) META_new.yml $(DISTVNAME)/META.yml
	$(NOECHO) $(ECHO) Generating META.json
	$(NOECHO) $(ECHO) '{' > META_new.json
	$(NOECHO) $(ECHO) '   "abstract" : "test module",' >> META_new.json
	$(NOECHO) $(ECHO) '   "author" : [' >> META_new.json
	$(NOECHO) $(ECHO) '      "unknown"' >> META_new.json
	$(NOECHO) $(ECHO) '   ],' >> META_new.json
	$(NOECHO) $(ECHO) '   "dynamic_config" : 1,' >> META_new.json
	$(NOECHO) $(ECHO) '   "generated_by" : "ExtUtils::MakeMaker version 7.70, CPAN::Meta::Converter version 2.150010",' >> META_new.json
	$(NOECHO) $(ECHO) '   "license" : [' >> META_new.json
	$(NOECHO) $(ECHO) '      "unknown"' >> META_new.json
	$(NOECHO) $(ECHO) '   ],' >> META_new.json
	$(NOECHO) $(ECHO) '   "meta-spec" : {' >> META_new.json
	$(NOECHO) $(ECHO) '      "url" : "http://search.cpan.org/perldoc?CPAN::Meta::Spec",' >> META_new.json
	$(NOECHO) $(ECHO) '      "version" : 2' >> META_new.json
	$(NOECHO) $(ECHO) '   },' >> META_new.json
	$(NOECHO) $(ECHO) '   "name" : "MyTest",' >> META_new.json
	$(NOECHO) $(ECHO) '   "no_index" : {' >> META_new.json
	$(NOECHO) $(ECHO) '      "directory" : [' >> META_new.json
	$(NOECHO) $(ECHO) '         "t",' >> META_new.json
	$(NOECHO) $(ECHO) '         "inc"' >> META_new.json
	$(NOECHO) $(ECHO) '      ]' >> META_new.json
	$(NOECHO) $(ECHO) '   },' >> META_new.json
	$(NOECHO) $(ECHO) '   "prereqs" : {' >> META_new.json
	$(NOECHO) $(ECHO) '      "build" : {' >> META_new.json
	$(NOECHO) $(ECHO) '         "requires" : {}' >> META_new.json
	$(NOECHO) $(ECHO) '      },' >> META_new.json
	$(NOECHO) $(ECHO) '      "configure" : {' >> META_new.json
	$(NOECHO) $(ECHO) '         "requires" : {' >> META_new.json
	$(NOECHO) $(ECHO) '            "Test::Catch" : "v2.0.2",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::Install" : "v1.4.0",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::libcatch" : "v3.7.1.1",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::libpanda" : "v1.5.11",' >> META_new.json
	$(NOECHO) $(ECHO) '            "next::XS" : "v1.0.8"' >> META_new.json
	$(NOECHO) $(ECHO) '         }' >> META_new.json
	$(NOECHO) $(ECHO) '      },' >> META_new.json
	$(NOECHO) $(ECHO) '      "runtime" : {' >> META_new.json
	$(NOECHO) $(ECHO) '         "requires" : {' >> META_new.json
	$(NOECHO) $(ECHO) '            "Test::Catch" : "v2.0.2",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::Install" : "v1.4.0",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::libcatch" : "v3.7.1.1",' >> META_new.json
	$(NOECHO) $(ECHO) '            "XS::libpanda" : "v1.5.11",' >> META_new.json
	$(NOECHO) $(ECHO) '            "next::XS" : "v1.0.8"' >> META_new.json
	$(NOECHO) $(ECHO) '         }' >> META_new.json
	$(NOECHO) $(ECHO) '      },' >> META_new.json
	$(NOECHO) $(ECHO) '      "test" : {' >> META_new.json
	$(NOECHO) $(ECHO) '         "requires" : {' >> META_new.json
	$(NOECHO) $(ECHO) '            "Test::Deep" : "0",' >> META_new.json
	$(NOECHO) $(ECHO) '            "Test::More" : "0",' >> META_new.json
	$(NOECHO) $(ECHO) '            "Test::Simple" : "0.96"' >> META_new.json
	$(NOECHO) $(ECHO) '         }' >> META_new.json
	$(NOECHO) $(ECHO) '      }' >> META_new.json
	$(NOECHO) $(ECHO) '   },' >> META_new.json
	$(NOECHO) $(ECHO) '   "release_status" : "stable",' >> META_new.json
	$(NOECHO) $(ECHO) '   "version" : "v0.0.0",' >> META_new.json
	$(NOECHO) $(ECHO) '   "x_serialization_backend" : "JSON::PP version 4.16"' >> META_new.json
	$(NOECHO) $(ECHO) '}' >> META_new.json
	-$(NOECHO) $(MV) META_new.json $(DISTVNAME)/META.json


# --- MakeMaker signature section:
signature :
	cpansign -s


# --- MakeMaker dist_basics section:
distclean :: realclean distcheck
	$(NOECHO) $(NOOP)

distcheck :
	$(PERLRUN) "-MExtUtils::Manifest=fullcheck" -e fullcheck

skipcheck :
	$(PERLRUN) "-MExtUtils::Manifest=skipcheck" -e skipcheck

manifest :
	$(PERLRUN) "-MExtUtils::Manifest=mkmanifest" -e mkmanifest

veryclean : realclean
	$(RM_F) *~ */*~ *.orig */*.orig *.bak */*.bak *.old */*.old



# --- MakeMaker dist_core section:

dist : $(DIST_DEFAULT) $(FIRST_MAKEFILE)
	$(NOECHO) $(ABSPERLRUN) -l -e 'print '\''Warning: Makefile possibly out of date with $(VERSION_FROM)'\''' \
	  -e '    if -e '\''$(VERSION_FROM)'\'' and -M '\''$(VERSION_FROM)'\'' < -M '\''$(FIRST_MAKEFILE)'\'';' --

tardist : $(DISTVNAME).tar$(SUFFIX)
	$(NOECHO) $(NOOP)

uutardist : $(DISTVNAME).tar$(SUFFIX)
	uuencode $(DISTVNAME).tar$(SUFFIX) $(DISTVNAME).tar$(SUFFIX) > $(DISTVNAME).tar$(SUFFIX)_uu
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)_uu'

$(DISTVNAME).tar$(SUFFIX) : distdir
	$(PREOP)
	$(TO_UNIX)
	$(TAR) $(TARFLAGS) $(DISTVNAME).tar $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(COMPRESS) $(DISTVNAME).tar
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).tar$(SUFFIX)'
	$(POSTOP)

zipdist : $(DISTVNAME).zip
	$(NOECHO) $(NOOP)

$(DISTVNAME).zip : distdir
	$(PREOP)
	$(ZIP) $(ZIPFLAGS) $(DISTVNAME).zip $(DISTVNAME)
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).zip'
	$(POSTOP)

shdist : distdir
	$(PREOP)
	$(SHAR) $(DISTVNAME) > $(DISTVNAME).shar
	$(RM_RF) $(DISTVNAME)
	$(NOECHO) $(ECHO) 'Created $(DISTVNAME).shar'
	$(POSTOP)


# --- MakeMaker distdir section:
create_distdir :
	$(RM_RF) $(DISTVNAME)
	$(PERLRUN) "-MExtUtils::Manifest=manicopy,maniread" \
		-e "manicopy(maniread(),'$(DISTVNAME)', '$(DIST_CP)');"

distdir : create_distdir distmeta 
	$(NOECHO) $(NOOP)



# --- MakeMaker dist_test section:
disttest : distdir
	cd $(DISTVNAME) && $(ABSPERLRUN) Makefile.PL 
	cd $(DISTVNAME) && $(MAKE) $(PASTHRU)
	cd $(DISTVNAME) && $(MAKE) test $(PASTHRU)



# --- MakeMaker dist_ci section:
ci :
	$(ABSPERLRUN) -MExtUtils::Manifest=maniread -e '@all = sort keys %{ maniread() };' \
	  -e 'print(qq{Executing $(CI) @all\n});' \
	  -e 'system(qq{$(CI) @all}) == 0 or die $$!;' \
	  -e 'print(qq{Executing $(RCS_LABEL) ...\n});' \
	  -e 'system(qq{$(RCS_LABEL) @all}) == 0 or die $$!;' --


# --- MakeMaker distmeta section:
distmeta : create_distdir metafile
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e 'exit unless -e q{META.yml};' \
	  -e 'eval { maniadd({q{META.yml} => q{Module YAML meta-data (added by MakeMaker)}}) }' \
	  -e '    or die "Could not add META.yml to MANIFEST: $${'\''@'\''}"' --
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e 'exit unless -f q{META.json};' \
	  -e 'eval { maniadd({q{META.json} => q{Module JSON meta-data (added by MakeMaker)}}) }' \
	  -e '    or die "Could not add META.json to MANIFEST: $${'\''@'\''}"' --



# --- MakeMaker distsignature section:
distsignature : distmeta
	$(NOECHO) cd $(DISTVNAME) && $(ABSPERLRUN) -MExtUtils::Manifest=maniadd -e 'eval { maniadd({q{SIGNATURE} => q{Public-key signature (added by MakeMaker)}}) }' \
	  -e '    or die "Could not add SIGNATURE to MANIFEST: $${'\''@'\''}"' --
	$(NOECHO) cd $(DISTVNAME) && $(TOUCH) SIGNATURE
	cd $(DISTVNAME) && cpansign -s



# --- MakeMaker install section:

install :: pure_install doc_install
	$(NOECHO) $(NOOP)

install_perl :: pure_perl_install doc_perl_install
	$(NOECHO) $(NOOP)

install_site :: pure_site_install doc_site_install
	$(NOECHO) $(NOOP)

install_vendor :: pure_vendor_install doc_vendor_install
	$(NOECHO) $(NOOP)

pure_install :: pure_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

doc_install :: doc_$(INSTALLDIRS)_install
	$(NOECHO) $(NOOP)

pure__install : pure_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

doc__install : doc_site_install
	$(NOECHO) $(ECHO) INSTALLDIRS not defined, defaulting to INSTALLDIRS=site

pure_perl_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(PERL_ARCHLIB)/auto/$(FULLEXT)/.packlist" \
		write "$(DESTINSTALLARCHLIB)/auto/$(FULLEXT)/.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLPRIVLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLARCHLIB)" \
		"$(INST_BIN)" "$(DESTINSTALLBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(SITEARCHEXP)/auto/$(FULLEXT)"


pure_site_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(SITEARCHEXP)/auto/$(FULLEXT)/.packlist" \
		write "$(DESTINSTALLSITEARCH)/auto/$(FULLEXT)/.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLSITELIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLSITEARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLSITEBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLSITESCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLSITEMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLSITEMAN3DIR)"
	$(NOECHO) $(WARN_IF_OLD_PACKLIST) \
		"$(PERL_ARCHLIB)/auto/$(FULLEXT)"

pure_vendor_install :: all
	$(NOECHO) $(MOD_INSTALL) \
		read "$(VENDORARCHEXP)/auto/$(FULLEXT)/.packlist" \
		write "$(DESTINSTALLVENDORARCH)/auto/$(FULLEXT)/.packlist" \
		"$(INST_LIB)" "$(DESTINSTALLVENDORLIB)" \
		"$(INST_ARCHLIB)" "$(DESTINSTALLVENDORARCH)" \
		"$(INST_BIN)" "$(DESTINSTALLVENDORBIN)" \
		"$(INST_SCRIPT)" "$(DESTINSTALLVENDORSCRIPT)" \
		"$(INST_MAN1DIR)" "$(DESTINSTALLVENDORMAN1DIR)" \
		"$(INST_MAN3DIR)" "$(DESTINSTALLVENDORMAN3DIR)"


doc_perl_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLPRIVLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)/perllocal.pod"

doc_site_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLSITELIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)/perllocal.pod"

doc_vendor_install :: all
	$(NOECHO) $(ECHO) Appending installation info to "$(DESTINSTALLARCHLIB)/perllocal.pod"
	-$(NOECHO) $(MKPATH) "$(DESTINSTALLARCHLIB)"
	-$(NOECHO) $(DOC_INSTALL) \
		"Module" "$(NAME)" \
		"installed into" "$(INSTALLVENDORLIB)" \
		LINKTYPE "$(LINKTYPE)" \
		VERSION "$(VERSION)" \
		EXE_FILES "$(EXE_FILES)" \
		>> "$(DESTINSTALLARCHLIB)/perllocal.pod"


uninstall :: uninstall_from_$(INSTALLDIRS)dirs
	$(NOECHO) $(NOOP)

uninstall_from_perldirs ::
	$(NOECHO) $(UNINSTALL) "$(PERL_ARCHLIB)/auto/$(FULLEXT)/.packlist"

uninstall_from_sitedirs ::
	$(NOECHO) $(UNINSTALL) "$(SITEARCHEXP)/auto/$(FULLEXT)/.packlist"

uninstall_from_vendordirs ::
	$(NOECHO) $(UNINSTALL) "$(VENDORARCHEXP)/auto/$(FULLEXT)/.packlist"


# --- MakeMaker force section:
# Phony target to force checking subdirectories.
FORCE :
	$(NOECHO) $(NOOP)


# --- MakeMaker perldepend section:
PERL_HDRS = \
        $(PERL_INCDEP)/EXTERN.h            \
        $(PERL_INCDEP)/INTERN.h            \
        $(PERL_INCDEP)/XSUB.h            \
        $(PERL_INCDEP)/av.h            \
        $(PERL_INCDEP)/bitcount.h            \
        $(PERL_INCDEP)/charclass_invlists.h            \
        $(PERL_INCDEP)/config.h            \
        $(PERL_INCDEP)/cop.h            \
        $(PERL_INCDEP)/cv.h            \
        $(PERL_INCDEP)/dosish.h            \
        $(PERL_INCDEP)/ebcdic_tables.h            \
        $(PERL_INCDEP)/embed.h            \
        $(PERL_INCDEP)/embedvar.h            \
        $(PERL_INCDEP)/fakesdio.h            \
        $(PERL_INCDEP)/feature.h            \
        $(PERL_INCDEP)/form.h            \
        $(PERL_INCDEP)/git_version.h            \
        $(PERL_INCDEP)/gv.h            \
        $(PERL_INCDEP)/handy.h            \
        $(PERL_INCDEP)/hv.h            \
        $(PERL_INCDEP)/hv_func.h            \
        $(PERL_INCDEP)/hv_macro.h            \
        $(PERL_INCDEP)/inline.h            \
        $(PERL_INCDEP)/intrpvar.h            \
        $(PERL_INCDEP)/invlist_inline.h            \
        $(PERL_INCDEP)/iperlsys.h            \
        $(PERL_INCDEP)/keywords.h            \
        $(PERL_INCDEP)/l1_char_class_tab.h            \
        $(PERL_INCDEP)/locale_table.h            \
        $(PERL_INCDEP)/malloc_ctl.h            \
        $(PERL_INCDEP)/metaconfig.h            \
        $(PERL_INCDEP)/mg.h            \
        $(PERL_INCDEP)/mg_data.h            \
        $(PERL_INCDEP)/mg_raw.h            \
        $(PERL_INCDEP)/mg_vtable.h            \
        $(PERL_INCDEP)/mydtrace.h            \
        $(PERL_INCDEP)/nostdio.h            \
        $(PERL_INCDEP)/op.h            \
        $(PERL_INCDEP)/op_reg_common.h            \
        $(PERL_INCDEP)/opcode.h            \
        $(PERL_INCDEP)/opnames.h            \
        $(PERL_INCDEP)/overload.h            \
        $(PERL_INCDEP)/pad.h            \
        $(PERL_INCDEP)/parser.h            \
        $(PERL_INCDEP)/patchlevel.h            \
        $(PERL_INCDEP)/perl.h            \
        $(PERL_INCDEP)/perl_inc_macro.h            \
        $(PERL_INCDEP)/perl_langinfo.h            \
        $(PERL_INCDEP)/perl_siphash.h            \
        $(PERL_INCDEP)/perlapi.h            \
        $(PERL_INCDEP)/perlio.h            \
        $(PERL_INCDEP)/perliol.h            \
        $(PERL_INCDEP)/perlsdio.h            \
        $(PERL_INCDEP)/perlstatic.h            \
        $(PERL_INCDEP)/perlvars.h            \
        $(PERL_INCDEP)/perly.h            \
        $(PERL_INCDEP)/pp.h            \
        $(PERL_INCDEP)/pp_proto.h            \
        $(PERL_INCDEP)/proto.h            \
        $(PERL_INCDEP)/reentr.h            \
        $(PERL_INCDEP)/regcharclass.h            \
        $(PERL_INCDEP)/regcomp.h            \
        $(PERL_INCDEP)/regcomp_internal.h            \
        $(PERL_INCDEP)/regexp.h            \
        $(PERL_INCDEP)/reginline.h            \
        $(PERL_INCDEP)/regnodes.h            \
        $(PERL_INCDEP)/sbox32_hash.h            \
        $(PERL_INCDEP)/scope.h            \
        $(PERL_INCDEP)/scope_types.h            \
        $(PERL_INCDEP)/sv.h            \
        $(PERL_INCDEP)/sv_inline.h            \
        $(PERL_INCDEP)/thread.h            \
        $(PERL_INCDEP)/time64.h            \
        $(PERL_INCDEP)/time64_config.h            \
        $(PERL_INCDEP)/uni_keywords.h            \
        $(PERL_INCDEP)/unicode_constants.h            \
        $(PERL_INCDEP)/unixish.h            \
        $(PERL_INCDEP)/utf8.h            \
        $(PERL_INCDEP)/utfebcdic.h            \
        $(PERL_INCDEP)/util.h            \
        $(PERL_INCDEP)/uudmap.h            \
        $(PERL_INCDEP)/vutil.h            \
        $(PERL_INCDEP)/warnings.h            \
        $(PERL_INCDEP)/zaphod32_hash.h            

$(OBJECT) : $(PERL_HDRS)

t/MyTest_xsgen.cc t/cookbook/cookbook_xsgen.cc t/typemap/callback_dispatcher_xsgen.cc t/typemap/object/object_xsgen.cc t/typemap/typemap_xsgen.cc : $(XSUBPPDEPS)


# --- MakeMaker makefile section:

$(OBJECT) : $(FIRST_MAKEFILE)

# We take a very conservative approach here, but it's worth it.
# We move Makefile to Makefile.old here to avoid gnu make looping.
$(FIRST_MAKEFILE) : Makefile.PL $(CONFIGDEP)
	$(NOECHO) $(ECHO) "Makefile out-of-date with respect to $?"
	$(NOECHO) $(ECHO) "Cleaning current config before rebuilding Makefile..."
	-$(NOECHO) $(RM_F) $(MAKEFILE_OLD)
	-$(NOECHO) $(MV)   $(FIRST_MAKEFILE) $(MAKEFILE_OLD)
	- $(MAKE) $(USEMAKEFILE) $(MAKEFILE_OLD) clean $(DEV_NULL)
	$(PERLRUN) Makefile.PL 
	$(NOECHO) $(ECHO) "==> Your Makefile has been rebuilt. <=="
	$(NOECHO) $(ECHO) "==> Please rerun the $(MAKE) command.  <=="
	$(FALSE)



# --- MakeMaker staticmake section:

# --- MakeMaker makeaperl section ---
MAP_TARGET    = perl
FULLPERL      = "/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/bin/perl"
MAP_PERLINC   = "-Iblib/arch" "-Iblib/lib" "-I/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1/x86_64-linux" "-I/home/s.aleinikov/perlbrew/perls/perl-5.40.1-fd/lib/5.40.1"

$(MAP_TARGET) :: $(MAKE_APERL_FILE)
	$(MAKE) $(USEMAKEFILE) $(MAKE_APERL_FILE) $@

$(MAKE_APERL_FILE) : static $(FIRST_MAKEFILE) pm_to_blib
	$(NOECHO) $(ECHO) Writing \"$(MAKE_APERL_FILE)\" for this $(MAP_TARGET)
	$(NOECHO) $(PERLRUNINST) \
		Makefile.PL DIR="" \
		MAKEFILE=$(MAKE_APERL_FILE) LINKTYPE=static \
		MAKEAPERL=1 NORECURS=1 CCCDLFLAGS=


# --- MakeMaker test section:
TEST_VERBOSE=0
TEST_TYPE=test_$(LINKTYPE)
TEST_FILE = test.pl
TEST_FILES = t/*.t
TESTDB_SW = -d

testdb :: testdb_$(LINKTYPE)
	$(NOECHO) $(NOOP)

test :: $(TEST_TYPE)
	$(NOECHO) $(NOOP)

# Occasionally we may face this degenerate target:
test_ : test_dynamic
	$(NOECHO) $(NOOP)

subdirs-test_dynamic : dynamic pure_all

test_dynamic :: subdirs-test_dynamic
	PERL_DL_NONLAZY=1 $(FULLPERLRUN) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_dynamic :: dynamic pure_all
	PERL_DL_NONLAZY=1 $(FULLPERLRUN) $(TESTDB_SW) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)

subdirs-test_static : static pure_all

test_static :: subdirs-test_static $(MAP_TARGET)
	PERL_DL_NONLAZY=1 "/home/s.aleinikov/poker/meia/plus/XS-Framework/$(MAP_TARGET)" $(MAP_PERLINC) "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness($(TEST_VERBOSE), '$(INST_LIB)', '$(INST_ARCHLIB)')" $(TEST_FILES)

testdb_static :: static pure_all $(MAP_TARGET)
	PERL_DL_NONLAZY=1 "/home/s.aleinikov/poker/meia/plus/XS-Framework/$(MAP_TARGET)" $(MAP_PERLINC) "-I$(INST_LIB)" "-I$(INST_ARCHLIB)" $(TEST_FILE)



# --- MakeMaker ppd section:
# Creates a PPD (Perl Package Description) for a binary distribution.
ppd :
	$(NOECHO) $(ECHO) '<SOFTPKG NAME="MyTest" VERSION="0.0.0">' > MyTest.ppd
	$(NOECHO) $(ECHO) '    <ABSTRACT>test module</ABSTRACT>' >> MyTest.ppd
	$(NOECHO) $(ECHO) '    <AUTHOR></AUTHOR>' >> MyTest.ppd
	$(NOECHO) $(ECHO) '    <IMPLEMENTATION>' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <REQUIRE NAME="Test::Catch" VERSION="v2.0.2" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <REQUIRE NAME="XS::Install" VERSION="v1.4.0" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <REQUIRE NAME="XS::libcatch" VERSION="v3.7.1.1" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <REQUIRE NAME="XS::libpanda" VERSION="v1.5.11" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <REQUIRE NAME="next::XS" VERSION="v1.0.8" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <ARCHITECTURE NAME="x86_64-linux-5.40" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '        <CODEBASE HREF="" />' >> MyTest.ppd
	$(NOECHO) $(ECHO) '    </IMPLEMENTATION>' >> MyTest.ppd
	$(NOECHO) $(ECHO) '</SOFTPKG>' >> MyTest.ppd


# --- MakeMaker pm_to_blib section:

pm_to_blib : $(FIRST_MAKEFILE) $(TO_INST_PM)
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
	  'lib/XS/ErrorCode.pm' '$(INST_ARCHLIB)/XS/ErrorCode.pm' \
	  'lib/XS/ErrorCode.pod' '$(INST_ARCHLIB)/XS/ErrorCode.pod' \
	  'lib/XS/Framework.pm' '$(INST_ARCHLIB)/XS/Framework.pm' \
	  'lib/XS/Framework.pod' '$(INST_ARCHLIB)/XS/Framework.pod' \
	  'lib/XS/Framework/CallbackDispatcher.pm' '$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher.pm' \
	  'lib/XS/Framework/CallbackDispatcher.pod' '$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher.pod' \
	  'lib/XS/Framework/CallbackDispatcher/Event.pm' '$(INST_ARCHLIB)/XS/Framework/CallbackDispatcher/Event.pm' \
	  'lib/XS/Framework/Manual/Cookbook.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/Cookbook.pod' \
	  'lib/XS/Framework/Manual/SVAPI.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Array.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Array.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Glob.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Glob.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Hash.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Hash.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Io.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Io.pod' \
	  'lib/XS/Framework/Manual/SVAPI/List.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/List.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Object.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Object.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Ref.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Ref.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Scalar.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Scalar.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Scope.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Scope.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Simple.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Simple.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Stash.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Stash.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Sub.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Sub.pod' \
	  'lib/XS/Framework/Manual/SVAPI/Sv.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/Sv.pod' \
	  'lib/XS/Framework/Manual/SVAPI/exceptions.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/exceptions.pod' \
	  'lib/XS/Framework/Manual/SVAPI/perl_destroy.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/perl_destroy.pod' \
	  'lib/XS/Framework/Manual/SVAPI/threads.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/SVAPI/threads.pod' \
	  'lib/XS/Framework/Manual/Typemap.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/Typemap.pod' \
	  'lib/XS/Framework/Manual/recipe01.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe01.pod' \
	  'lib/XS/Framework/Manual/recipe02.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe02.pod' \
	  'lib/XS/Framework/Manual/recipe03.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe03.pod' 
	$(NOECHO) $(ABSPERLRUN) -MExtUtils::Install -e 'pm_to_blib({@ARGV}, '\''$(INST_LIB)/auto'\'', q[$(PM_FILTER)], '\''$(PERM_DIR)'\'')' -- \
	  'lib/XS/Framework/Manual/recipe04.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe04.pod' \
	  'lib/XS/Framework/Manual/recipe05.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe05.pod' \
	  'lib/XS/Framework/Manual/recipe06.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe06.pod' \
	  'lib/XS/Framework/Manual/recipe07.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe07.pod' \
	  'lib/XS/Framework/Manual/recipe08.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe08.pod' \
	  'lib/XS/Framework/Manual/recipe09.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe09.pod' \
	  'lib/XS/Framework/Manual/recipe10.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe10.pod' \
	  'lib/XS/Framework/Manual/recipe11.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe11.pod' \
	  'lib/XS/Framework/Manual/recipe12.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe12.pod' \
	  'lib/XS/Framework/Manual/recipe13.pod' '$(INST_ARCHLIB)/XS/Framework/Manual/recipe13.pod' \
	  'lib/XS/Framework/ParseXS.pm' '$(INST_ARCHLIB)/XS/Framework/ParseXS.pm' \
	  'lib/XS/STL/ErrorCategory.pm' '$(INST_ARCHLIB)/XS/STL/ErrorCategory.pm' \
	  'lib/XS/STL/ErrorCategory.pod' '$(INST_ARCHLIB)/XS/STL/ErrorCategory.pod' \
	  'lib/XS/STL/ErrorCode.pm' '$(INST_ARCHLIB)/XS/STL/ErrorCode.pm' \
	  'lib/XS/STL/ErrorCode.pod' '$(INST_ARCHLIB)/XS/STL/ErrorCode.pod' 
	$(NOECHO) $(TOUCH) pm_to_blib


# --- MakeMaker selfdocument section:

# here so even if top_targets is overridden, these will still be defined
# gmake will silently still work if any are .PHONY-ed but nmake won't

static ::
	$(NOECHO) $(NOOP)

dynamic ::
	$(NOECHO) $(NOOP)

config ::
	$(NOECHO) $(NOOP)


# --- MakeMaker postamble section:
XSUBPPRUN = $(PERLRUN) -Ilib -MXS::Framework::ParseXS -MXS::Install::ParseXS $(XSUBPP)

t/MyTest_xsgen.cc : t/MyTest.xs  $(FIRST_MAKEFILE)
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/MyTest.xs > t/MyTest.xsc
	$(MV) t/MyTest.xsc t/MyTest_xsgen.cc

t/typemap/callback_dispatcher_xsgen.cc : t/typemap/callback_dispatcher.xs  $(FIRST_MAKEFILE)
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/callback_dispatcher.xs > t/typemap/callback_dispatcher.xsc
	$(MV) t/typemap/callback_dispatcher.xsc t/typemap/callback_dispatcher_xsgen.cc

t/typemap/typemap_xsgen.cc : t/typemap/typemap.xs t/typemap/not_null.xsi t/typemap/error.xsi t/typemap/const.xsi t/typemap/primitives.xsi t/typemap/svapi.xsi t/typemap/container.xsi t/typemap/svrefs.xsi t/typemap/expected.xsi $(FIRST_MAKEFILE)
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/typemap.xs > t/typemap/typemap.xsc
	$(MV) t/typemap/typemap.xsc t/typemap/typemap_xsgen.cc

t/typemap/object/object_xsgen.cc : t/typemap/object/object.xs t/typemap/object/casting.xsi t/typemap/object/join.xsi t/typemap/object/single.xsi t/typemap/object/child.xsi t/typemap/object/refcnt.xsi t/typemap/object/mixin.xsi t/typemap/object/foreign.xsi t/typemap/object/threads.xsi t/typemap/object/static_cast.xsi t/typemap/object/avhv.xsi t/typemap/object/backref.xsi $(FIRST_MAKEFILE)
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/typemap/object/object.xs > t/typemap/object/object.xsc
	$(MV) t/typemap/object/object.xsc t/typemap/object/object_xsgen.cc

t/cookbook/cookbook_xsgen.cc : t/cookbook/cookbook.xs t/cookbook/recipe04.xsi t/cookbook/recipe10.xsi t/cookbook/recipe05.xsi t/cookbook/recipe02.xsi t/cookbook/recipe01.xsi t/cookbook/recipe09.xsi t/cookbook/recipe06.xsi t/cookbook/recipe08.xsi t/cookbook/recipe13.xsi t/cookbook/recipe12.xsi t/cookbook/recipe11.xsi t/cookbook/recipe03.xsi t/cookbook/recipe07.xsi $(FIRST_MAKEFILE)
	$(XSUBPPRUN) $(XSPROTOARG) $(XSUBPPARGS) -csuffix _xsgen.cc $(XSUBPP_EXTRA_ARGS) t/cookbook/cookbook.xs > t/cookbook/cookbook.xsc
	$(MV) t/cookbook/cookbook.xsc t/cookbook/cookbook_xsgen.cc

t/typemap/function$(OBJ_EXT) : src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/error.h src/xs/Array.h src/xs/typemap/base.h src/xs/Object.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Stash.h src/xs/typemap.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/function.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h

t/typemap/ref$(OBJ_EXT) : src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/catch.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h

t/svapi/array$(OBJ_EXT) : src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h

t/svapi/glob$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h

t/svapi/hash$(OBJ_EXT) : src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs.h src/xs/Object.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h

t/svapi/io$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/typemap/error.h src/xs/Array.h src/xs/typemap/base.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h

t/svapi/object$(OBJ_EXT) : src/xs/catch.h src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Simple.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/typemap/containers.h t/svapi/test.h src/xs/basic.h src/xs/KeyProxy.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/object.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h

t/svapi/ref$(OBJ_EXT) : src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/catch.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/KeyProxy.h src/xs/basic.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h

t/svapi/scalar$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h t/svapi/test.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h

t/svapi/scope$(OBJ_EXT) : src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/catch.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scope.h src/xs/Object.h src/xs.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h

t/svapi/simple$(OBJ_EXT) : src/xs/Simple.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/catch.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs.h src/xs/Object.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/containers.h src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h

t/svapi/stash$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Sub.h src/xs/Simple.h src/xs/catch.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/typemap/object.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs.h src/xs/Object.h src/xs/basic.h src/xs/KeyProxy.h t/svapi/test.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h

t/svapi/sub$(OBJ_EXT) : src/xs/function.h src/xs/catch.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/Simple.h t/svapi/test.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Object.h src/xs.h

t/svapi/sv$(OBJ_EXT) : src/xs/catch.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h t/svapi/test.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h src/xs.h src/xs/Object.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h

t/typemap/callback_dispatcher_xsgen$(OBJ_EXT) : src/xs/HashEntry.h src/xs/Hash.h src/xs/Io.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/function.h src/xs/catch.h src/xs/CallbackDispatcher.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/svapi.h src/xs/typemap/auto.h src/xs/typemap/string.h src/xs/Glob.h src/xs/typemap/optional.h src/xs/Sv.h src/xs/typemap.h src/xs/Stash.h src/xs/typemap/containers.h src/xs/basic.h src/xs/KeyProxy.h src/xs/Object.h src/xs.h src/xs/Array.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Scalar.h src/xs/Backref.h src/xs/typemap/object.h

t/typemap/typemap_xsgen$(OBJ_EXT) : src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/Stash.h src/xs/typemap.h src/xs/Sv.h src/xs/typemap/containers.h src/xs/KeyProxy.h src/xs/basic.h src/xs.h src/xs/Object.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/object.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/catch.h t/typemap/tmtest.h src/xs/Simple.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/typemap/expected.h

t/MyTest_xsgen$(OBJ_EXT) : src/xs/Sub.h src/xs/typemap/svapi.h src/xs/typemap/auto.h src/xs/Simple.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/Io.h src/xs/Hash.h src/xs/HashEntry.h src/xs/catch.h src/xs/Array.h src/xs/typemap/error.h src/xs/typemap/base.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/Glob.h src/xs/typemap/string.h src/xs/KeyProxy.h src/xs/basic.h src/xs/typemap/containers.h

t/typemap/object/object_xsgen$(OBJ_EXT) : src/xs/typemap/auto.h src/xs/Sub.h src/xs/typemap/svapi.h t/typemap/tmtest.h src/xs/Simple.h src/xs/CallbackDispatcher.h src/xs/catch.h src/xs/function.h src/xs/typemap/numeric.h src/xs/Ref.h src/xs/HashEntry.h src/xs/Io.h src/xs/Hash.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h src/xs/typemap/base.h src/xs/Array.h src/xs/typemap/error.h src/xs/Object.h src/xs.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/typemap.h src/xs/Stash.h src/xs/Sv.h src/xs/typemap/optional.h src/xs/typemap/string.h src/xs/Glob.h

t/cookbook/cookbook_xsgen$(OBJ_EXT) : src/xs/Ref.h src/xs/typemap/numeric.h src/xs/Hash.h src/xs/Io.h src/xs/HashEntry.h src/xs/catch.h src/xs/Sub.h src/xs/typemap/auto.h src/xs/typemap/svapi.h src/xs/Simple.h src/xs/Sv.h src/xs/Stash.h src/xs/typemap.h src/xs/Glob.h src/xs/typemap/string.h src/xs/typemap/optional.h src/xs/basic.h src/xs/KeyProxy.h src/xs/typemap/containers.h src/xs/typemap/base.h src/xs/typemap/error.h src/xs/Array.h src/xs.h src/xs/Object.h src/xs/typemap/object.h src/xs/Backref.h src/xs/Scalar.h

object : $(OBJECT)

sync_bin_deps:
	$(PERL) -MXS::Install::Util -e 'XS::Install::Util::cmd_sync_bin_deps()' MyTest XS::libpanda Test::Catch XS::Install next::XS XS::libcatch

install :: sync_bin_deps

# End.
