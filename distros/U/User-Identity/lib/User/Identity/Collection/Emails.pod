=encoding utf8

=head1 NAME

User::Identity::Collection::Emails - a collection of email roles

=head1 INHERITANCE

 User::Identity::Collection::Emails
   is a User::Identity::Collection
   is a User::Identity::Item

=head1 SYNOPSIS

=head1 DESCRIPTION

The C<User::Identity::Collection::Emails> object maintains a set
L<Mail::Identity|Mail::Identity> objects, each describing a role which the user has
in e-mail traffic.

Extends L<"DESCRIPTION" in User::Identity::Collection|User::Identity::Collection/"DESCRIPTION">.

=head1 OVERLOADED

Extends L<"OVERLOADED" in User::Identity::Collection|User::Identity::Collection/"OVERLOADED">.

=over 4

=item overload: B<""> stringification

Inherited, see L<User::Identity::Collection/"OVERLOADED">

=item overload: B<@{}> array dereference

Inherited, see L<User::Identity::Collection/"OVERLOADED">

=back

=head1 METHODS

Extends L<"METHODS" in User::Identity::Collection|User::Identity::Collection/"METHODS">.

=head2 Constructors

Extends L<"Constructors" in User::Identity::Collection|User::Identity::Collection/"Constructors">.

=over 4

=item $class-E<gt>B<new>( [$name], %options )

Z<>

 -Option     --Defined in                --Default
  description  User::Identity::Item        undef
  item_type    User::Identity::Collection  Mail::Identity
  name         User::Identity::Item        'emails'
  parent       User::Identity::Item        undef
  roles        User::Identity::Collection  undef

=over 2

=item description => STRING

=item item_type => CLASS

=item name => STRING

=item parent => OBJECT

=item roles => ROLE|ARRAY

=back

=back

=head2 Attributes

Extends L<"Attributes" in User::Identity::Collection|User::Identity::Collection/"Attributes">.

=over 4

=item $obj-E<gt>B<description>()

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<itemType>()

Inherited, see L<User::Identity::Collection/"Attributes">

=item $obj-E<gt>B<name>( [$newname] )

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<roles>()

Inherited, see L<User::Identity::Collection/"Attributes">

=back

=head2 Collections

Extends L<"Collections" in User::Identity::Collection|User::Identity::Collection/"Collections">.

=over 4

=item $obj-E<gt>B<add>($collection, $role)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<addCollection>( $object | <[$type], %options> )

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<collection>($name)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<parent>( [$parent] )

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<removeCollection>($object|$name)

Inherited, see L<User::Identity::Item/"Collections">

=item $any-E<gt>B<type>()

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<user>()

Inherited, see L<User::Identity::Item/"Collections">

=back

=head2 Maintaining roles

Extends L<"Maintaining roles" in User::Identity::Collection|User::Identity::Collection/"Maintaining roles">.

=over 4

=item $obj-E<gt>B<addRole>($role|([$name], %options))

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<removeRole>($role|$name)

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<renameRole>( <$role|$oldname>, $newname )

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=item $obj-E<gt>B<sorted>()

Inherited, see L<User::Identity::Collection/"Maintaining roles">

=back

=head2 Searching

Extends L<"Searching" in User::Identity::Collection|User::Identity::Collection/"Searching">.

=over 4

=item $obj-E<gt>B<find>($name|CODE|undef)

Inherited, see L<User::Identity::Collection/"Searching">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: $object is not a collection.

The first argument is an object, but not of a class which extends
L<User::Identity::Collection|User::Identity::Collection>.
Cast by addCollection()

=item Error: Cannot create a $type to add this to my collection.

Some options are specified to create a C<$type> object, which is native to
this collection.  However, for some reason this failed.
Cast by addRole()

=item Error: Cannot load collection module for $type ($class).

Either the specified C<$type> does not exist, or that module named C<$class> returns
compilation errors.  If the type as specified in the warning is not
the name of a package, you specified a nickname which was not defined.
Maybe you forgot the 'require' the package which defines the nickname.
Cast by addCollection()

=item Error: Cannot rename $name into $newname: already exists

Cast by renameRole()

=item Error: Cannot rename $name into $newname: doesn't exist

Cast by renameRole()

=item Error: Creation of a collection via $class failed.

The C<$class> did compile, but it was not possible to create an object
of that class using the options you specified.
Cast by addCollection()

=item Error: Don't know what type of collection you want to add.

If you add a collection, it must either by a collection object or a
list of options which can be used to create a collection object.  In
the latter case, the type of collection must be specified.
Cast by addCollection()

=item Warning: No collection $name

The collection with C<$name> does not exist and can not be created.
Cast by add()

=item Error: Wrong type of role for $collection: requires a $expect but got a $type

Each C<$collection> groups sets of roles of one specific type (C<$expect>).  You
cannot add objects of a different C<$type>.
Cast by addRole()

=back

=head1 SEE ALSO

This module is part of User-Identity version 1.03,
built on September 12, 2025. Website: F<http://perl.overmeer.net/CPAN/>

=head1 LICENSE

For contributors see file ChangeLog.

This software is copyright (c) 2003-2025 by Mark Overmeer.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

