=encoding utf8

=head1 NAME

User::Identity::System - physical system of a person

=head1 INHERITANCE

 User::Identity::System
   is a User::Identity::Item

=head1 SYNOPSIS

  use User::Identity;
  use User::Identity::System;
  my $me   = User::Identity->new(...);
  my $server = User::Identity::System->new(...);
  $me->add(system => $server);

  # Simpler

  use User::Identity;
  my $me   = User::Identity->new(...);
  my $addr = $me->add(system => ...);

=head1 DESCRIPTION

The C<User::Identity::System> object contains the description of the
user's presence on a system.  The systems are collected
by an L<User::Identity::Collection::Systems|User::Identity::Collection::Systems> object.

Nearly all methods can return C<undef>.

Extends L<"DESCRIPTION" in User::Identity::Item|User::Identity::Item/"DESCRIPTION">.

=head1 METHODS

Extends L<"METHODS" in User::Identity::Item|User::Identity::Item/"METHODS">.

=head2 Constructors

Extends L<"Constructors" in User::Identity::Item|User::Identity::Item/"Constructors">.

=over 4

=item $class-E<gt>B<new>( [$name], %options )

Create a new system.  You can specify a name as first argument, or
in the OPTION list.  Without a specific name, the organization is used as name.

 -Option     --Defined in          --Default
  description  User::Identity::Item  undef
  hostname                           'localhost'
  location                           undef
  name         User::Identity::Item  <required>
  os                                 undef
  parent       User::Identity::Item  undef
  password                           undef
  username                           undef

=over 2

=item description => STRING

=item hostname => DOMAIN

The hostname of the described system.  It is preferred to use full
system names, not abbreviations.  For instance, you can better use
C<www.tux.aq> than C<www> to avoid confusion.

=item location => NICKNAME|OBJECT

The NICKNAME of a location which is defined for the same user.  You can
also specify a L<User::Identity::Location|User::Identity::Location> OBJECT.

=item name => STRING

=item os => STRING

The name of the operating system which is run on the server.  It is
advised to use the names as used by Perl's C<$^O> variable.  See the
perlvar man-page for this variable, and perlport for the possible
values.

=item parent => OBJECT

=item password => STRING

The password to be used to login.  This password must be un-encoded:
directly usable.  Be warned that storing un-encoded passwords is a
high security list.

=item username => STRING

The username to be used to login to this host.

=back

=back

=head2 Attributes

Extends L<"Attributes" in User::Identity::Item|User::Identity::Item/"Attributes">.

=over 4

=item $obj-E<gt>B<description>()

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<hostname>()

Z<>

=item $obj-E<gt>B<location>()

Returns the object which describes to which location this system relates.
The location may be used to find the name of the organization involved, or
to create a signature.  If no location is specified, C<undef> is returned.

=item $obj-E<gt>B<name>( [$newname] )

Inherited, see L<User::Identity::Item/"Attributes">

=item $obj-E<gt>B<os>()

Z<>

=item $obj-E<gt>B<password>()

Z<>

=item $obj-E<gt>B<username>()

Z<>

=back

=head2 Collections

Extends L<"Collections" in User::Identity::Item|User::Identity::Item/"Collections">.

=over 4

=item $obj-E<gt>B<add>($collection, $role)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<addCollection>( $object | <[$type], %options> )

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<collection>($name)

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<parent>( [$parent] )

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<removeCollection>($object|$name)

Inherited, see L<User::Identity::Item/"Collections">

=item $any-E<gt>B<type>()

Inherited, see L<User::Identity::Item/"Collections">

=item $obj-E<gt>B<user>()

Inherited, see L<User::Identity::Item/"Collections">

=back

=head2 Searching

Extends L<"Searching" in User::Identity::Item|User::Identity::Item/"Searching">.

=over 4

=item $obj-E<gt>B<find>($collection, $role)

Inherited, see L<User::Identity::Item/"Searching">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: $object is not a collection.

The first argument is an object, but not of a class which extends
L<User::Identity::Collection|User::Identity::Collection>.
Cast by addCollection()

=item Error: Cannot load collection module for $type ($class).

Either the specified C<$type> does not exist, or that module named C<$class> returns
compilation errors.  If the type as specified in the warning is not
the name of a package, you specified a nickname which was not defined.
Maybe you forgot the 'require' the package which defines the nickname.
Cast by addCollection()

=item Error: Creation of a collection via $class failed.

The C<$class> did compile, but it was not possible to create an object
of that class using the options you specified.
Cast by addCollection()

=item Error: Don't know what type of collection you want to add.

If you add a collection, it must either by a collection object or a
list of options which can be used to create a collection object.  In
the latter case, the type of collection must be specified.
Cast by addCollection()

=item Warning: No collection $name

The collection with C<$name> does not exist and can not be created.
Cast by add()

=back

=head1 SEE ALSO

This module is part of User-Identity version 1.03,
built on September 12, 2025. Website: F<http://perl.overmeer.net/CPAN/>

=head1 LICENSE

For contributors see file ChangeLog.

This software is copyright (c) 2003-2025 by Mark Overmeer.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

